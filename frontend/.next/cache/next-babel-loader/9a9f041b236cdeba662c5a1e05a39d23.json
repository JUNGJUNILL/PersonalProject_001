{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaLoadUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sagaJoin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchJoin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(sagaLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(sagaLogin),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(authSaga);\n\nimport axios from 'axios';\nimport jwtDeCoder from 'jwt-decode';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { JOIN_REQUEST, JOIN_SUCCESS, JOIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE } from '../reducers/auth'; //유저정보 유지 사이클 \n//------------------------------------------------------------------------\n\nfunction APILoadUser() {\n  return axios.get('/auth/', {\n    withCredentials: true\n  });\n}\n\n_c = APILoadUser;\n\nfunction sagaLoadUser() {\n  var _result;\n\n  return _regeneratorRuntime.wrap(function sagaLoadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(APILoadUser);\n\n        case 3:\n          _result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: _result.data.nick\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, sagaLoadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //------------------------------------------------------------------------\n//회원가입 사이클 \n//------------------------------------------------------------------------\n\n\nfunction APIJoin(data) {\n  console.log('data==>', data);\n  return axios.post('/auth/join', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c2 = APIJoin;\n\nfunction sagaJoin(action) {\n  var _result2;\n\n  return _regeneratorRuntime.wrap(function sagaJoin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(action, action.data);\n          _context3.next = 4;\n          return call(APIJoin, action.data);\n\n        case 4:\n          _result2 = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: JOIN_SUCCESS,\n            data: _result2\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: JOIN_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchJoin() {\n  return _regeneratorRuntime.wrap(function watchJoin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(JOIN_REQUEST, sagaJoin);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //------------------------------------------------------------------------\n//로그아웃 사이클\n//------------------------------------------------------------------------\n\n\nfunction APILogOut() {\n  return axios.get('/auth/logOut', {\n    withCredentials: true\n  });\n}\n\n_c3 = APILogOut;\n\nfunction sagaLogOut() {\n  var _result3;\n\n  return _regeneratorRuntime.wrap(function sagaLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(APILogOut);\n\n        case 3:\n          _result3 = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOGOUT_SUCCESS\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          alert('로그아웃 에러');\n          _context5.next = 13;\n          return put({\n            type: LOGOUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOGOUT_REQUEST, sagaLogOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //------------------------------------------------------------------------\n//로그인 사이클\n//------------------------------------------------------------------------\n\n\nfunction APILogin(data) {\n  //jwt 로그인\n  return axios.post('/auth/login', {\n    data: data\n  }, {\n    withCredentials: true\n  }); //passport local 로그인\n  //return axios.post('/auth/login',data,{withCredentials:true});\n} //카카오 로그인 \n\n\n_c4 = APILogin;\n\nfunction APILoginKakao() {\n  return axios.get('/auth/kakao/', {\n    withCredentials: true\n  });\n}\n\n_c5 = APILoginKakao;\n\nfunction APILoginKakaoSDK() {\n  return axios.get('/auth/kakaoTest/', {\n    withCredentials: true\n  });\n}\n\n_c6 = APILoginKakaoSDK;\n\nfunction sagaLogin(action) {\n  var _result4, decoded;\n\n  return _regeneratorRuntime.wrap(function sagaLogin$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('sagaLogin ==>', action.data, 'Kakao.isInitialized()=>', Kakao.isInitialized());\n\n          if (!Kakao.isInitialized()) {\n            _context7.next = 9;\n            break;\n          }\n\n          console.log('씌발 제발좀....');\n          Kakao.Auth.authorize({\n            redirectUri: 'http://captainryan.gonetis.com:3095/api/auth/kakaoTest' // redirectUri: 'http://captainryan.gonetis.com:3095/api/auth/kakao/',\n            // scope: 'profile', \n            // //redirectUri: 'http://captainryan.gonetis.com:3001/'\n\n          });\n          _context7.next = 7;\n          return call(APILoginKakaoSDK);\n\n        case 7:\n          _result4 = _context7.sent;\n          console.log('result.data', _result4);\n\n        case 9:\n          if (!(action.data.loginType === 'local')) {\n            _context7.next = 15;\n            break;\n          }\n\n          _context7.next = 12;\n          return call(APILogin, action.data);\n\n        case 12:\n          _result4 = _context7.sent;\n          _context7.next = 19;\n          break;\n\n        case 15:\n          if (!(action.data.loginType === 'kakao')) {\n            _context7.next = 19;\n            break;\n          }\n\n          _context7.next = 18;\n          return call(APILoginKakao);\n\n        case 18:\n          _result4 = _context7.sent;\n\n        case 19:\n          // console.log('result' , result.data.token); \n          decoded = _result4; //jwtDeCoder(result.data.token); \n\n          _context7.next = 22;\n          return put({\n            type: LOGIN_SUCCESS,\n            data: decoded //decoded.nick\n\n          });\n\n        case 22:\n          _context7.next = 29;\n          break;\n\n        case 24:\n          _context7.prev = 24;\n          _context7.t0 = _context7[\"catch\"](0);\n          alert('로그인 에러', result);\n          _context7.next = 29;\n          return put({\n            type: LOGIN_FAILURE,\n            error: _context7.t0\n          });\n\n        case 29:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 24]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOGIN_REQUEST, sagaLogin);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} //------------------------------------------------------------------------\n\n\nexport default function authSaga() {\n  return _regeneratorRuntime.wrap(function authSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchJoin), fork(watchLogin), fork(watchLoadUser), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"APILoadUser\");\n$RefreshReg$(_c2, \"APIJoin\");\n$RefreshReg$(_c3, \"APILogOut\");\n$RefreshReg$(_c4, \"APILogin\");\n$RefreshReg$(_c5, \"APILoginKakao\");\n$RefreshReg$(_c6, \"APILoginKakaoSDK\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/sagas/authSaga.js"],"names":["sagaLoadUser","watchLoadUser","sagaJoin","watchJoin","sagaLogOut","watchLogOut","sagaLogin","watchLogin","authSaga","axios","jwtDeCoder","all","fork","takeLatest","takeEvery","put","delay","call","JOIN_REQUEST","JOIN_SUCCESS","JOIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","APILoadUser","get","withCredentials","result","type","data","nick","console","error","APIJoin","log","post","action","APILogOut","alert","APILogin","APILoginKakao","APILoginKakaoSDK","Kakao","isInitialized","Auth","authorize","redirectUri","loginType","decoded"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport jwtDeCoder from 'jwt-decode'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {JOIN_REQUEST,\r\n     JOIN_SUCCESS,\r\n     JOIN_FAILURE,\r\n     LOGIN_REQUEST,\r\n     LOGIN_SUCCESS,\r\n     LOGIN_FAILURE, \r\n     LOAD_USER_REQUEST,\r\n     LOAD_USER_SUCCESS,\r\n     LOAD_USER_FAILURE,\r\n     LOGOUT_REQUEST,\r\n     LOGOUT_SUCCESS,\r\n     LOGOUT_FAILURE,\r\n    } \r\nfrom '../reducers/auth'; \r\n\r\n\r\n//유저정보 유지 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APILoadUser(){\r\n\r\n    return axios.get('/auth/' , {withCredentials:true}); \r\n}\r\n\r\nfunction* sagaLoadUser(){\r\n\r\n    try{\r\n        const result = yield call(APILoadUser);\r\n        yield put({\r\n                type:LOAD_USER_SUCCESS, \r\n                data: result.data.nick,           \r\n        }); \r\n\r\n    }catch(e){\r\n        console.error(e); \r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e, \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST,sagaLoadUser);\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//회원가입 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APIJoin(data){\r\n    console.log('data==>' , data); \r\n    return axios.post('/auth/join',{data},{withCredentials:true}); \r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction* sagaJoin(action){\r\n    \r\n    try{\r\n       console.log(action, action.data);\r\n        const result = yield call(APIJoin,action.data); \r\n        yield put({\r\n            type:JOIN_SUCCESS,\r\n            data: result,\r\n        }); \r\n\r\n    }catch(e){\r\n\r\n      console.error(e); \r\n\r\n        yield put({\r\n            type:JOIN_FAILURE,\r\n            error:e, \r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction* watchJoin(){\r\n    yield takeLatest(JOIN_REQUEST,sagaJoin)\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//로그아웃 사이클\r\n//------------------------------------------------------------------------\r\nfunction APILogOut(){\r\n\r\n    return axios.get('/auth/logOut',{withCredentials:true});\r\n\r\n\r\n}\r\n\r\nfunction* sagaLogOut(){\r\n\r\n\r\n    try{\r\n      const result =   yield call(APILogOut); \r\n    \r\n\r\n        yield put({\r\n            type:LOGOUT_SUCCESS,\r\n        }); \r\n\r\n\r\n    }catch(e){\r\n        alert('로그아웃 에러'); \r\n        yield put({\r\n            type:LOGOUT_FAILURE, \r\n            error:e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOGOUT_REQUEST,sagaLogOut); \r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n//로그인 사이클\r\n//------------------------------------------------------------------------\r\nfunction APILogin(data){\r\n\r\n    //jwt 로그인\r\n    return axios.post('/auth/login',{data},{withCredentials:true});\r\n\r\n    //passport local 로그인\r\n    //return axios.post('/auth/login',data,{withCredentials:true});\r\n}\r\n//카카오 로그인 \r\nfunction APILoginKakao(){\r\n\r\n    return axios.get('/auth/kakao/',{withCredentials:true});\r\n}\r\n\r\nfunction APILoginKakaoSDK(){\r\n    return axios.get('/auth/kakaoTest/',{withCredentials:true});\r\n}\r\n\r\nfunction* sagaLogin(action){\r\n\r\n\r\n    try{\r\n        \r\n        console.log('sagaLogin ==>',action.data, 'Kakao.isInitialized()=>',Kakao.isInitialized());\r\n   \r\n        let result; \r\n        if(Kakao.isInitialized()){\r\n           console.log('씌발 제발좀....');\r\n            Kakao.Auth.authorize({\r\n                 redirectUri: 'http://captainryan.gonetis.com:3095/api/auth/kakaoTest',\r\n               // redirectUri: 'http://captainryan.gonetis.com:3095/api/auth/kakao/',\r\n            \r\n                // scope: 'profile', \r\n                // //redirectUri: 'http://captainryan.gonetis.com:3001/'\r\n              });\r\n            result = yield call(APILoginKakaoSDK); \r\n            console.log('result.data', result); \r\n        } \r\n        if(action.data.loginType==='local'){\r\n            result = yield call(APILogin,action.data); \r\n        }else if(action.data.loginType==='kakao'){\r\n            result = yield call(APILoginKakao); \r\n        }\r\n      \r\n       // console.log('result' , result.data.token); \r\n        const decoded = result;//jwtDeCoder(result.data.token); \r\n\r\n        yield put({\r\n            type:LOGIN_SUCCESS,\r\n            data: decoded,//decoded.nick\r\n        }); \r\n\r\n\r\n    }catch(e){\r\n        alert('로그인 에러',result); \r\n        yield put({\r\n            type:LOGIN_FAILURE, \r\n            error:e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOGIN_REQUEST,sagaLogin); \r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\nexport default function* authSaga(){\r\n\r\n\r\n    yield all([\r\n        fork(watchJoin), \r\n        fork(watchLogin), \r\n        fork(watchLoadUser), \r\n        fork(watchLogOut), \r\n        \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}