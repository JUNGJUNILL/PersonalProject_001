{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments copy.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport Comment1001ByComments from './mainPosts_1001_commentByComments';\nimport CommentTextArea from './mainPosts_1001_textArea';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST } from '../../reducers/mainPosts_1001';\nimport { Badge } from 'antd';\n\nconst Comments1001 = () => {\n  console.log('댓글 commentList', commentList);\n  const {\n    mainPosts_1001Comments\n  } = useSelector(state => state.mainPosts_1001);\n  const dispatch = useDispatch();\n  const ref = createRef();\n  const blank_pattern = /^\\s+|\\s+&/g;\n  const {\n    0: array,\n    1: setArray\n  } = useState([]);\n  useEffect(() => {\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: '10000001',\n        nickName: '2222',\n        postFlag: '1001',\n        who: 'nick1111'\n      }\n    });\n  }, []);\n  return __jsx(React.Fragment, null, mainPosts_1001Comments && mainPosts_1001Comments.map((v, i) => __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, v.commentId))));\n};\n\nexport default memo(Comments1001);","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments copy.js"],"names":["React","useCallback","useEffect","useState","createRef","memo","useDispatch","useSelector","custumDateFormat","Comment1001ByComments","CommentTextArea","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","Badge","Comments1001","console","log","commentList","mainPosts_1001Comments","state","mainPosts_1001","dispatch","ref","blank_pattern","array","setArray","type","data","postId","nickName","postFlag","who","map","v","i","commentId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,IAA5D,QAAwE,OAAxE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,gBAAP,MAA8B,sCAA9B;AAEA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,eAAP,MAAkC,2BAAlC;AACA,SAAQC,cAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,SAEQC,6CAFR,EAGQC,+BAHR,QAKK,+BALL;AAMA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,YAAY,GAAG,MAAI;AAEjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BC,WAA7B;AACA,QAAM;AAACC,IAAAA;AAAD,MAA2Bb,WAAW,CAAEc,KAAD,IAASA,KAAK,CAACC,cAAhB,CAA5C;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,GAAG,GAAGpB,SAAS,EAArB;AACA,QAAMqB,aAAa,GAAG,YAAtB;AAEA,QAAM;AAAA,OAACC,KAAD;AAAA,OAASC;AAAT,MAAqBxB,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACd,+BADA;AAELe,MAAAA,IAAI,EAAC;AACHC,QAAAA,MAAM,EAAC,UADJ;AAEHC,QAAAA,QAAQ,EAAC,MAFN;AAGHC,QAAAA,QAAQ,EAAC,MAHN;AAIHC,QAAAA,GAAG,EAAC;AAJD;AAFA,KAAD,CAAR;AASH,GAVQ,EAUP,EAVO,CAAT;AAcJ,SACI,4BAECb,sBAAsB,IAAIA,sBAAsB,CAACc,GAAvB,CAA2B,CAACC,CAAD,EAAGC,CAAH,KAClD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CAAC,CAACE,SADP,CADJ,CADuB,CAF3B,CADJ;AAiBH,CAzCD;;AA2CA,eAAehC,IAAI,CAACW,YAAD,CAAnB","sourcesContent":["import React, { useCallback,useEffect, useState, createRef, memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\n\r\nimport Comment1001ByComments from './mainPosts_1001_commentByComments'\r\nimport CommentTextArea       from './mainPosts_1001_textArea'\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n        MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST,\r\n        MAINPOSTS_1001_COMMENTS_REQUEST\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\nimport { Badge } from 'antd';\r\n\r\nconst Comments1001 = ()=>{\r\n                \r\n        console.log('댓글 commentList',commentList);\r\n        const {mainPosts_1001Comments} = useSelector((state)=>state.mainPosts_1001);                 \r\n        const dispatch = useDispatch();\r\n        const ref = createRef(); \r\n        const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n        const [array , setArray] = useState([]); \r\n\r\n        useEffect(()=>{\r\n            dispatch({\r\n                type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n                data:{\r\n                  postId:'10000001',\r\n                  nickName:'2222',\r\n                  postFlag:'1001',\r\n                  who:'nick1111', \r\n                }\r\n              }); \r\n        },[])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {mainPosts_1001Comments && mainPosts_1001Comments.map((v,i)=>(\r\n            <div className='divTableRow' >\r\n                <div className=\"divTableCell\">\r\n                    {v.commentId}\r\n                </div>\r\n            </div>\r\n        ))}\r\n     \r\n        </>   \r\n\r\n\r\n                \r\n    )\r\n\r\n}\r\n\r\nexport default memo(Comments1001); "]},"metadata":{},"sourceType":"module"}