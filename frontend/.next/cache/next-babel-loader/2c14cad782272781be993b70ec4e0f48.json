{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\count.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { COUNT_PLUS_REQUEST, countMinusActionm, COUNT_MINUS_REQUEST } from '../reducers/count';\n\nconst Count = () => {\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.count); //store의 state를 불러오는 hook \n  //store의 state 중에서 count의 state를 불러온다.\n\n  const toggle = useCallback(param => () => {\n    if (param === 'plus') {\n      return dispatch({\n        type: COUNT_PLUS_REQUEST\n      });\n    } else if (param === 'minus') {\n      return dispatch({\n        type: COUNT_MINUS_REQUEST\n      });\n    } else {\n      return;\n    }\n  }, []);\n  const ref = createRef();\n\n  const testBtn = e => {\n    console.log(e.target.name);\n    console.log(ref.current);\n    console.log(ref.current.getElementById(\"good\").value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    ref: ref,\n    id: \"good\",\n    value: \"text01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    name: \"test01\",\n    value: \"\\uBC84\\uD2BC1\",\n    onClick: testBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 73\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 139\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a02\",\n    value: \"text02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    name: \"test02\",\n    value: \"\\uBC84\\uD2BC2\",\n    onClick: testBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 73\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 139\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a03\",\n    value: \"text03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC3\",\n    onClick: testBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 73\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 125\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a04\",\n    value: \"text04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC4\",\n    onClick: testBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 73\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 125\n    }\n  }));\n};\n\nexport default Count;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/count.js"],"names":["React","useCallback","createRef","useDispatch","useSelector","COUNT_PLUS_REQUEST","countMinusActionm","COUNT_MINUS_REQUEST","Count","dispatch","count","state","toggle","param","type","ref","testBtn","e","console","log","target","name","current","getElementById","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,kBAAR,EAA2BC,iBAA3B,EAA6CC,mBAA7C,QAAsE,mBAAtE;;AAGA,MAAMC,KAAK,GAAG,MAAK;AAGf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAMN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAA5B,CAJe,CAKc;AACA;;AAE7B,QAAME,MAAM,GAAGX,WAAW,CAACY,KAAK,IAAE,MAAI;AAElC,QAAGA,KAAK,KAAI,MAAZ,EAAmB;AAChB,aAAQJ,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAACT;AAAN,OAAD,CAAhB;AACF,KAFD,MAEM,IAAGQ,KAAK,KAAI,OAAZ,EAAoB;AACtB,aAAOJ,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAACP;AAAN,OAAD,CAAf;AACH,KAFK,MAED;AACD;AACH;AACJ,GATyB,EASxB,EATwB,CAA1B;AAaA,QAAMQ,GAAG,GAAGb,SAAS,EAArB;;AACA,QAAMc,OAAO,GAAIC,CAAD,IAAK;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,IAArB;AAEDH,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACO,OAAhB;AACCJ,IAAAA,OAAO,CAACC,GAAR,CAAaJ,GAAG,CAACO,OAAJ,CAAYC,cAAZ,CAA2B,MAA3B,EAAmCC,KAAhD;AAEH,GAND;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAET,GAAxB;AAA6B,IAAA,EAAE,EAAE,MAAjC;AAA0C,IAAA,KAAK,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACgE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,eAAzC;AAA+C,IAAA,OAAO,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhE,EACkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlI,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAED,GAAxB;AAA6B,IAAA,IAAI,EAAE,KAAnC;AAA0C,IAAA,KAAK,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAEgE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,eAAzC;AAA+C,IAAA,OAAO,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhE,EAEkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlI,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAED,GAAxB;AAA6B,IAAA,IAAI,EAAE,KAAnC;AAA0C,IAAA,KAAK,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAGgE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,eAA3B;AAAiC,IAAA,OAAO,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhE,EAGoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHpH,EAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAED,GAAxB;AAA6B,IAAA,IAAI,EAAE,KAAnC;AAA0C,IAAA,KAAK,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAIgE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,eAA3B;AAAiC,IAAA,OAAO,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJhE,EAIoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJpH,CADJ;AA6BH,CA5DD;;AA8DA,eAAeR,KAAf","sourcesContent":["import React, { useCallback ,createRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {COUNT_PLUS_REQUEST,countMinusActionm,COUNT_MINUS_REQUEST}from '../reducers/count';\r\n\r\n\r\nconst Count = () =>{\r\n\r\n\r\n    const dispatch = useDispatch(); \r\n    const count    = useSelector(state => state.count); \r\n                                 //store의 state를 불러오는 hook \r\n                                 //store의 state 중에서 count의 state를 불러온다.\r\n\r\n    const toggle = useCallback(param=>()=>{\r\n        \r\n        if(param ==='plus'){\r\n           return  dispatch({type:COUNT_PLUS_REQUEST}); \r\n        }else if(param ==='minus'){\r\n            return dispatch({type:COUNT_MINUS_REQUEST});  \r\n        }else{\r\n            return; \r\n        }\r\n    },[]); \r\n\r\n\r\n\r\n    const ref = createRef(); \r\n    const testBtn = (e)=>{\r\n        console.log(e.target.name);\r\n        \r\n       console.log(ref.current); \r\n        console.log( ref.current.getElementById(\"good\").value); \r\n      \r\n    }\r\n                                 \r\n                              \r\n    return (\r\n        <div>\r\n            <input type=\"text\" ref={ref} id={\"good\"}  value={\"text01\"}/><input type=\"button\" name=\"test01\" value=\"버튼1\" onClick={testBtn}/><br/>\r\n            <input type=\"text\" ref={ref} name={\"a02\"} value={\"text02\"}/><input type=\"button\" name=\"test02\" value=\"버튼2\" onClick={testBtn}/><br/>\r\n            <input type=\"text\" ref={ref} name={\"a03\"} value={\"text03\"}/><input type=\"button\" value=\"버튼3\" onClick={testBtn}/><br/>\r\n            <input type=\"text\" ref={ref} name={\"a04\"} value={\"text04\"}/><input type=\"button\" value=\"버튼4\" onClick={testBtn}/><br/>\r\n        </div>\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    )\r\n\r\n}\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}