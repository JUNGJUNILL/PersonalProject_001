{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\CKEditor.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input, Alert } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { EMP_INSERT_REQUEST, TEST_REQUEST } from '../reducers/emp';\n\nconst Editor = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths\n  } = useSelector(state => state.emp);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    0: title,\n    1: setTtile\n  } = useState('');\n  const blank_pattern = /^\\s+|\\s+&/g;\n  const imageInput = useRef();\n  const ref = createRef();\n\n  const testSummit = () => {\n    dispatch({\n      type: TEST_REQUEST\n    });\n  }; //게시글 제출 \n\n\n  const contentSummit = () => {\n    if (title.length === 0 || title.replace(blank_pattern, '') === \"\") {\n      ref.current.focus();\n      alert('제목을 입력 해 주세요');\n      return;\n    }\n\n    if (content.length === 0 || content.replace(blank_pattern, '') === \"\") {\n      alert('게시글을 작성해 주세요');\n      return;\n    }\n\n    dispatch({\n      type: EMP_INSERT_REQUEST,\n      data: {\n        content: encodeURI(content),\n        title: encodeURI(title),\n        userNickName: encodeURI(userInfo)\n      }\n    });\n  }; //제목 입력\n\n\n  const onChangeTtitle = useCallback(e => {\n    setTtile(e.target.value);\n  }, [title]); //이미지 업로드 창 \n\n  const onChangeImages = useCallback(e => {\n    const imageFormData = new FormData();\n    Array.prototype.forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []); //이미지 업로드 클릭 \n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return (//<div className=\"demo-editor\" >         \n    __jsx(\"div\", {\n      style: {\n        height: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC791\\uC131\\uD574 \\uBCF4\\uC138\\uC694!\"), __jsx(Input, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      ref: ref,\n      onChange: onChangeTtitle,\n      style: {\n        marginBottom: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), __jsx(CKEditor, {\n      editor: ClassicEditor,\n      config: {\n        ckfinder: {\n          uploadUrl: `http://captainryan.gonetis.com:3095/api/emp/ckeditor?postFlag=1001&user=${userInfo}`,\n          options: {}\n        },\n        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'imageUpload'],\n        placeholder: \"글을 입력해보세요!\"\n      } //data=\"<p>Hello from CKEditor 5!</p>\"\n      //최소 실행시 보여줄 문구 \n      ,\n      onInit: editor => {\n        // You can store the \"editor\" and use when it is needed.\n        console.log('Editor is ready to use!', editor);\n      },\n      onChange: (event, editor) => {\n        const data = editor.getData();\n        setContent(data);\n        console.log({\n          event,\n          editor,\n          data\n        });\n      },\n      onBlur: (event, editor) => {\n        console.log('Blur.', editor);\n      },\n      onFocus: (event, editor) => {\n        console.log('Focus.', editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), __jsx(Button, {\n      type: \"primary\",\n      onClick: contentSummit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \"\\uC791\\uC131\"))\n  );\n};\n\nexport default Editor;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/CKEditor.js"],"names":["useState","useCallback","useRef","createRef","useDispatch","useSelector","Button","Input","Alert","CKEditor","ClassicEditor","EMP_INSERT_REQUEST","TEST_REQUEST","Editor","dispatch","imagePaths","state","emp","userInfo","auth","content","setContent","title","setTtile","blank_pattern","imageInput","ref","testSummit","type","contentSummit","length","replace","current","focus","alert","data","encodeURI","userNickName","onChangeTtitle","e","target","value","onChangeImages","imageFormData","FormData","Array","prototype","forEach","call","files","f","append","UPLOAD_IMAGES_REQUEST","onClickImageUpload","click","height","marginBottom","ckfinder","uploadUrl","options","toolbar","placeholder","editor","console","log","event","getData"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef,createRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button, Input, Alert} from 'antd'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport \r\n    {\r\n        EMP_INSERT_REQUEST,\r\n        TEST_REQUEST\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Editor = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {imagePaths} = useSelector((state)=>state.emp);\r\n    const {userInfo} = useSelector((state)=>state.auth); \r\n    const [content,setContent] = useState('');   \r\n    const [title,setTtile] = useState(''); \r\n    const blank_pattern = /^\\s+|\\s+&/g;   \r\n    const imageInput = useRef(); \r\n    const ref = createRef(); \r\n\r\n    const testSummit = () =>{\r\n\r\n        dispatch({\r\n            type: TEST_REQUEST,\r\n\r\n\r\n       }); \r\n    }\r\n\r\n\r\n    //게시글 제출 \r\n    const contentSummit = ()=>{\r\n\r\n            if(title.length === 0 || title.replace(blank_pattern,'')===\"\"){\r\n                ref.current.focus();  \r\n                alert('제목을 입력 해 주세요'); \r\n                return; \r\n            }\r\n\r\n            if(content.length === 0 || content.replace(blank_pattern,'')===\"\"){\r\n                alert('게시글을 작성해 주세요'); \r\n                return; \r\n            }\r\n\r\n            dispatch({\r\n                 type: EMP_INSERT_REQUEST,\r\n                 data: {content:encodeURI(content),\r\n                        title:encodeURI(title),\r\n                        userNickName:encodeURI(userInfo), \r\n                },\r\n\r\n            }); \r\n    }\r\n\r\n    //제목 입력\r\n    const onChangeTtitle  = useCallback((e)=>{\r\n        setTtile(e.target.value); \r\n    },[title])\r\n\r\n    //이미지 업로드 창 \r\n    const onChangeImages = useCallback((e)=>{\r\n    \r\n        const imageFormData = new FormData(); \r\n        Array.prototype.forEach.call(e.target.files ,(f)=>{\r\n            imageFormData.append('image',f); \r\n        });\r\n        \r\n        dispatch({\r\n                type:UPLOAD_IMAGES_REQUEST,\r\n                data:imageFormData,             \r\n        }); \r\n\r\n    },[]); \r\n\r\n\r\n    //이미지 업로드 클릭 \r\n    const onClickImageUpload = useCallback(() =>{\r\n        imageInput.current.click(); \r\n\r\n    },[imageInput.current]); \r\n\r\n\r\n    return(\r\n\r\n        //<div className=\"demo-editor\" >         \r\n        <div style={{height:\"400px\"}}>\r\n        <h2>게시글을 작성해 보세요!</h2>\r\n        {/*\r\n        <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        */}\r\n        <Input placeholder='제목을 입력하세요' ref={ref} onChange={onChangeTtitle} style={{marginBottom:'1%'}}/>\r\n        <CKEditor\r\n            editor={ ClassicEditor }\r\n            config={{\r\n             \r\n                ckfinder:{\r\n                     uploadUrl:`http://captainryan.gonetis.com:3095/api/emp/ckeditor?postFlag=1001&user=${userInfo}`,\r\n                    \r\n                     options :{\r\n\r\n                     }\r\n                    \r\n                },\r\n\r\n                toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList','imageUpload'],\r\n                placeholder: \"글을 입력해보세요!\",\r\n            \r\n\r\n            }}\r\n\r\n\r\n            //data=\"<p>Hello from CKEditor 5!</p>\"\r\n            //최소 실행시 보여줄 문구 \r\n\r\n            onInit={ editor => {\r\n                // You can store the \"editor\" and use when it is needed.\r\n                console.log( 'Editor is ready to use!', editor );\r\n            } }\r\n            onChange={ ( event, editor ) => {\r\n                const data = editor.getData();\r\n                setContent(data); \r\n                console.log( { event, editor, data } );\r\n            } }\r\n            onBlur={ ( event, editor ) => {\r\n                console.log( 'Blur.', editor );\r\n            } }\r\n            onFocus={ ( event, editor ) => {\r\n                console.log( 'Focus.', editor );\r\n            } }\r\n        />\r\n        <Button type=\"primary\" onClick={contentSummit} >작성</Button>\r\n        </div>\r\n       \r\n\r\n    )\r\n\r\n} \r\n\r\n\r\nexport default Editor; "]},"metadata":{},"sourceType":"module"}