{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_textArea.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, forwardRef } from 'react';\nimport { Button } from 'antd'; //forwardRef\n//https://ko.reactjs.org/docs/react-api.html#reactforwardref\n\nconst CommentTextArea = forwardRef(({\n  postFlag,\n  nickName,\n  postId,\n  userInfo,\n  insertComment,\n  insertClick\n}, ref) => {\n  // const ref = createRef(); \n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n  useEffect(() => {\n    setComment('');\n  }, [insertClick.length]); //댓글 입력 textArea \n\n  const onChageComment = useCallback(e => {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  return __jsx(React.Fragment, null, __jsx(\"textarea\", {\n    value: comment,\n    ref: ref,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), userInfo && __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: () => insertComment(postFlag, postId, nickName, comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")));\n});\nexport default CommentTextArea;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_textArea.js"],"names":["React","useCallback","useEffect","useState","createRef","forwardRef","Button","CommentTextArea","postFlag","nickName","postId","userInfo","insertComment","insertClick","ref","comment","setComment","length","onChageComment","e","alert","target","value","width","height","marginTop","margin","display","float"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,UAA5D,QAA6E,OAA7E;AACA,SAAQC,MAAR,QAAqB,MAArB,C,CAEA;AACA;;AAEA,MAAOC,eAAe,GAAEF,UAAU,CAAC,CAAC;AAACG,EAAAA,QAAD;AAAUC,EAAAA,QAAV;AAAmBC,EAAAA,MAAnB;AAA0BC,EAAAA,QAA1B;AAAmCC,EAAAA,aAAnC;AAAiDC,EAAAA;AAAjD,CAAD,EAAgEC,GAAhE,KAAuE;AAEvG;AACC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAGFD,EAAAA,SAAS,CAAC,MAAI;AAEVc,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEH,GAJQ,EAIP,CAACH,WAAW,CAACI,MAAb,CAJO,CAAT,CANwG,CAaxG;;AACA,QAAMC,cAAc,GAAEjB,WAAW,CAAEkB,CAAD,IAAK;AAErC,QAAGJ,OAAO,CAACE,MAAR,KAAmB,GAAtB,EAA0B;AACxBG,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AACDJ,IAAAA,UAAU,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AAED,GARgC,EAQ/B,CAACP,OAAD,CAR+B,CAAjC;AAgBF,SACI,4BACA;AAAW,IAAA,KAAK,EAAEA,OAAlB;AAA4B,IAAA,GAAG,EAAED,GAAjC;AAAsC,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC,MAArB;AAA4BC,MAAAA,SAAS,EAAC;AAAtC,KAA7C;AAA0F,IAAA,QAAQ,EAAEP,cAApG;AAAoH,IAAA,WAAW,EAAGP,QAAQ,GAAG,cAAH,GAAoB,mBAA9J;AAAmL,IAAA,QAAQ,EAAEA,QAAQ,GAAG,KAAH,GAAW,IAAhN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,OAAO,GAAGA,OAAO,CAACE,MAAX,GAAqB,CAD/B,WAHA,EAOCN,QAAQ,IACL;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAIhB,aAAa,CAACJ,QAAD,EAAUE,MAAV,EAAiBD,QAAjB,EAA0BM,OAA1B,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CARJ,CADJ;AAiBC,CA/CiC,CAAlC;AAiDA,eAAeR,eAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef ,forwardRef} from 'react'\r\nimport {Button} from 'antd'\r\n\r\n//forwardRef\r\n//https://ko.reactjs.org/docs/react-api.html#reactforwardref\r\n\r\nconst  CommentTextArea= forwardRef(({postFlag,nickName,postId,userInfo,insertComment,insertClick} ,ref) =>{\r\n\r\n   // const ref = createRef(); \r\n    const [comment, setComment] = useState(''); \r\n\r\n\r\n  useEffect(()=>{\r\n\r\n      setComment(''); \r\n\r\n  },[insertClick.length]); \r\n\r\n\r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n  \r\n\r\n\r\n    \r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <textarea  value={comment}  ref={ref} style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    {userInfo && \r\n        <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n            <Button type=\"primary\" onClick={()=>insertComment(postFlag,postId,nickName,comment)}>댓글달기</Button>\r\n        </div>\r\n    }\r\n\r\n    </>\r\n)\r\n\r\n})\r\n\r\nexport default CommentTextArea; "]},"metadata":{},"sourceType":"module"}