{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test2.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback, useRef, current } from 'react';\n\nvar Test2 = function Test2() {\n  _s();\n\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState(''),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var inputEl = useRef();\n  var onChange = useCallback(function (e) {\n    console.log('onChange');\n    setNumber(e.target.value);\n  }, []); //\n\n  var onInsert = useCallback(function (e) {\n    console.log('onInsert');\n    var nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n    inputEl.current.focus();\n  }, [number, list]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: number,\n    onChange: onChange,\n    ref: inputEl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: onInsert,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, list.map(function (value, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, value);\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\uD3C9\\uADE0 \\uAC12:\"), avg));\n};\n\n_s(Test2, \"wmfPiMLhh0jwrX0thI7HzEyHrIc=\");\n\n_c = Test2;\nexport default Test2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test2.js"],"names":["React","useState","useMemo","useCallback","useRef","current","Test2","list","setList","number","setNumber","inputEl","onChange","e","console","log","target","value","onInsert","nextList","concat","parseInt","focus","map","index","avg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAoE,OAApE;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAK;AAAA;;AAAA,kBAEQL,QAAQ,CAAC,EAAD,CAFhB;AAAA,MAERM,IAFQ;AAAA,MAEHC,OAFG;;AAAA,mBAGYP,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGRQ,MAHQ;AAAA,MAGDC,SAHC;;AAIf,MAAMC,OAAO,GAAGP,MAAM,EAAtB;AAEA,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,UAACU,CAAD,EAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAL,IAAAA,SAAS,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AACH,GAH2B,EAG1B,EAH0B,CAA5B,CANe,CASR;;AAEP,MAAMC,QAAQ,GAAGf,WAAW,CAAC,UAACU,CAAD,EAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAMI,QAAQ,GAAGZ,IAAI,CAACa,MAAL,CAAYC,QAAQ,CAACZ,MAAD,CAApB,CAAjB;AACAD,IAAAA,OAAO,CAACW,QAAD,CAAP;AACAT,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,CAACN,OAAR,CAAgBiB,KAAhB;AACH,GAN2B,EAM1B,CAACb,MAAD,EAAQF,IAAR,CAN0B,CAA5B;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,KAAK,EAAEE,MAAd;AAAsB,IAAA,QAAQ,EAAEG,QAAhC;AAA0C,IAAA,GAAG,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEO,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IAAI,CAACgB,GAAL,CAAS,UAACN,KAAD,EAAOO,KAAP;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBP,KAAjB,CADU;AAAA,GAAT,CADL,CAHA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAEiBQ,GAFjB,CARA,CADJ;AAiBH,CApCD;;GAAMnB,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, {useState, useMemo, useCallback,useRef ,current} from 'react'\r\n\r\n\r\nconst Test2 = () =>{\r\n\r\n    const [list,setList] = useState([]); \r\n    const [number,setNumber] = useState(''); \r\n    const inputEl = useRef();\r\n\r\n    const onChange = useCallback((e) =>{\r\n        console.log('onChange'); \r\n        setNumber(e.target.value); \r\n    },[]); //\r\n\r\n    const onInsert = useCallback((e) =>{\r\n        console.log('onInsert'); \r\n        const nextList = list.concat(parseInt(number)); \r\n        setList(nextList); \r\n        setNumber(''); \r\n        inputEl.current.focus();\r\n    },[number,list]); \r\n\r\n    return (\r\n        <div>\r\n        <input value={number} onChange={onChange} ref={inputEl}/>\r\n        <button onClick={onInsert}>등록</button>\r\n        <ul>    \r\n            {list.map((value,index) => (\r\n            <li key={index}>{value}</li>\r\n            ))}\r\n        </ul>\r\n        <div>\r\n            {/*<b>평균 값:</b>{getAverage(list)}*/}\r\n            <b>평균 값:</b>{avg}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Test2; "]},"metadata":{},"sourceType":"module"}