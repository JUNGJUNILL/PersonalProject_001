{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaPlus),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchSagaPlus),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sagaMinus),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchMinus),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(studySaga);\n\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { COUNT_PLUS_REQUEST, COUNT_PLUS_SUCCESS, COUNT_PLUS_FAILURE, COUNT_MINUS_REQUEST, COUNT_MINUS_SUCCESS, COUNT_MINUS_FAILURE } from '../reducers/count';\n\nfunction sagaPlus(action) {\n  return _regeneratorRuntime.wrap(function sagaPlus$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('action.type 사가...', action.type);\n          _context.next = 4;\n          return put({\n            type: COUNT_PLUS_SUCCESS,\n            data: 1\n          });\n\n        case 4:\n          _context.next = 12;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          alert('사가 에러');\n          _context.next = 12;\n          return put({\n            type: COUNT_PLUS_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction watchSagaPlus() {\n  return _regeneratorRuntime.wrap(function watchSagaPlus$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('watchSagaPlus');\n          _context2.next = 3;\n          return takeEvery(COUNT_PLUS_REQUEST, sagaPlus);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction sagaMinus(action) {\n  return _regeneratorRuntime.wrap(function sagaMinus$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: COUNT_MINUS_SUCCESS,\n            data: 1\n          });\n\n        case 3:\n          _context3.next = 11;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          alert('사가 에러');\n          _context3.next = 11;\n          return put({\n            type: COUNT_MINUS_FAILURE,\n            error: _context3.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 5]]);\n}\n\nfunction watchMinus() {\n  return _regeneratorRuntime.wrap(function watchMinus$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('watchMinus');\n          _context4.next = 3;\n          return takeEvery(COUNT_MINUS_REQUEST, sagaMinus);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function studySaga() {\n  return _regeneratorRuntime.wrap(function studySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchSagaPlus), fork(watchMinus)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/studySaga.js"],"names":["sagaPlus","watchSagaPlus","sagaMinus","watchMinus","studySaga","all","fork","takeLatest","takeEvery","put","delay","call","COUNT_PLUS_REQUEST","COUNT_PLUS_SUCCESS","COUNT_PLUS_FAILURE","COUNT_MINUS_REQUEST","COUNT_MINUS_SUCCESS","COUNT_MINUS_FAILURE","action","console","log","type","data","error","alert"],"mappings":";;oDAMUA,Q;qDAoBAC,a;qDASAC,S;qDAmBAC,U;qDAMeC,S;;AA5DzB,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,UAAjB,EAA4BC,SAA5B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAkDC,IAAlD,QAA6D,oBAA7D;AACA,SAAQC,kBAAR,EAA2BC,kBAA3B,EAA+CC,kBAA/C,EAAmEC,mBAAnE,EAAwFC,mBAAxF,EAA6GC,mBAA7G,QAAuI,mBAAvI;;AAKA,SAAUjB,QAAV,CAAmBkB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCF,MAAM,CAACG,IAAzC;AAHR;AAIM,iBAAOZ,GAAG,CAAC;AACLY,YAAAA,IAAI,EAACR,kBADA;AAELS,YAAAA,IAAI,EAAE;AAFD,WAAD,CAAV;;AAJN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWQH,UAAAA,OAAO,CAACI,KAAR;AACAC,UAAAA,KAAK,CAAC,OAAD,CAAL;AAZR;AAaQ,iBAAMf,GAAG,CAAC;AACNY,YAAAA,IAAI,EAACP,kBADC;AAENS,YAAAA,KAAK;AAFC,WAAD,CAAT;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUtB,aAAV;AAAA;AAAA;AAAA;AAAA;AACIkB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADJ;AAEI,iBAAMZ,SAAS,CAACI,kBAAD,EAAoBZ,QAApB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUE,SAAV,CAAoBgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGM,iBAAOT,GAAG,CAAC;AACLY,YAAAA,IAAI,EAACL,mBADA;AAELM,YAAAA,IAAI,EAAE;AAFD,WAAD,CAAV;;AAHN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQH,UAAAA,OAAO,CAACI,KAAR;AACAC,UAAAA,KAAK,CAAC,OAAD,CAAL;AAXR;AAYQ,iBAAMf,GAAG,CAAC;AACNY,YAAAA,IAAI,EAACJ,mBADC;AAENM,YAAAA,KAAK;AAFC,WAAD,CAAT;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUpB,UAAV;AAAA;AAAA;AAAA;AAAA;AACIgB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AADJ;AAEI,iBAAMZ,SAAS,CAACO,mBAAD,EAAqBb,SAArB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAAUE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACL,aAAD,CADE,EAENK,IAAI,CAACH,UAAD,CAFE,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport {COUNT_PLUS_REQUEST,COUNT_PLUS_SUCCESS, COUNT_PLUS_FAILURE, COUNT_MINUS_REQUEST, COUNT_MINUS_SUCCESS, COUNT_MINUS_FAILURE} from '../reducers/count'; \r\n\r\n\r\n\r\n\r\nfunction* sagaPlus(action){\r\n\r\n    try{\r\n        console.log('action.type 사가...' , action.type); \r\n      yield  put({\r\n            type:COUNT_PLUS_SUCCESS, \r\n            data: 1, \r\n        })\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('사가 에러'); \r\n        yield put({\r\n            type:COUNT_PLUS_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchSagaPlus(){\r\n    console.log('watchSagaPlus'); \r\n    yield takeEvery(COUNT_PLUS_REQUEST,sagaPlus); \r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* sagaMinus(action){\r\n\r\n    try{\r\n      yield  put({\r\n            type:COUNT_MINUS_SUCCESS, \r\n            data: 1, \r\n        })\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('사가 에러'); \r\n        yield put({\r\n            type:COUNT_MINUS_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchMinus(){\r\n    console.log('watchMinus'); \r\n    yield takeEvery(COUNT_MINUS_REQUEST,sagaMinus); \r\n}\r\n\r\n\r\nexport default function* studySaga(){\r\n\r\n    yield all([\r\n        fork(watchSagaPlus), \r\n        fork(watchMinus), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}