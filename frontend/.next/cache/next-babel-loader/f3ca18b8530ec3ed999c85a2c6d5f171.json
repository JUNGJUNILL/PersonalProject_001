{"ast":null,"code":"var _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\myEdit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { useState, useCallback } from 'react';\nimport { Button } from 'antd';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nconst Myeditor = () => {\n  const editContent = useCallback(() => {\n    console.log(content);\n  }, []); // const [editorState, setEditorState] = useState(\n  //     () => EditorState.createEmpty(),\n  //   );\n\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const onEditorStateChange = useCallback(editState => {\n    setEditorState(editState);\n    setContent(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n    console.log('editorState ==>', draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  }, [editorState]);\n  return __jsx(React.Fragment, null, __jsx(Editor, {\n    editState: editorState,\n    wrapperClassName: \"demo-wrapper\",\n    editorClassName: \"demo-editor\",\n    localization: {\n      locale: 'ko'\n    },\n    onEditorStateChange: onEditorStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }), __jsx(Button, {\n    onClick: editContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC131\"));\n};\n\nexport default Myeditor;","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/pages/myEdit.js"],"names":["Editor","EditorState","convertToRaw","useState","useCallback","Button","draftToHtml","htmlToDraft","Myeditor","editContent","console","log","content","editorState","setEditorState","createEmpty","setContent","onEditorStateChange","editState","getCurrentContent","locale"],"mappings":";;;AAAA,SAAQA,MAAR,QAAqB,qBAArB;AACA,SAASC,WAAT,EAAqBC,YAArB,QAAyC,UAAzC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAIA,MAAMC,QAAQ,GAAG,MAAK;AAGlB,QAAMC,WAAW,GAAGL,WAAW,CAAC,MAAI;AAChCM,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACH,GAF8B,EAE7B,EAF6B,CAA/B,CAHkB,CAOlB;AACA;AACA;;AAEI,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAACF,WAAW,CAACc,WAAZ,EAAD,CAA9C;AACA,QAAM;AAAA,OAACH,OAAD;AAAA,OAAWI;AAAX,MAAyBb,QAAQ,CAAC,EAAD,CAAvC;AAEL,QAAMc,mBAAmB,GAAGb,WAAW,CAAEc,SAAD,IAAa;AAEpDJ,IAAAA,cAAc,CAACI,SAAD,CAAd;AACAF,IAAAA,UAAU,CAACV,WAAW,CAACJ,YAAY,CAACW,WAAW,CAACM,iBAAZ,EAAD,CAAb,CAAZ,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCL,WAAW,CAACJ,YAAY,CAACW,WAAW,CAACM,iBAAZ,EAAD,CAAb,CAA3C;AACA,GALsC,EAKrC,CAACN,WAAD,CALqC,CAAvC;AAOC,SACA,4BACK,MAAC,MAAD;AACG,IAAA,SAAS,EAAEA,WADd;AAEG,IAAA,gBAAgB,EAAC,cAFpB;AAGG,IAAA,eAAe,EAAC,aAHnB;AAIE,IAAA,YAAY,EAAE;AACVO,MAAAA,MAAM,EAAC;AADG,KAJhB;AAQE,IAAA,mBAAmB,EAAEH,mBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAWQ,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXR,CADA;AAgBH,CArCD;;AAuCA,eAAeD,QAAf","sourcesContent":["import {Editor} from 'react-draft-wysiwyg'\r\nimport { EditorState,convertToRaw } from 'draft-js';\r\nimport { useState, useCallback } from 'react';\r\nimport {Button} from 'antd'\r\n\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\n\r\n\r\nconst Myeditor = () =>{\r\n\r\n\r\n    const editContent = useCallback(()=>{\r\n        console.log(content); \r\n    },[]); \r\n\r\n    // const [editorState, setEditorState] = useState(\r\n    //     () => EditorState.createEmpty(),\r\n    //   );\r\n\r\n        const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n        const [content , setContent] = useState(''); \r\n\r\n   const onEditorStateChange = useCallback((editState)=>{\r\n\r\n    setEditorState(editState); \r\n    setContent(draftToHtml(convertToRaw(editorState.getCurrentContent()))); \r\n    console.log('editorState ==>' , draftToHtml(convertToRaw(editorState.getCurrentContent()))); \r\n   },[editorState])\r\n\r\n    return (    \r\n    <>\r\n         <Editor\r\n            editState={editorState}\r\n            wrapperClassName=\"demo-wrapper\"\r\n            editorClassName=\"demo-editor\"\r\n           localization={{\r\n               locale:'ko', \r\n           }}\r\n        \r\n           onEditorStateChange={onEditorStateChange}\r\n            />\r\n            <Button onClick={editContent}>작성</Button>\r\n\r\n    </>\r\n        )\r\n}\r\n\r\nexport default Myeditor; "]},"metadata":{},"sourceType":"module"}