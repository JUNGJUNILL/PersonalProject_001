{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar Comments1001 = function Comments1001(_ref) {\n  _s();\n\n  var createdDate = _ref.createdDate,\n      comment = _ref.comment,\n      userNickName = _ref.userNickName,\n      commentId = _ref.commentId,\n      flag = _ref.flag,\n      good = _ref.good,\n      bad = _ref.bad,\n      nickName = _ref.nickName,\n      postFlag = _ref.postFlag,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n\n  var _useState = useState(good),\n      goodCount = _useState[0],\n      setGoodCount = _useState[1];\n\n  var badCount = parseInt(bad);\n\n  var _useState2 = useState(false),\n      like = _useState2[0],\n      setLike = _useState2[1];\n\n  var _useState3 = useState(false),\n      disLike = _useState3[0],\n      setDisLike = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var test = function test(p1, p2, p3) {//  likeBtn(p1,p2,p3); \n  };\n\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      if (likeDislike === \"good\") {\n        setLike(true);\n        setDisLike(false);\n      } else {\n        setLike(false);\n        setDisLike(true);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName\n        }\n      });\n    }\n\n    setGoodCount(parseInt(good) + 1); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag,\n        who: userInfo\n      }\n    });\n    alert(\"\".concat(likeDislike));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, userNickName), \" \\xA0 \", __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 50\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 96\n    }\n  }), comment, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'good');\n    },\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }), goodCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'bad');\n    },\n    twoToneColor: disLike ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 167\n    }\n  }), badCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 310\n    }\n  }))));\n};\n\n_s(Comments1001, \"Z+GoAFugrkz/PTv046jp4+9oi58=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments1001;\nexport default Comments1001;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments1001\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","createdDate","comment","userNickName","commentId","flag","good","bad","nickName","postFlag","postId","dispatch","goodCount","setGoodCount","badCount","parseInt","like","setLike","disLike","setDisLike","state","auth","userInfo","test","p1","p2","p3","likeBtn","commentid","likeDislike","alert","type","data","who","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({createdDate,comment,userNickName,commentId,flag,good,bad,nickName,postFlag,postId}) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const [goodCount,setGoodCount] = useState(good);  \r\n    \r\n    let badCount  =parseInt(bad); \r\n    const [like , setLike]  = useState(false); \r\n    const [disLike , setDisLike]  = useState(false); \r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n    const test = (p1,p2,p3)=>{\r\n\r\n      //  likeBtn(p1,p2,p3); \r\n    }\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            if(likeDislike ===\"good\"){\r\n                setLike(true); \r\n                setDisLike(false); \r\n            }else{\r\n                setLike(false); \r\n                setDisLike(true); \r\n            }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n    \r\n        }\r\n        setGoodCount(parseInt(good)+1); \r\n        //댓글 리스트 \r\n        dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n            who:userInfo, \r\n          }\r\n         \r\n      }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div className='divTableRow' >\r\n                    <div className=\"divTableCell\">\r\n                    <b>{userNickName}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"}/>{goodCount}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={disLike ? \"#ff0000\" : \"#1ba640\"} />{badCount}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}