{"ast":null,"code":"var _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\emp.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination } from 'antd';\nimport { EMP_LIST_REQUEST } from '../reducers/emp';\n\nconst Emp = () => {\n  const dispatch = useDispatch();\n  const {\n    emplist\n  } = useSelector(state => state.emp); //store의 state를 불러오는 hook \n  //store의 state 중에서 count의 state를 불러온다.\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: nowPage,\n    1: setNowPage\n  } = useState(0);\n  const {\n    0: postsPerPage,\n    1: setPostsPerPage\n  } = useState(5);\n  const getEmplist = useCallback(() => {}, []);\n  useEffect(() => {\n    setLoading(true);\n    dispatch({\n      type: EMP_LIST_REQUEST,\n      data: {\n        name: '',\n        job: '',\n        currentPage: 5,\n        maxPage: postsPerPage\n      }\n    });\n    setLoading(false);\n  }, []);\n  const indexOfLastPost = nowPage * postsPerPage; //5\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage; //5-5 = 0 \n\n  const currentPosts = emplist.slice(indexOfFirstPost, indexOfLastPost); //0~5\n\n  /*\r\n  1 페이지 = 1*5 =5 \r\n            5-5 =0 \r\n            0~5 \r\n  2 페이지 = 2*5=10 \r\n            10-5=5 \r\n            5~10\r\n  3 페이지 = 3*5=15 \r\n            \r\n  \r\n  */\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  }, \"\\uC0AC\\uC6D0\\uBC88\\uD638\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }\n  }, \"\\uC0AC\\uC6D0\\uBA85\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }\n  }, \"\\uC9C1\\uCC45\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }, \"\\uB9E4\\uB2C8\\uC838\\uBC88\\uD638\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }, \"\\uC785\\uC0AC\\uC77C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, \"\\uAE09\\uC5EC\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }, \"\\uC778\\uC13C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, \"\\uBD80\\uC11C\\uBC88\\uD638\")), currentPosts.map((v, i) => __jsx(\"div\", {\n    className: \"divTableRow\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }\n  }, v.EMPNO), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }, v.ENAME), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }, v.JOB), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }, v.MGR), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }\n  }, v.HIREDATE), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  }, v.SAL), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  }, v.COMM), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }\n  }, v.DEPTNO))))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Emp;","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/pages/emp.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Pagination","EMP_LIST_REQUEST","Emp","dispatch","emplist","state","emp","loading","setLoading","nowPage","setNowPage","postsPerPage","setPostsPerPage","getEmplist","type","data","name","job","currentPage","maxPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","marginTop","map","v","i","EMPNO","ENAME","JOB","MGR","HIREDATE","SAL","COMM","DEPTNO"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport \r\n    {EMP_LIST_REQUEST,} \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Emp = () =>{\r\n\r\n\r\n    const dispatch = useDispatch(); \r\n    const {emplist}    = useSelector(state => state.emp); \r\n                                 //store의 state를 불러오는 hook \r\n                                 //store의 state 중에서 count의 state를 불러온다.\r\n    const [loading, setLoading] = useState(false); \r\n    const [nowPage , setNowPage] = useState(0); \r\n    const [postsPerPage, setPostsPerPage] = useState(5); \r\n\r\n \r\n    const getEmplist = useCallback(()=>{\r\n          \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setLoading(true); \r\n        dispatch({\r\n            type:EMP_LIST_REQUEST, \r\n            data:{name:'',job:'',currentPage:5,maxPage:postsPerPage}, \r\n        })\r\n        setLoading(false); \r\n      },[]); \r\n\r\n      const indexOfLastPost = nowPage * postsPerPage;   //5\r\n      const indexOfFirstPost = indexOfLastPost - postsPerPage; //5-5 = 0 \r\n      const currentPosts = emplist.slice(indexOfFirstPost,indexOfLastPost); //0~5\r\n\r\n      /*\r\n      1 페이지 = 1*5 =5 \r\n                5-5 =0 \r\n                0~5 \r\n      2 페이지 = 2*5=10 \r\n                10-5=5 \r\n                5~10\r\n      3 페이지 = 3*5=15 \r\n                \r\n      \r\n      */\r\n    \r\n                                 \r\n                              \r\n    return (\r\n        <>\r\n         <div className='divTable' style={{marginTop:'3%'}}>\r\n           <div className='divTableBody'>\r\n           <div className='divTableRow'>\r\n                     <div className='divTableCell'>사원번호</div>\r\n                     <div className='divTableCell'>사원명</div>\r\n                     <div className='divTableCell'>직책</div>\r\n                     <div className='divTableCell'>매니져번호</div>\r\n                     <div className='divTableCell'>입사일</div>\r\n                     <div className='divTableCell'>급여</div>\r\n                     <div className='divTableCell'>인센</div>\r\n                     <div className='divTableCell'>부서번호</div>\r\n           </div>\r\n            {currentPosts.map((v,i)=>(\r\n                <div className='divTableRow' key={i}>\r\n                     <div className='divTableCell'>{v.EMPNO}</div>\r\n                     <div className='divTableCell'>{v.ENAME}</div>\r\n                     <div className='divTableCell'>{v.JOB}</div>\r\n                     <div className='divTableCell'>{v.MGR}</div>\r\n                     <div className='divTableCell'>{v.HIREDATE}</div>\r\n                     <div className='divTableCell'>{v.SAL}</div>\r\n                     <div className='divTableCell'>{v.COMM}</div>\r\n                     <div className='divTableCell'>{v.DEPTNO}</div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n         </div>\r\n         <div>\r\n\r\n\r\n         </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Emp;"]},"metadata":{},"sourceType":"module"}