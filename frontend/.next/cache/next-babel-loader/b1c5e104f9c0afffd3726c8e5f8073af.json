{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\about.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Pagenation from '../utilComponent/Pagenation';\n\nvar About = function About() {\n  _s();\n\n  useEffect(function () {\n    console.log('dispatch 후에 데이터 가져오는 로직');\n  }, []);\n\n  var _useState = useState(0),\n      nowPage = _useState[0],\n      setNowPage = _useState[1]; //현재 페이지\n\n\n  var _useState2 = useState(5),\n      postsPerPage = _useState2[0]; //한 페이지당 list 수 \n\n\n  var _useState3 = useState(5),\n      groupPage = _useState3[0],\n      setGroupPage = _useState3[1]; //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\n\n\n  var _useState4 = useState([]),\n      nowGroupPageArray = _useState4[0],\n      setNowGroupPageArray = _useState4[1]; //현제 페이징 그룹 배열\n\n\n  var pagenate = useCallback(function (pageNumber, groupPageArray) {\n    setNowPage(pageNumber);\n    nowGroupPageArray.length = 0;\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\n    var indexOfLastPost = pageNumber * postsPerPage;\n    var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  }, [nowPage, nowGroupPageArray]);\n  var dummyList = ['헬로우월드01', '헬로우월드02', '헬로우월드03', '헬로우월드04', '헬로우월드05', '헬로우월드06'];\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableBody\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }\n  }, \"\\uC81C\\uBAA9\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }, \"\\uC791\\uC131\\uC790\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }\n  }, \"\\uB4F1\\uB85D\\uC77C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  }, \"\\uC870\\uD68C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }, \"\\uCD94\\uCC9C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }\n  }, \"\\uBC18\\uB300\")), dummyList.map(function (v, i) {\n    return __jsx(\"div\", {\n      className: \"divTableRow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, __jsx(\"div\", {\n      className: \"divTableCell\",\n      style: {\n        width: '80px',\n        height: '80px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: \"https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg\",\n      style: {\n        width: '80px',\n        height: '80px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 84\n      }\n    })), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, v), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, 운영자), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, '20200818 : 14:30'), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, '125'), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, '10'), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, '0'));\n  }))), __jsx(Pagenation, {\n    pagenate: pagenate,\n    dataLength: dummyList.length,\n    postsPerPage: postsPerPage,\n    nowPage: nowPage,\n    groupPage: groupPage,\n    groupPageArray: nowGroupPageArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(About, \"n27IaKpM86AGbfSraW5zH+QweNQ=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/pages/about.js"],"names":["React","useState","useEffect","useCallback","styled","useRouter","Link","Pagenation","About","console","log","nowPage","setNowPage","postsPerPage","groupPage","setGroupPage","nowGroupPageArray","setNowGroupPageArray","pagenate","pageNumber","groupPageArray","length","concat","indexOfLastPost","indexOfFirstPost","dummyList","marginTop","map","v","i","width","height","운영자"],"mappings":"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","sourcesContent":["\r\nimport React , {useState,useEffect,useCallback}from 'react'\r\nimport styled from 'styled-components'; \r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link'\r\nimport Pagenation from '../utilComponent/Pagenation'\r\nconst About = ()=>{\r\n\r\n  useEffect(()=>{\r\n    console.log('dispatch 후에 데이터 가져오는 로직'); \r\n  },[])\r\n\r\n  const [nowPage,setNowPage] = useState(0);                       //현재 페이지\r\n  const [postsPerPage] = useState(5);                             //한 페이지당 list 수 \r\n  const [groupPage , setGroupPage] = useState(5);                 //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\r\n  const [nowGroupPageArray,setNowGroupPageArray] =useState([]);   //현제 페이징 그룹 배열\r\n\r\n  const pagenate =useCallback((pageNumber, groupPageArray)=>{\r\n    setNowPage(pageNumber); \r\n    nowGroupPageArray.length=0; \r\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\r\n    const indexOfLastPost = pageNumber * postsPerPage;   \r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;  \r\n\r\n\r\n},[nowPage,nowGroupPageArray]); \r\n\r\n\r\n  const dummyList = ['헬로우월드01','헬로우월드02','헬로우월드03','헬로우월드04','헬로우월드05','헬로우월드06']; \r\n\r\n  \r\n   return (\r\n    <>\r\n        <div className='divTable' style={{marginTop:'3%'}}>\r\n           <div className='divTableBody'>\r\n           <div className='divTableRow'>\r\n                     <div className='divTableCell'>이미지</div>\r\n                     <div className='divTableCell'>제목</div>\r\n                     <div className='divTableCell'>작성자</div>\r\n                     <div className='divTableCell'>등록일</div>\r\n                     <div className='divTableCell'>조회</div>\r\n                     <div className='divTableCell'>추천</div>\r\n                     <div className='divTableCell'>반대</div>\r\n           </div>\r\n      {dummyList.map((v,i)=>(\r\n               <div className='divTableRow'  >\r\n                <div className='divTableCell' style={{width:'80px',height:'80px'}}><img src='https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg' style={{width:'80px',height:'80px'}}/></div>\r\n                <div className='divTableCell' >{v}</div>\r\n                <div className='divTableCell' >{운영자}</div>\r\n                <div className='divTableCell' >{'20200818 : 14:30'}</div>\r\n                <div className='divTableCell' >{'125'}</div>\r\n                <div className='divTableCell' >{'10'}</div>\r\n                <div className='divTableCell' >{'0'}</div>\r\n              </div>\r\n          ))}\r\n          </div>\r\n        </div>\r\n        <Pagenation pagenate={pagenate} dataLength={dummyList.length} postsPerPage={postsPerPage} nowPage={nowPage} groupPage={groupPage} groupPageArray={nowGroupPageArray} />\r\n\r\n    </>\r\n    );\r\n}; \r\n\r\n\r\nexport default About; "]},"metadata":{},"sourceType":"module"}