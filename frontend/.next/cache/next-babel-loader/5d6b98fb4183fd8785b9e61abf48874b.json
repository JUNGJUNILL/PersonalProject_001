{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaLoadUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sagaJoin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchJoin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(sagaLogin),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(authSag);\n\nimport axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { JOIN_REQUEST, JOIN_SUCCESS, JOIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/auth'; //유저정보 유지 사이클 \n//------------------------------------------------------------------------\n\nfunction APILoadUser() {\n  return axios.get('/auth/', {\n    withCredentials: true\n  });\n}\n\n_c = APILoadUser;\n\nfunction sagaLoadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaLoadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(APILoadUser);\n\n        case 3:\n          result = _context.sent;\n          console.log('sagaLoadUser', result);\n          _context.next = 7;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('LOAD_USER_FAILURE=>', _context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, sagaLoadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //------------------------------------------------------------------------\n//회원가입 사이클 \n//------------------------------------------------------------------------\n\n\nfunction APIJoin(data) {\n  console.log('data==>', data);\n  return axios.post('/auth/join', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c2 = APIJoin;\n\nfunction sagaJoin(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaJoin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(action, action.data);\n          _context3.next = 4;\n          return call(APIJoin, action.data);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: JOIN_SUCCESS,\n            data: result\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: JOIN_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchJoin() {\n  return _regeneratorRuntime.wrap(function watchJoin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(JOIN_REQUEST, sagaJoin);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //------------------------------------------------------------------------\n//로그인 사이클\n//------------------------------------------------------------------------\n\n\nfunction APILogin(data) {\n  return axios.post('/auth/login', data, {\n    withCredentials: true\n  });\n}\n\n_c3 = APILogin;\n\nfunction sagaLogin(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaLogin$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(APILogin, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOGIN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          alert('로그인 에러');\n          _context5.next = 13;\n          return put({\n            type: LOGIN_FAILURE,\n            error: _context5.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOGIN_REQUEST, sagaLogin);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //------------------------------------------------------------------------\n\n\nexport default function authSag() {\n  return _regeneratorRuntime.wrap(function authSag$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchJoin), fork(watchLogin), fork(watchLoadUser)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"APILoadUser\");\n$RefreshReg$(_c2, \"APIJoin\");\n$RefreshReg$(_c3, \"APILogin\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/authSaga.js"],"names":["sagaLoadUser","watchLoadUser","sagaJoin","watchJoin","sagaLogin","watchLogin","authSag","axios","all","fork","takeLatest","takeEvery","put","delay","call","JOIN_REQUEST","JOIN_SUCCESS","JOIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","APILoadUser","get","withCredentials","action","result","console","log","type","data","error","APIJoin","post","APILogin","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {JOIN_REQUEST,\r\n     JOIN_SUCCESS,\r\n     JOIN_FAILURE,\r\n     LOGIN_REQUEST,\r\n     LOGIN_SUCCESS,\r\n     LOGIN_FAILURE, \r\n     LOAD_USER_REQUEST,\r\n     LOAD_USER_SUCCESS,\r\n     LOAD_USER_FAILURE,\r\n    } \r\nfrom '../reducers/auth'; \r\n\r\n\r\n//유저정보 유지 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APILoadUser(){\r\n\r\n    return axios.get('/auth/' , {withCredentials:true}); \r\n}\r\n\r\nfunction* sagaLoadUser(action){\r\n\r\n    try{\r\n        const result = yield call(APILoadUser);\r\n        console.log('sagaLoadUser', result);  \r\n        yield put({\r\n                type:LOAD_USER_SUCCESS, \r\n                data: result.data,           \r\n        }); \r\n\r\n    }catch(e){\r\n        console.error('LOAD_USER_FAILURE=>' , e); \r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e, \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeLatest(LOAD_USER_REQUEST,sagaLoadUser);\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//회원가입 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APIJoin(data){\r\n    console.log('data==>' , data); \r\n    return axios.post('/auth/join',{data},{withCredentials:true}); \r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction* sagaJoin(action){\r\n    \r\n    try{\r\n       console.log(action, action.data);\r\n        const result = yield call(APIJoin,action.data); \r\n        yield put({\r\n            type:JOIN_SUCCESS,\r\n            data: result,\r\n        }); \r\n\r\n    }catch(e){\r\n\r\n      console.error(e); \r\n\r\n        yield put({\r\n            type:JOIN_FAILURE,\r\n            error:e, \r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction* watchJoin(){\r\n    yield takeLatest(JOIN_REQUEST,sagaJoin)\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n//로그인 사이클\r\n//------------------------------------------------------------------------\r\nfunction APILogin(data){\r\n    return axios.post('/auth/login',data,{withCredentials:true}); \r\n}\r\n\r\nfunction* sagaLogin(action){\r\n\r\n\r\n    try{\r\n        const result = yield call(APILogin,action.data); \r\n        yield put({\r\n            type:LOGIN_SUCCESS,\r\n            data: result.data,\r\n        }); \r\n\r\n\r\n    }catch(e){\r\n        alert('로그인 에러'); \r\n        yield put({\r\n            type:LOGIN_FAILURE, \r\n            error:e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOGIN_REQUEST,sagaLogin); \r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\nexport default function* authSag(){\r\n\r\n\r\n    yield all([\r\n        fork(watchJoin), \r\n        fork(watchLogin), \r\n        fork(watchLoadUser), \r\n        \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}