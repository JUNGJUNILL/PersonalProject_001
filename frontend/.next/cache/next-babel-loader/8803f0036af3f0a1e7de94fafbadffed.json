{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { JOIN_REQUEST, JOIN_SUCCESS, JOIN_FAILURE } from '../reducers/auth';\n\nfunction APIJoin(data) {\n  return axios.post('/auth', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaJoin(action) {\n  try {\n    console.log(action, action.data);\n    const result = yield call(APIJoin, action.data);\n    yield put({\n      type: JOIN_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.error('sagaJoinERR', e);\n    yield put({\n      type: JOIN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchJoin() {\n  yield takeLatest(JOIN_REQUEST, sagaJoin);\n}\n\nexport default function* authSag() {\n  yield all([fork(watchJoin)]);\n}","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/authSaga.js"],"names":["axios","all","fork","takeLatest","takeEvery","put","delay","call","JOIN_REQUEST","JOIN_SUCCESS","JOIN_FAILURE","APIJoin","data","post","withCredentials","sagaJoin","action","console","log","result","type","e","error","watchJoin","authSag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,UAAjB,EAA4BC,SAA5B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAkDC,IAAlD,QAA6D,oBAA7D;AACA,SACKC,YADL,EAEKC,YAFL,EAGKC,YAHL,QAKK,kBALL;;AAQA,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AAElB,SAAOZ,KAAK,CAACa,IAAN,CAAW,OAAX,EAAmB;AAACD,IAAAA;AAAD,GAAnB,EAA0B;AAACE,IAAAA,eAAe,EAAC;AAAjB,GAA1B,CAAP;AAEH;;AAED,UAAUC,QAAV,CAAmBC,MAAnB,EAA0B;AAEtB,MAAG;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBA,MAAM,CAACJ,IAA3B;AACC,UAAMO,MAAM,GAAG,MAAMZ,IAAI,CAACI,OAAD,EAASK,MAAM,CAACJ,IAAhB,CAAzB;AACA,UAAMP,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACX,YADC;AAENG,MAAAA,IAAI,EAAEO;AAFA,KAAD,CAAT;AAKH,GARD,CAQC,OAAME,CAAN,EAAQ;AAELJ,IAAAA,OAAO,CAACK,KAAR,CAAc,aAAd,EAA8BD,CAA9B;AAEA,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACV,YADC;AAENY,MAAAA,KAAK,EAACD;AAFA,KAAD,CAAT;AAIH;AAEJ;;AAED,UAAUE,SAAV,GAAqB;AACjB,QAAMpB,UAAU,CAACK,YAAD,EAAcO,QAAd,CAAhB;AACH;;AAGD,eAAe,UAAUS,OAAV,GAAmB;AAG9B,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACqB,SAAD,CADE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {JOIN_REQUEST,\r\n     JOIN_SUCCESS,\r\n     JOIN_FAILURE\r\n    } \r\nfrom '../reducers/auth'; \r\n\r\n\r\nfunction APIJoin(data){\r\n\r\n    return axios.post('/auth',{data},{withCredentials:true}); \r\n\r\n}\r\n\r\nfunction* sagaJoin(action){\r\n    \r\n    try{\r\n       console.log(action, action.data);\r\n        const result = yield call(APIJoin,action.data); \r\n        yield put({\r\n            type:JOIN_SUCCESS,\r\n            data: result,\r\n        }); \r\n\r\n    }catch(e){\r\n\r\n        console.error('sagaJoinERR' , e); \r\n\r\n        yield put({\r\n            type:JOIN_FAILURE,\r\n            error:e, \r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction* watchJoin(){\r\n    yield takeLatest(JOIN_REQUEST,sagaJoin)\r\n}\r\n\r\n\r\nexport default function* authSag(){\r\n\r\n\r\n    yield all([\r\n        fork(watchJoin), \r\n        \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}