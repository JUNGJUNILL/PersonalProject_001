{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { MAINPOSTS_1001_LIST_REQUEST, MAINPOSTS_1001_LIST_SUCCESS, MAINPOSTS_1001_LIST_FAILURE, MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_DETAIL_INFO_SUCCESS, MAINPOSTS_1001_DETAIL_INFO_FAILURE, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTS_SUCCESS, MAINPOSTS_1001_COMMENTS_FAILURE, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTINSERT_SUCCESS, MAINPOSTS_1001_COMMENTINSERT_FAILURE, MAINPOSTS_1001_COMMENTLIKE_REQUEST, MAINPOSTS_1001_COMMENTLIKE_SUCCESS, MAINPOSTS_1001_COMMENTLIKE_FAILURE } from '../reducers/mainPosts_1001'; //mainPost_1001 리스트 \n//-----------------------------------------------------------------------------------\n\nfunction APImainPosts_1001List(data) {\n  return axios.post('/mainPosts_1001', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaMainPosts_1001List(action) {\n  try {\n    const result = yield call(APImainPosts_1001List, action.data);\n    yield put({\n      type: MAINPOSTS_1001_LIST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: MAINPOSTS_1001_LIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainPosts_1001() {\n  yield takeLatest(MAINPOSTS_1001_LIST_REQUEST, sagaMainPosts_1001List);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 상세정보 \n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001Detail(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001Detail', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaMainPosts_1001Detail(action) {\n  try {\n    const result = yield call(APImainPosts_1001Detail, action.data);\n    yield put({\n      type: MAINPOSTS_1001_DETAIL_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: MAINPOSTS_1001_DETAIL_INFO_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainPosts_1001Detail() {\n  yield takeLatest(MAINPOSTS_1001_DETAIL_INFO_REQUEST, sagaMainPosts_1001Detail);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 상세 정보 댓글 리스트\n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentList(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001Comments', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaMainPosts_1001CommentList(action) {\n  try {\n    const result = yield call(APImainPosts_1001CommentList, action.data);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainPosts_1001CommentList() {\n  yield takeLatest(MAINPOSTS_1001_COMMENTS_REQUEST, sagaMainPosts_1001CommentList);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 댓글 입력\n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentInsert(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001CommentInsert', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaMainPosts_1001CommentInsert(action) {\n  try {\n    const result = yield call(APImainPosts_1001CommentInsert, action.data);\n    console.log('댓글 입력==>', result.data);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTINSERT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTINSERT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainPosts_1001CommentInsert() {\n  yield takeLatest(MAINPOSTS_1001_COMMENTINSERT_REQUEST, sagaMainPosts_1001CommentInsert);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 댓글 LIKE / DISLIKE \n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentLike(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001CommentLike', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaMainPosts_1001CommentLike(action) {\n  try {\n    const result = yield call(APImainPosts_1001CommentLike, action.data);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTLIKE_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: MAINPOSTS_1001_COMMENTLIKE_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainPosts_1001CommentLike() {\n  yield takeLatest(MAINPOSTS_1001_COMMENTLIKE_REQUEST, sagaMainPosts_1001CommentLike);\n} //-----------------------------------------------------------------------------------\n\n\nexport default function* mainPosts_1001Saga() {\n  yield all([fork(watchMainPosts_1001), fork(watchMainPosts_1001Detail), fork(watchMainPosts_1001CommentList), fork(watchMainPosts_1001CommentInsert), fork(watchMainPosts_1001CommentLike)]);\n}","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/sagas/mainPosts_1001Saga.js"],"names":["axios","all","fork","takeLatest","takeEvery","put","delay","call","MAINPOSTS_1001_LIST_REQUEST","MAINPOSTS_1001_LIST_SUCCESS","MAINPOSTS_1001_LIST_FAILURE","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_DETAIL_INFO_SUCCESS","MAINPOSTS_1001_DETAIL_INFO_FAILURE","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTS_SUCCESS","MAINPOSTS_1001_COMMENTS_FAILURE","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTINSERT_SUCCESS","MAINPOSTS_1001_COMMENTINSERT_FAILURE","MAINPOSTS_1001_COMMENTLIKE_REQUEST","MAINPOSTS_1001_COMMENTLIKE_SUCCESS","MAINPOSTS_1001_COMMENTLIKE_FAILURE","APImainPosts_1001List","data","post","withCredentials","sagaMainPosts_1001List","action","result","type","e","console","error","alert","watchMainPosts_1001","APImainPosts_1001Detail","sagaMainPosts_1001Detail","watchMainPosts_1001Detail","APImainPosts_1001CommentList","sagaMainPosts_1001CommentList","watchMainPosts_1001CommentList","APImainPosts_1001CommentInsert","sagaMainPosts_1001CommentInsert","log","watchMainPosts_1001CommentInsert","APImainPosts_1001CommentLike","sagaMainPosts_1001CommentLike","watchMainPosts_1001CommentLike","mainPosts_1001Saga"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {\r\n        MAINPOSTS_1001_LIST_REQUEST,\r\n        MAINPOSTS_1001_LIST_SUCCESS,\r\n        MAINPOSTS_1001_LIST_FAILURE,    \r\n\r\n        MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n        MAINPOSTS_1001_DETAIL_INFO_SUCCESS,\r\n        MAINPOSTS_1001_DETAIL_INFO_FAILURE,\r\n\r\n        MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        MAINPOSTS_1001_COMMENTS_SUCCESS, \r\n        MAINPOSTS_1001_COMMENTS_FAILURE, \r\n\r\n        MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n        MAINPOSTS_1001_COMMENTINSERT_SUCCESS,\r\n        MAINPOSTS_1001_COMMENTINSERT_FAILURE, \r\n\r\n        MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n        MAINPOSTS_1001_COMMENTLIKE_SUCCESS,\r\n        MAINPOSTS_1001_COMMENTLIKE_FAILURE,\r\n\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\n\r\n\r\n//mainPost_1001 리스트 \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001List(data){\r\n    return axios.post('/mainPosts_1001',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaMainPosts_1001List(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001List,action.data);  \r\n      yield  put({\r\n            type:MAINPOSTS_1001_LIST_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchMainPosts_1001(){\r\n    yield takeLatest(MAINPOSTS_1001_LIST_REQUEST,sagaMainPosts_1001List); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//mainPost_1001 상세정보 \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001Detail(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001Detail',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaMainPosts_1001Detail(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001Detail,action.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_DETAIL_INFO_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_DETAIL_INFO_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchMainPosts_1001Detail(){\r\n    yield takeLatest(MAINPOSTS_1001_DETAIL_INFO_REQUEST,sagaMainPosts_1001Detail); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//mainPost_1001 상세 정보 댓글 리스트\r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentList(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001Comments',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentList(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentList,action.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTS_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTS_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentList(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTS_REQUEST,sagaMainPosts_1001CommentList); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//mainPost_1001 댓글 입력\r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentInsert(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001CommentInsert',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentInsert(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentInsert,action.data); \r\n      console.log('댓글 입력==>' , result.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentInsert(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTINSERT_REQUEST,sagaMainPosts_1001CommentInsert); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//mainPost_1001 댓글 LIKE / DISLIKE \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentLike(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001CommentLike',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentLike(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentLike,action.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentLike(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTLIKE_REQUEST,sagaMainPosts_1001CommentLike); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nexport default function* mainPosts_1001Saga(){\r\n\r\n    yield all([\r\n        fork(watchMainPosts_1001), \r\n        fork(watchMainPosts_1001Detail), \r\n        fork(watchMainPosts_1001CommentList), \r\n        fork(watchMainPosts_1001CommentInsert), \r\n        fork(watchMainPosts_1001CommentLike), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}