{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\utilComponent\\\\Pagenation.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { number } from 'prop-types';\nimport Link from 'next/link';\n\nvar Pagenation = function Pagenation(_ref) {\n  var pagenate = _ref.pagenate,\n      dataLength = _ref.dataLength,\n      postsPerPage = _ref.postsPerPage;\n  var pageNumers = [];\n  console.log('dataLength', dataLength);\n\n  if (dataLength !== 5) {\n    pageNumers.length = 0;\n\n    for (var i = 1; i <= postsPerPage; i++) {\n      pageNumers.push(i);\n    }\n  } else {\n    pageNumers.length = 0;\n\n    for (var _i = 1; _i <= 5; _i++) {\n      pageNumers.push(_i);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"nav\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, pageNumers.map(function (v) {\n    return __jsx(\"li\", {\n      key: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }\n    }, __jsx(Link, {\n      href: '#',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 30\n      }\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return pagenate(v);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 47\n      }\n    }, v))));\n  }))));\n};\n\n_c = Pagenation;\nexport default Pagenation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagenation\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/utilComponent/Pagenation.js"],"names":["React","useState","useCallback","useEffect","number","Link","Pagenation","pagenate","dataLength","postsPerPage","pageNumers","console","log","length","i","push","map","v"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,WAAvB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuC;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAjBC,YAAiB,QAAjBA,YAAiB;AAEtD,MAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,UAA1B;;AACA,MAAGA,UAAU,KAAK,CAAlB,EAAoB;AAChBE,IAAAA,UAAU,CAACG,MAAX,GAAkB,CAAlB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEL,YAAhB,EAA8BK,CAAC,EAA/B,EAAkC;AAC9BJ,MAAAA,UAAU,CAACK,IAAX,CAAgBD,CAAhB;AACH;AAEJ,GAND,MAMK;AACDJ,IAAAA,UAAU,CAACG,MAAX,GAAkB,CAAlB;;AACA,SAAI,IAAIC,EAAC,GAAC,CAAV,EAAaA,EAAC,IAAE,CAAhB,EAAmBA,EAAC,EAApB,EAAuB;AACnBJ,MAAAA,UAAU,CAACK,IAAX,CAAgBD,EAAhB;AACH;AACJ;;AAGD,SACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UAAU,CAACM,GAAX,CAAe,UAAAC,CAAC;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAG,MAAA,OAAO,EAAE;AAAA,eAAIV,QAAQ,CAACU,CAAD,CAAZ;AAAA,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,CAA9B,CAAjB,CAAJ,CADL,CADa;AAAA,GAAhB,CADL,CADJ,CADA,CADJ;AAcH,CAhCD;;KAAMX,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React,{useState,useCallback,useEffect} from 'react'\r\nimport { number } from 'prop-types';\r\nimport Link from 'next/link'\r\n\r\nconst Pagenation = ({pagenate,dataLength,postsPerPage}) =>{\r\n\r\n    const pageNumers = []; \r\n    console.log('dataLength', dataLength)\r\n    if(dataLength !== 5){\r\n        pageNumers.length=0; \r\n        for(let i=1; i<=postsPerPage; i++){\r\n            pageNumers.push(i);\r\n        }\r\n\r\n    }else{\r\n        pageNumers.length=0; \r\n        for(let i=1; i<=5; i++){\r\n            pageNumers.push(i);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>  \r\n        <nav>\r\n            <ul>\r\n                {pageNumers.map(v=>(\r\n                    <li key={v}>\r\n                         <li><Link href={'#'}><a onClick={()=>pagenate(v)}>{v}</a></Link></li>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Pagenation; "]},"metadata":{},"sourceType":"module"}