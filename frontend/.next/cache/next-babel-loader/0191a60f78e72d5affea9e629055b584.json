{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { EMP_LIST_REQUEST, EMP_LIST_SUCCESS, EMP_LIST_FAILURE } from '../reducers/emp';\n\nfunction APIempList(data) {\n  return axios.post('/emp', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaEmpList(action) {\n  try {\n    //  const result = yield call(APIempList,action.data); \n    const result = {\n      data: [{\n        EMPNO: \"1001\",\n        ENAME: \"정준하\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"하동훈\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"오지호\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"이병헌\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"신동협\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"장동건\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"이문세\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"감우성\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"안성기\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"이병헌\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"조향기\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"강혜정\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"박중훈\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"조인성\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"유재석\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }, {\n        EMPNO: \"1001\",\n        ENAME: \"박명수\",\n        JOB: \"사원\",\n        MGR: \"1013\",\n        HIREDATE: \"2007-03-01\",\n        SAL: \"300.00\",\n        COMM: \"NULL\",\n        DEPTNO: \"20\"\n      }]\n    };\n    yield put({\n      type: EMP_LIST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('사가 에러', e);\n    yield put({\n      type: EMP_LIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchempList() {\n  yield takeLatest(EMP_LIST_REQUEST, sagaEmpList);\n}\n\nexport default function* empListSaga() {\n  yield all([fork(watchempList)]);\n}","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/empListSaga.js"],"names":["axios","all","fork","takeLatest","takeEvery","put","delay","call","EMP_LIST_REQUEST","EMP_LIST_SUCCESS","EMP_LIST_FAILURE","APIempList","data","post","withCredentials","sagaEmpList","action","result","EMPNO","ENAME","JOB","MGR","HIREDATE","SAL","COMM","DEPTNO","type","e","console","error","alert","watchempList","empListSaga"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {EMP_LIST_REQUEST,\r\n     EMP_LIST_SUCCESS,\r\n     EMP_LIST_FAILURE\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\n\r\nfunction APIempList(data){\r\n    return axios.post('/emp',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaEmpList(action){\r\n\r\n    try{\r\n    //  const result = yield call(APIempList,action.data); \r\n    const result ={data : [\r\n\r\n        {EMPNO: \"1001\",\tENAME: \"정준하\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"하동훈\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"오지호\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이병헌\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"신동협\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"장동건\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이문세\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"감우성\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"안성기\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이병헌\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"조향기\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"강혜정\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"박중훈\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"조인성\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"유재석\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"박명수\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"}\r\n        ]};   \r\n      yield  put({\r\n            type:EMP_LIST_SUCCESS, \r\n            data: result.data, \r\n        })\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('사가 에러',e); \r\n        yield put({\r\n            type:EMP_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchempList(){\r\n    yield takeLatest(EMP_LIST_REQUEST,sagaEmpList); \r\n}\r\n\r\nexport default function* empListSaga(){\r\n\r\n    yield all([\r\n        fork(watchempList), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}