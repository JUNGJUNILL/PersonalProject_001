{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaEmpList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchempList),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(empListSaga);\n\nimport axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { EMP_LIST_REQUEST, EMP_LIST_SUCCESS, EMP_LIST_FAILURE } from '../reducers/emp';\n\nfunction APIempList(data) {\n  return axios.post('/emp', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c = APIempList;\n\nfunction sagaEmpList(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaEmpList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          //  const result = yield call(APIempList,action.data); \n          result = {\n            data: [{\n              EMPNO: \"1001\",\n              ENAME: \"정준하\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"하동훈\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"오지호\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"이병헌\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"신동협\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"장동건\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"이문세\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"감우성\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"안성기\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"이병헌\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"조향기\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"강혜정\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"박중훈\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"조인성\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"유재석\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }, {\n              EMPNO: \"1001\",\n              ENAME: \"박명수\",\n              JOB: \"사원\",\n              MGR: \"1013\",\n              HIREDATE: \"2007-03-01\",\n              SAL: \"300.00\",\n              COMM: \"NULL\",\n              DEPTNO: \"20\"\n            }]\n          };\n          _context.next = 4;\n          return put({\n            type: EMP_LIST_SUCCESS,\n            data: result.data\n          });\n\n        case 4:\n          _context.next = 12;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          alert('사가 에러', _context.t0);\n          _context.next = 12;\n          return put({\n            type: EMP_LIST_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction watchempList() {\n  return _regeneratorRuntime.wrap(function watchempList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(EMP_LIST_REQUEST, sagaEmpList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function empListSaga() {\n  return _regeneratorRuntime.wrap(function empListSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchempList)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"APIempList\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/empListSaga.js"],"names":["sagaEmpList","watchempList","empListSaga","axios","all","fork","takeLatest","takeEvery","put","delay","call","EMP_LIST_REQUEST","EMP_LIST_SUCCESS","EMP_LIST_FAILURE","APIempList","data","post","withCredentials","action","result","EMPNO","ENAME","JOB","MGR","HIREDATE","SAL","COMM","DEPTNO","type","console","error","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {EMP_LIST_REQUEST,\r\n     EMP_LIST_SUCCESS,\r\n     EMP_LIST_FAILURE\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\n\r\nfunction APIempList(data){\r\n    return axios.post('/emp',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaEmpList(action){\r\n\r\n    try{\r\n    //  const result = yield call(APIempList,action.data); \r\n    const result ={data : [\r\n\r\n        {EMPNO: \"1001\",\tENAME: \"정준하\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"하동훈\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"오지호\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이병헌\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"신동협\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"장동건\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이문세\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"감우성\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"안성기\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"이병헌\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"조향기\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"강혜정\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"박중훈\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"조인성\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"유재석\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"},\r\n        {EMPNO: \"1001\",\tENAME: \"박명수\",JOB:\"사원\",MGR:\"1013\",HIREDATE:\"2007-03-01\",SAL:\"300.00\",COMM:\"NULL\",DEPTNO:\"20\"}\r\n        ]};   \r\n      yield  put({\r\n            type:EMP_LIST_SUCCESS, \r\n            data: result.data, \r\n        })\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('사가 에러',e); \r\n        yield put({\r\n            type:EMP_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchempList(){\r\n    yield takeLatest(EMP_LIST_REQUEST,sagaEmpList); \r\n}\r\n\r\nexport default function* empListSaga(){\r\n\r\n    yield all([\r\n        fork(watchempList), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}