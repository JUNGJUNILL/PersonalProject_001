{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar Comments1001 = function Comments1001(_ref) {\n  _s();\n\n  var createdDate = _ref.createdDate,\n      comment = _ref.comment,\n      commentId = _ref.commentId,\n      flag = _ref.flag,\n      good = _ref.good,\n      bad = _ref.bad,\n      nickName = _ref.nickName,\n      who = _ref.who,\n      postFlag = _ref.postFlag,\n      postId = _ref.postId,\n      click = _ref.click;\n  var dispatch = useDispatch();\n  console.log('clickProps=>', click);\n\n  var _useState = useState(good),\n      goodCount = _useState[0],\n      setGoodCount = _useState[1];\n\n  var _useState2 = useState(false),\n      like = _useState2[0],\n      setLike = _useState2[1];\n\n  var _useState3 = useState(false),\n      disLike = _useState3[0],\n      setDisLike = _useState3[1];\n\n  var badCount = parseInt(bad);\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      if (likeDislike === \"good\") {\n        setLike(true);\n        setDisLike(false);\n      } else {\n        setLike(false);\n        setDisLike(true);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName\n        }\n      });\n    } //  setGoodCount(parseInt(good)+1); \n    //댓글 리스트 \n    //   dispatch({\n    //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \n    //     data:{\n    //       postId,\n    //       nickName,\n    //       postFlag,\n    //       who:userInfo, \n    //     }\n    // }); \n\n\n    alert(\"\".concat(likeDislike));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 87\n    }\n  }), comment, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'good');\n    },\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'bad');\n    },\n    twoToneColor: disLike ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 162\n    }\n  }), bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 300\n    }\n  }))));\n};\n\n_s(Comments1001, \"Z+GoAFugrkz/PTv046jp4+9oi58=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments1001;\nexport default Comments1001;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments1001\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","createdDate","comment","commentId","flag","good","bad","nickName","who","postFlag","postId","click","dispatch","console","log","goodCount","setGoodCount","like","setLike","disLike","setDisLike","badCount","parseInt","state","auth","userInfo","likeBtn","commentid","likeDislike","alert","type","data","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({createdDate,\r\n                      comment,\r\n                      commentId,\r\n                      flag,\r\n                      good,\r\n                      bad,\r\n                      nickName,\r\n                      who,\r\n                      postFlag,\r\n                      postId,\r\n                      click,\r\n\r\n                    })=>{\r\n\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n                    console.log('clickProps=>' , click); \r\n    const [goodCount,setGoodCount] = useState(good);  \r\n\r\n    \r\n\r\n  const [like , setLike]  = useState(false); \r\n  const [disLike , setDisLike]  = useState(false); \r\n\r\n\r\n    let badCount  =parseInt(bad); \r\n\r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            if(likeDislike ===\"good\"){\r\n                setLike(true); \r\n                setDisLike(false); \r\n            }else{\r\n                setLike(false); \r\n                setDisLike(true); \r\n            }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n\r\n    \r\n        }\r\n      //  setGoodCount(parseInt(good)+1); \r\n        //댓글 리스트 \r\n      //   dispatch({\r\n      //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n      //     data:{\r\n      //       postId,\r\n      //       nickName,\r\n      //       postFlag,\r\n      //       who:userInfo, \r\n      //     }\r\n         \r\n      // }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div  className='divTableRow' >\r\n                    <div  className=\"divTableCell\">\r\n                    <b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"}/>{good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={disLike ? \"#ff0000\" : \"#1ba640\"} />{bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}