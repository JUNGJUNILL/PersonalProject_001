{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_textArea.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { MAINPOSTS_1001_COMMENTINSERT_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar CommentTextArea = function CommentTextArea(_ref) {\n  _s();\n\n  var userInfo = _ref.userInfo;\n  var dispatch = useDispatch();\n  var ref = createRef();\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var blank_pattern = /^\\s+|\\s+&/g; //댓글 입력 textArea \n\n  var onChageComment = useCallback(function (e) {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  var insertComment = useCallback(function (e) {\n    if (comment.length === 0 || comment.replace(blank_pattern, '') === \"\") {\n      ref.current.focus();\n      alert('댓글을 입력해 주세요!');\n      return;\n    }\n\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    } //댓글 입력\n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTINSERT_REQUEST,\n      data: {\n        postId: postId,\n        postFlag: postFlag,\n        nickName: nickName,\n        who: userInfo,\n        comment: comment\n      }\n    });\n    setComment(''); //댓글 리스트 \n    //   dispatch({\n    //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \n    //     data:{\n    //       postId,\n    //       nickName,\n    //       postFlag,\n    //       who:userInfo,\n    //     }\n    // }); \n  }, [comment]);\n  return __jsx(React.Fragment, null, __jsx(\"textarea\", {\n    value: comment,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: insertComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")));\n};\n\n_s(CommentTextArea, \"i9fF1qnyxSRIwRcszCIlsiabXi0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentTextArea;\nexport default CommentTextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentTextArea\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_textArea.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Button","MAINPOSTS_1001_COMMENTINSERT_REQUEST","CommentTextArea","userInfo","dispatch","ref","comment","setComment","blank_pattern","onChageComment","e","length","alert","target","value","insertComment","replace","current","focus","type","data","postId","postFlag","nickName","who","width","height","marginTop","margin","display"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button} from 'antd'\r\n\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst  CommentTextArea= ({userInfo}) =>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const ref = createRef(); \r\n    const [comment, setComment] = useState(''); \r\n    const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n    \r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n  \r\n\r\n\r\n  const insertComment = useCallback((e)=>{\r\n    if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n          ref.current.focus();  \r\n          alert('댓글을 입력해 주세요!'); \r\n          return; \r\n        }\r\n    \r\n        if(comment.length === 300){\r\n          alert('300자 이상 입력 할 수 없습니다.'); \r\n          return; \r\n        }\r\n          //댓글 입력\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_REQUEST, \r\n            data:{\r\n              postId,\r\n              postFlag,\r\n              nickName ,\r\n              who:userInfo, \r\n              comment,\r\n            }\r\n        });\r\n    \r\n        setComment(''); \r\n    \r\n    \r\n        //댓글 리스트 \r\n        //   dispatch({\r\n        //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        //     data:{\r\n        //       postId,\r\n        //       nickName,\r\n        //       postFlag,\r\n        //       who:userInfo,\r\n        //     }\r\n        // }); \r\n      },[comment]);\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <textarea  value={comment}  style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n      <Button type=\"primary\" onClick={insertComment}>댓글달기</Button>\r\n    </div>\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default CommentTextArea; "]},"metadata":{},"sourceType":"module"}