{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments copy.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport Comment1001ByComments from './mainPosts_1001_commentByComments';\nimport CommentTextArea from './mainPosts_1001_textArea';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST } from '../../reducers/mainPosts_1001';\nimport { Badge } from 'antd';\n\nconst Comments1001 = ({\n  commentList\n}) => {\n  console.log('댓글 commentList', commentList);\n  const dispatch = useDispatch();\n  const {\n    clickCommentId\n  } = useSelector(state => state.mainPosts_1001);\n  const ref = createRef();\n  const blank_pattern = /^\\s+|\\s+&/g;\n  const {\n    0: array,\n    1: setArray\n  } = useState([]);\n  useEffect(() => {\n    setArray([...commentList]);\n  }, [commentList]); //대댓글 입력 \n  //   const insertComment = useCallback((postFlag,postId,nickName ,comment)=>{\n  //     if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\n  //         alert('댓글을 입력해 주세요!'); \n  //         ref.current.focus();  \n  //         return; \n  //         }\n  //         dispatch({\n  //             type:MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST, \n  //             data:{\n  //                 postFlag,\n  //                 nickName,\n  //                 postId,\n  //                 commentId,\n  //                 who:userInfo,\n  //                 comment,   \n  //             }\n  //         })\n  //       },[mainPosts_1001CommentByComments]);\n\n  return __jsx(React.Fragment, null, array.map((v, i) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, v.commentId)));\n};\n\nexport default memo(Comments1001);","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments copy.js"],"names":["React","useCallback","useEffect","useState","createRef","memo","useDispatch","useSelector","custumDateFormat","Comment1001ByComments","CommentTextArea","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST","Badge","Comments1001","commentList","console","log","dispatch","clickCommentId","state","mainPosts_1001","ref","blank_pattern","array","setArray","map","v","i","commentId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,IAA5D,QAAwE,OAAxE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,gBAAP,MAA8B,sCAA9B;AAEA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,eAAP,MAAkC,2BAAlC;AACA,SAAQC,cAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,SAEQC,6CAFR,QAIK,+BAJL;AAKA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAEdC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,WAA7B;AAEhB,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAACc,IAAAA;AAAD,MAAmBb,WAAW,CAAEc,KAAD,IAASA,KAAK,CAACC,cAAhB,CAApC;AACA,QAAMC,GAAG,GAAGnB,SAAS,EAArB;AACA,QAAMoB,aAAa,GAAG,YAAtB;AAEA,QAAM;AAAA,OAACC,KAAD;AAAA,OAASC;AAAT,MAAqBvB,QAAQ,CAAC,EAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVwB,IAAAA,QAAQ,CAAC,CAAC,GAAGV,WAAJ,CAAD,CAAR;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT,CAV8B,CAclC;AACJ;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,SACI,4BACCS,KAAK,CAACE,GAAN,CAAU,CAACC,CAAD,EAAGC,CAAH,KAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CAAC,CAACE,SADP,CAFH,CADD,CADJ;AAiBH,CA1DD;;AA4DA,eAAezB,IAAI,CAACU,YAAD,CAAnB","sourcesContent":["import React, { useCallback,useEffect, useState, createRef, memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\n\r\nimport Comment1001ByComments from './mainPosts_1001_commentByComments'\r\nimport CommentTextArea       from './mainPosts_1001_textArea'\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n        MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\nimport { Badge } from 'antd';\r\n\r\nconst Comments1001 = ({commentList})=>{\r\n                \r\n                        console.log('댓글 commentList',commentList);\r\n                        \r\n        const dispatch = useDispatch();\r\n        const {clickCommentId} = useSelector((state)=>state.mainPosts_1001); \r\n        const ref = createRef(); \r\n        const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n        const [array , setArray] = useState([]); \r\n        useEffect(()=>{\r\n            setArray([...commentList]); \r\n        },[commentList])\r\n        \r\n    //대댓글 입력 \r\n//   const insertComment = useCallback((postFlag,postId,nickName ,comment)=>{\r\n   \r\n//     if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n      \r\n         \r\n//         alert('댓글을 입력해 주세요!'); \r\n//         ref.current.focus();  \r\n//         return; \r\n//         }\r\n\r\n\r\n//         dispatch({\r\n//             type:MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST, \r\n//             data:{\r\n//                 postFlag,\r\n//                 nickName,\r\n//                 postId,\r\n//                 commentId,\r\n//                 who:userInfo,\r\n//                 comment,   \r\n//             }\r\n//         })\r\n//       },[mainPosts_1001CommentByComments]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {array.map((v,i)=>(\r\n\r\n            <div>\r\n                {v.commentId}\r\n            </div>\r\n\r\n\r\n        ))}\r\n     \r\n        </>   \r\n\r\n\r\n                \r\n    )\r\n\r\n}\r\n\r\nexport default memo(Comments1001); "]},"metadata":{},"sourceType":"module"}