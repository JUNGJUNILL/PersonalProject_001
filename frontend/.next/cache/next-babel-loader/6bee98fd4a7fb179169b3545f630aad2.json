{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\CKEditor.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input, Alert } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { EMP_INSERT_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/emp';\n\nconst Editor = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths\n  } = useSelector(state => state.emp);\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const imageInput = useRef();\n\n  const abc = () => {\n    console.log('content=>', content);\n    alert(content);\n  }; //이미지 업로드 창 \n\n\n  const onChangeImages = useCallback(e => {\n    const imageFormData = new FormData();\n    Array.prototype.forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []); //이미지 업로드 클릭 \n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(\"div\", {\n    className: \"demo-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC791\\uC131\\uD574 \\uBCF4\\uC138\\uC694!\"), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(CKEditor, {\n    editor: ClassicEditor,\n    config: {\n      ckfinder: {\n        uploadUrl: 'http://localhost:3095/api/emp/ckeditor' //  headers:{\n        //     \"X-CSRF-TOKEN\": \"CSFR-Token\",\n        //     \"Access-Control-Allow-Origin\":\"*\", \n        // }\n\n      },\n      toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'imageUpload'],\n      placeholder: \"글을 입력해보세요!\"\n    } //data=\"<p>Hello from CKEditor 5!</p>\"\n    //최소 실행시 보여줄 문구 \n    ,\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setContent(data);\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log('Blur.', editor);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: abc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"\\uBC97\\uC740\"));\n};\n\nexport default Editor;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/CKEditor.js"],"names":["useState","useCallback","useRef","useDispatch","useSelector","Button","Input","Alert","CKEditor","ClassicEditor","EMP_INSERT_REQUEST","UPLOAD_IMAGES_REQUEST","Editor","dispatch","imagePaths","state","emp","content","setContent","imageInput","abc","console","log","alert","onChangeImages","e","imageFormData","FormData","Array","prototype","forEach","call","target","files","f","append","type","data","onClickImageUpload","current","click","ckfinder","uploadUrl","toolbar","placeholder","editor","event","getData"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button, Input, Alert} from 'antd'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport \r\n    {EMP_INSERT_REQUEST, \r\n     UPLOAD_IMAGES_REQUEST,\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Editor = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {imagePaths} = useSelector((state)=>state.emp); \r\n    const [content,setContent] = useState('');   \r\n    const imageInput = useRef(); \r\n\r\n    const abc = ()=>{\r\n        console.log('content=>' , content); \r\n        alert(content); \r\n    }\r\n\r\n        //이미지 업로드 창 \r\n        const onChangeImages = useCallback((e)=>{\r\n        \r\n            const imageFormData = new FormData(); \r\n            Array.prototype.forEach.call(e.target.files ,(f)=>{\r\n                imageFormData.append('image',f); \r\n            });\r\n            \r\n            dispatch({\r\n                    type:UPLOAD_IMAGES_REQUEST,\r\n                    data:imageFormData,             \r\n            }); \r\n    \r\n        },[]); \r\n    \r\n\r\n\r\n    //이미지 업로드 클릭 \r\n    const onClickImageUpload = useCallback(() =>{\r\n        imageInput.current.click(); \r\n\r\n    },[imageInput.current]); \r\n\r\n\r\n    return(\r\n\r\n        \r\n        <div className=\"demo-editor\">\r\n        <h2>게시글을 작성해 보세요!</h2>\r\n\r\n        <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n\r\n        <CKEditor\r\n            editor={ ClassicEditor }\r\n            config={{\r\n             \r\n                ckfinder:{\r\n                     uploadUrl:'http://localhost:3095/api/emp/ckeditor',\r\n        \r\n                    //  headers:{\r\n                    //     \"X-CSRF-TOKEN\": \"CSFR-Token\",\r\n                    //     \"Access-Control-Allow-Origin\":\"*\", \r\n                    // }\r\n                    \r\n                },\r\n                toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList','imageUpload'],\r\n                placeholder: \"글을 입력해보세요!\",\r\n            \r\n\r\n            }}\r\n\r\n\r\n            //data=\"<p>Hello from CKEditor 5!</p>\"\r\n            //최소 실행시 보여줄 문구 \r\n\r\n            onInit={ editor => {\r\n                // You can store the \"editor\" and use when it is needed.\r\n                console.log( 'Editor is ready to use!', editor );\r\n            } }\r\n            onChange={ ( event, editor ) => {\r\n                const data = editor.getData();\r\n                setContent(data); \r\n                console.log( { event, editor, data } );\r\n            } }\r\n            onBlur={ ( event, editor ) => {\r\n                console.log( 'Blur.', editor );\r\n            } }\r\n            onFocus={ ( event, editor ) => {\r\n                console.log( 'Focus.', editor );\r\n            } }\r\n        />\r\n        <Button onClick={abc}>벗은</Button>\r\n        </div>\r\n       \r\n\r\n    )\r\n\r\n} \r\n\r\n\r\nexport default Editor; "]},"metadata":{},"sourceType":"module"}