{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef, memo, useCallback } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Item from '../components/testComponent/Item';\nimport CreateUser from '../components/testComponent/CreateUser';\nimport UserList from '../components/testComponent/UserList';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST, MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST } from '../reducers/mainPosts_1001';\nimport { Badge } from 'antd';\n\nconst Test = () => {\n  /*\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n  \r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        //setNumbers(prev => [...prev, prev.length + 1]);\r\n        \r\n        console.log('numbers=>' , numbers, 'array=>' , array); \r\n        };\r\n  */\n  const {\n    mainPosts_1001Comments\n  } = useSelector(state => state.mainPosts_1001);\n  const dispatch = useDispatch();\n  console.log('hello world', mainPosts_1001Comments);\n  const {\n    0: a,\n    1: setA\n  } = useState('');\n  const {\n    0: b,\n    1: setB\n  } = useState('');\n  useEffect(() => {//댓글 리스트 \n    // dispatch({\n    //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \n    //   data:{\n    //     postId:'10000001',\n    //     nickName:'2222',\n    //     postFlag:'1001',\n    //     who:'nick1111', \n    //   }\n    // }); \n    // setA('dddd'); \n    // setB('DDDDDDDDDDDDDD'); \n  }, []);\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    username,\n    email\n  } = inputs; // const onChange = e =>{\n  // }\n\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  }, [name]);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com'\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    }; //추가된 데이터를 위로 올리기 \n\n    setUsers([user, ...users]); //추가된 데이터를 아래로 올리기 \n    //setUsers([...users,user]);\n\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    array: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useState","useEffect","useRef","memo","useCallback","useDispatch","useSelector","Item","CreateUser","UserList","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST","Badge","Test","mainPosts_1001Comments","state","mainPosts_1001","dispatch","console","log","a","setA","b","setB","inputs","setInputs","username","email","count","setCount","onChange","e","name","value","target","users","setUsers","id","nextId","onCreate","user","current"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef ,memo, useCallback} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Item from '../components/testComponent/Item'\r\nimport CreateUser from '../components/testComponent/CreateUser'\r\nimport UserList from '../components/testComponent/UserList'\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n     MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\nimport { Badge } from 'antd';\r\n\r\nconst Test = () =>{\r\n  /*\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n\r\n\r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        //setNumbers(prev => [...prev, prev.length + 1]);\r\n        \r\n        console.log('numbers=>' , numbers, 'array=>' , array); \r\n\r\n      };\r\n  */\r\n  const { mainPosts_1001Comments, } = useSelector((state)=>state.mainPosts_1001); \r\n\r\n const dispatch = useDispatch(); \r\n\r\n\r\n console.log('hello world',mainPosts_1001Comments); \r\n const [a,setA] = useState(''); \r\n const [b,setB] = useState(''); \r\n  useEffect(()=>{\r\n    //댓글 리스트 \r\n    // dispatch({\r\n    //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n    //   data:{\r\n    //     postId:'10000001',\r\n    //     nickName:'2222',\r\n    //     postFlag:'1001',\r\n    //     who:'nick1111', \r\n    //   }\r\n    // }); \r\n\r\n\r\n    // setA('dddd'); \r\n    // setB('DDDDDDDDDDDDDD'); \r\n\r\n  },[]); \r\n\r\n    const [inputs, setInputs] =useState({username:'', email:'', }); \r\n    const [count,setCount]= useState(0);\r\n    \r\n    const { username, email } = inputs;\r\n\r\n    // const onChange = e =>{\r\n    \r\n    // }\r\n\r\n    const onChange = useCallback((e)=>{\r\n      const {name, value} = e.target; \r\n\r\n      \r\n      setInputs({\r\n        ...inputs,[name]:value\r\n      }); \r\n    },[name])\r\n\r\n    const [users, setUsers] = useState([\r\n      {\r\n        id: 1,\r\n        username: 'velopert',\r\n        email: 'public.velopert@gmail.com'\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'tester',\r\n        email: 'tester@example.com'\r\n      },\r\n      {\r\n        id: 3,\r\n        username: 'liz',\r\n        email: 'liz@example.com'\r\n      }\r\n    ]);\r\n  \r\n    const nextId = useRef(4);\r\n    const onCreate = () => {\r\n      \r\n      const user = {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      };\r\n      \r\n      //추가된 데이터를 위로 올리기 \r\n      setUsers([user,...users]);\r\n\r\n      //추가된 데이터를 아래로 올리기 \r\n      //setUsers([...users,user]);\r\n\r\n\r\n      setInputs({\r\n        username: '',\r\n        email: ''\r\n      });\r\n  \r\n      nextId.current += 1;\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>\r\n          <CreateUser \r\n            username={username}\r\n            email={email}\r\n            onChange={onChange}\r\n            onCreate={onCreate}\r\n            array={users}\r\n          />\r\n          <button></button>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test; "]},"metadata":{},"sourceType":"module"}