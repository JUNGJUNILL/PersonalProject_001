{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayOut from '../components/AppLayOut';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport '../CSS/antdMobile.css';\nimport withRedux, { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas'; //프로젝트 고정 틀\n\nvar Project01_TodoList = function Project01_TodoList(_ref) {\n  var Component = _ref.Component;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"TodoList\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd-mobile/2.3.3/antd-mobile.css\",\n    integrity: \"sha256-uZbNsqglsHyapiY6Nlj8o9kAmliY/rWNCTqthjIHIXw=\",\n    crossorigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), __jsx(AppLayOut, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })));\n};\n\n_c = Project01_TodoList;\n\nProject01_TodoList.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //▲ next에서 제공해줌\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nProject01_TodoList.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware]; // 미들웨어들을 넣으면 된다.\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, initialState, enhancer); //react에서 redux를 사용하기 위해서는 createStore로 store를 생성해 주어야 한다. \n  //redux-next-wapper 6 버전 부터는 Provider store={store}를 내부적으로 해 준다. \n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default _c2 = wrapper.withRedux(Project01_TodoList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Project01_TodoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/pages/_app.js"],"names":["AppLayOut","Head","PropTypes","withRedux","createWrapper","createStore","compose","applyMiddleware","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","Project01_TodoList","Component","getInitialProps","context","ctx","pageProps","propTypes","elementType","isRequired","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","store","run","wrapper","debug"],"mappings":"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","sourcesContent":["import AppLayOut from '../components/AppLayOut';\r\nimport Head      from 'next/head';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport 'antd/dist/antd.css'; \r\nimport  '../CSS/antdMobile.css';\r\n\r\n\r\n\r\n\r\n\r\nimport withRedux , {createWrapper} from 'next-redux-wrapper';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport reducer  from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../sagas'; \r\n\r\n\r\n\r\n\r\n//프로젝트 고정 틀\r\nconst Project01_TodoList = ({Component}) =>{\r\n\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <title>TodoList</title>\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\"/>\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd-mobile/2.3.3/antd-mobile.css\" integrity=\"sha256-uZbNsqglsHyapiY6Nlj8o9kAmliY/rWNCTqthjIHIXw=\" crossorigin=\"anonymous\" />\r\n                </Head>\r\n                <AppLayOut>\r\n                    <Component />\r\n                </AppLayOut>\r\n            </div>\r\n            ); \r\n\r\n\r\n}\r\n\r\n\r\nProject01_TodoList.getInitialProps = async (context)=>{\r\n                                            //▲ next에서 제공해줌\r\nconst { ctx,Component } = context; \r\nlet pageProps ={}; \r\nif(Component.getInitialProps){\r\npageProps =  await Component.getInitialProps(ctx); \r\n}\r\nreturn {pageProps}; \r\n\r\n}\r\n\r\n\r\nProject01_TodoList.propTypes = { \r\n  Component:PropTypes.elementType.isRequired, \r\n\r\n}\r\n\r\n\r\nconst configureStore = (initialState, options) => {\r\n  const sagaMiddleware = createSagaMiddleware(); \r\n  const middlewares = [sagaMiddleware]; // 미들웨어들을 넣으면 된다.\r\n  const enhancer = process.env.NODE_ENV === 'production' ? \r\n    compose(applyMiddleware(...middlewares)) : \r\n        composeWithDevTools(\r\n          applyMiddleware(...middlewares)\r\n        );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n                //react에서 redux를 사용하기 위해서는 createStore로 store를 생성해 주어야 한다. \r\n                //redux-next-wapper 6 버전 부터는 Provider store={store}를 내부적으로 해 준다. \r\n\r\n   sagaMiddleware.run(rootSaga); \r\n   return store;\r\n\r\n}\r\n  \r\nconst wrapper = createWrapper(configureStore,{debug:true}); \r\nexport default wrapper.withRedux(Project01_TodoList); "]},"metadata":{},"sourceType":"module"}