{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test2.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback, useRef, current } from 'react';\n\nvar getAverage = function getAverage(numbers) {\n  console.log('평균값 계산 중...');\n  if (numbers.length === 0) return 0;\n  var sum = numbers.reduce(function (a, b) {\n    return a + b;\n  });\n  return sum / numbers.length;\n};\n\nvar Test2 = function Test2() {\n  _s();\n\n  var array = [1, 2, 3, 4, 5];\n\n  var _useState = useState([].concat(array)),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState(''),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var inputEl = useRef();\n  var onChange = useCallback(function (e) {\n    console.log('onChange');\n    setNumber(e.target.value);\n  }, [number, list]); //\n\n  var onInsert = useCallback(function (e) {\n    console.log('number==>', number); //const nextList = list.concat(parseInt(number)); \n    //console.log('number==>',number);\n\n    setList([].concat(_toConsumableArray(list), [number]));\n    setNumber('');\n    inputEl.current.focus();\n  }, []);\n  var avg = useMemo(function () {\n    return getAverage(list);\n  }, [list]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: number,\n    onChange: onChange,\n    ref: inputEl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: onInsert,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, list.map(function (value, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, value);\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"\\uD3C9\\uADE0 \\uAC12:\"), avg));\n};\n\n_s(Test2, \"lu2BpMpAwA4Yv6zxd6FKQKWggVs=\");\n\n_c = Test2;\nexport default Test2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test2.js"],"names":["React","useState","useMemo","useCallback","useRef","current","getAverage","numbers","console","log","length","sum","reduce","a","b","Test2","array","list","setList","number","setNumber","inputEl","onChange","e","target","value","onInsert","focus","avg","map","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAoE,OAApE;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAY;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,MAAGF,OAAO,CAACG,MAAR,KAAmB,CAAtB,EAAyB,OAAO,CAAP;AACzB,MAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,UAACC,CAAD,EAAGC,CAAH;AAAA,WAAOD,CAAC,GAACC,CAAT;AAAA,GAAf,CAAZ;AACA,SAAOH,GAAG,GAAGJ,OAAO,CAACG,MAArB;AAEH,CAPD;;AAUA,IAAMK,KAAK,GAAG,SAARA,KAAQ,GAAK;AAAA;;AAEf,MAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAd;;AAFe,kBAGQf,QAAQ,WAAKe,KAAL,EAHhB;AAAA,MAGRC,IAHQ;AAAA,MAGHC,OAHG;;AAAA,mBAIYjB,QAAQ,CAAC,EAAD,CAJpB;AAAA,MAIRkB,MAJQ;AAAA,MAIDC,SAJC;;AAKf,MAAMC,OAAO,GAAGjB,MAAM,EAAtB;AAEA,MAAMkB,QAAQ,GAAGnB,WAAW,CAAC,UAACoB,CAAD,EAAM;AAC/Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAW,IAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAH2B,EAG1B,CAACN,MAAD,EAAQF,IAAR,CAH0B,CAA5B,CAPe,CAUG;;AAElB,MAAMS,QAAQ,GAAGvB,WAAW,CAAC,UAACoB,CAAD,EAAM;AAE/Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBU,MAAxB,EAF+B,CAG/B;AACA;;AACAD,IAAAA,OAAO,8BAAKD,IAAL,IAAUE,MAAV,GAAP;AAEAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,CAAChB,OAAR,CAAgBsB,KAAhB;AACH,GAT2B,EAS1B,EAT0B,CAA5B;AAWA,MAAMC,GAAG,GAAE1B,OAAO,CAAC;AAAA,WAAII,UAAU,CAACW,IAAD,CAAd;AAAA,GAAD,EAAsB,CAACA,IAAD,CAAtB,CAAlB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,KAAK,EAAEE,MAAd;AAAsB,IAAA,QAAQ,EAAEG,QAAhC;AAA0C,IAAA,GAAG,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IAAI,CAACY,GAAL,CAAS,UAACJ,KAAD,EAAOK,KAAP;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBL,KAAjB,CADU;AAAA,GAAT,CADL,CAHA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAEiBG,GAFjB,CARA,CADJ;AAiBH,CA1CD;;GAAMb,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, {useState, useMemo, useCallback,useRef ,current} from 'react'\r\n\r\nconst getAverage = (numbers) =>{\r\n\r\n    console.log('평균값 계산 중...'); \r\n    if(numbers.length === 0) return 0; \r\n    const sum = numbers.reduce((a,b)=>a+b); \r\n    return sum / numbers.length; \r\n\r\n}\r\n\r\n\r\nconst Test2 = () =>{\r\n\r\n    const array = [1,2,3,4,5];\r\n    const [list,setList] = useState([...array]); \r\n    const [number,setNumber] = useState(''); \r\n    const inputEl = useRef();\r\n\r\n    const onChange = useCallback((e) =>{\r\n        console.log('onChange'); \r\n        setNumber(e.target.value); \r\n    },[number,list]); //\r\n\r\n    const onInsert = useCallback((e) =>{\r\n      \r\n        console.log('number==>',number);\r\n        //const nextList = list.concat(parseInt(number)); \r\n        //console.log('number==>',number);\r\n        setList([...list,number]);\r\n  \r\n        setNumber(''); \r\n        inputEl.current.focus();\r\n    },[]); \r\n    \r\n    const avg =useMemo(()=>getAverage(list),[list]); \r\n\r\n    return (\r\n        <div>\r\n        <input value={number} onChange={onChange} ref={inputEl}/>\r\n        <button onClick={onInsert}>등록</button>\r\n        <ul>    \r\n            {list.map((value,index) => (\r\n            <li key={index}>{value}</li>\r\n            ))}\r\n        </ul>\r\n        <div>\r\n            {/*<b>평균 값:</b>{getAverage(list)}*/}\r\n            <b>평균 값:</b>{avg}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Test2; "]},"metadata":{},"sourceType":"module"}