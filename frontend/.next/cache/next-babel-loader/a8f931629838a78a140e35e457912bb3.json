{"ast":null,"code":"var _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\utilComponent\\\\Pagenation.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { number } from 'prop-types';\nimport Link from 'next/link';\n\nconst Pagenation = ({\n  pagenate,\n  dataLength,\n  postsPerPage,\n  nowPage,\n  groupPage,\n  groupPageArray\n}) => {\n  const pageNumers = [];\n\n  if (nowPage === 0) {\n    //첫 로드시    \n    for (let i = 0; i < groupPage; i++) {\n      pageNumers.push(i);\n    }\n  } else if (nowPage % groupPage === 1 && nowPage !== 1) {\n    pageNumers.length = 0;\n\n    for (let i = nowPage - 1; i < nowPage - 1 + groupPage; i++) {\n      pageNumers.push(i);\n    }\n  } else {\n    pageNumers.length = 0;\n\n    for (let i = 0; i < groupPageArray.length; i++) {\n      pageNumers.push(groupPageArray[i]);\n    }\n  }\n\n  if (dataLength === 0 || dataLength < postsPerPage) {\n    const groupPageArrayFirstValue = groupPageArray[0];\n  } // for(let i=0; i<groupPage; i++){\n  //     pageNumers.push(i); \n  //     if(((nowPage % groupPage ===1)) && (nowPage !== 1)){\n  //         pageNumers.length = 0; \n  //         for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\n  //         pageNumers.push(i); \n  //         }\n  //     }\n  // }\n  // if((nowPage % groupPage ===1) && (nowPage !== 1)){\n  //     pageNumers.length = 0; \n  //     for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\n  //     pageNumers.push(i); \n  //     }\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, nowPage, __jsx(\"li\", {\n    style: {\n      display: nowPage === 1 || nowPage === 0 ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: '#',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 86\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage - 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 103\n    }\n  }, \"\\u25C0\"))), pageNumers.map((v, i, array) => __jsx(\"li\", {\n    key: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }\n  }, __jsx(Link, {\n    href: '#',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(v + 1, array),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 47\n    }\n  }, v + 1))))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: '#',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage + 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }\n  }, \"\\u25B6\"))))));\n};\n\nexport default Pagenation;","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/utilComponent/Pagenation.js"],"names":["React","useState","useCallback","useEffect","number","Link","Pagenation","pagenate","dataLength","postsPerPage","nowPage","groupPage","groupPageArray","pageNumers","i","push","length","groupPageArrayFirstValue","display","map","v","array"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,useEffect} from 'react'\r\nimport { number } from 'prop-types';\r\nimport Link from 'next/link'\r\n\r\nconst Pagenation = ({pagenate,dataLength,postsPerPage,nowPage,groupPage,groupPageArray}) =>{\r\n\r\n    const  pageNumers= []; \r\n\r\n    if(nowPage===0){ //첫 로드시    \r\n            for(let i=0; i<groupPage; i++){\r\n           \r\n                pageNumers.push(i); \r\n            }\r\n\r\n    }else if(((nowPage % groupPage ===1)) && (nowPage !== 1) ){\r\n            pageNumers.length = 0; \r\n            for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n            pageNumers.push(i); \r\n            }\r\n\r\n    }else{\r\n           pageNumers.length=0; \r\n           for(let i=0; i< groupPageArray.length; i++){\r\n               pageNumers.push(groupPageArray[i]); \r\n           }\r\n\r\n    }\r\n\r\n    if(dataLength === 0 || dataLength < postsPerPage){\r\n        const groupPageArrayFirstValue = groupPageArray[0]; \r\n        \r\n    }\r\n\r\n        // for(let i=0; i<groupPage; i++){\r\n           \r\n        //     pageNumers.push(i); \r\n\r\n        //     if(((nowPage % groupPage ===1)) && (nowPage !== 1)){\r\n        //         pageNumers.length = 0; \r\n        //         for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n        //         pageNumers.push(i); \r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n  \r\n\r\n        // if((nowPage % groupPage ===1) && (nowPage !== 1)){\r\n        //     pageNumers.length = 0; \r\n        //     for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n        //     pageNumers.push(i); \r\n        //     }\r\n        // }\r\n\r\n\r\n    return(\r\n        <>  \r\n        <nav>\r\n            <ul>\r\n                {nowPage}\r\n                <li style={{display: nowPage === 1 || nowPage === 0  ? \"none\" : \"\"}}><Link href={'#'}><a onClick={()=>pagenate(nowPage-1,pageNumers)}>◀</a></Link></li>\r\n               \r\n               \r\n                {pageNumers.map((v,i,array)=>(\r\n                    <li key={v}>\r\n                         <li><Link href={'#'}><a onClick={()=>pagenate(v+1,array)}>{v+1}</a></Link></li>\r\n                    </li>\r\n                ))}\r\n\r\n\r\n\r\n          <li><Link href={'#'}><a onClick={()=>pagenate(nowPage+1,pageNumers)}>▶</a></Link></li>\r\n            </ul>               \r\n        </nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Pagenation; "]},"metadata":{},"sourceType":"module"}