{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\testComponent\\\\movieComponent.js\";\nvar __jsx = React.createElement;\nimport React, { memo, useState, useEffect, useRef } from \"react\";\n\nconst MovieName = () => {\n  const {\n    0: a,\n    1: Aset\n  } = useState('');\n  useEffect(() => {\n    Aset('Aset');\n  }, []);\n  console.log('a=>', a);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, a, __jsx(\"input\", {\n    type: \"button\",\n    value: \"clickcName\",\n    onClick: () => Aset('hello world'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MovieName; //메모 사용 시 부모 컴포넌트의 state가 변하여도 자식 컴포넌트는 리렌더링되지 않는다.\n//export default MovieName;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/testComponent/movieComponent.js"],"names":["React","memo","useState","useEffect","useRef","MovieName","a","Aset","console","log"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,QAArB,EAA8BC,SAA9B,EAAwCC,MAAxC,QAAsD,OAAtD;;AAEA,MAAMC,SAAS,GAAE,MAAK;AAElB,QAAM;AAAA,OAACC,CAAD;AAAA,OAAGC;AAAH,MAAWL,QAAQ,CAAC,EAAD,CAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEVI,IAAAA,IAAI,CAAC,MAAD,CAAJ;AACH,GAHQ,EAGP,EAHO,CAAT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,CAAlB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,CAAN,EACA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,YAA3B;AAAwC,IAAA,OAAO,EAAE,MAAIC,IAAI,CAAC,aAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAMH,CAhBD;;AAkBA,eAAeF,SAAf,C,CACA;AACA","sourcesContent":["\r\nimport React, {memo, useState,useEffect,useRef } from \"react\";\r\n\r\nconst MovieName =() =>{\r\n\r\n    const [a,Aset] = useState(''); \r\n\r\n    useEffect(()=>{\r\n\r\n        Aset('Aset'); \r\n    },[])\r\n\r\n    console.log('a=>',a); \r\n    return (\r\n        <div>{a}\r\n        <input type=\"button\" value='clickcName' onClick={()=>Aset('hello world')} /> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieName; \r\n//메모 사용 시 부모 컴포넌트의 state가 변하여도 자식 컴포넌트는 리렌더링되지 않는다.\r\n//export default MovieName; \r\n\r\n"]},"metadata":{},"sourceType":"module"}