{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\utilComponent\\\\Pagenation.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { number } from 'prop-types';\nimport Link from 'next/link';\n\nconst Pagenation = ({\n  pagenate,\n  dataLength,\n  postsPerPage,\n  nowPage,\n  groupPage,\n  groupPageArray\n}) => {\n  const pageNumers = []; //마지막 페이지 처리 \n\n  let isInVisible = false;\n\n  if (dataLength === 0 || dataLength < postsPerPage) {\n    isInVisible = true;\n  }\n\n  if (nowPage === 0) {\n    //첫 로드시   \n    if (postsPerPage > dataLength) {\n      pageNumers.push(0);\n    } else {\n      for (let i = 0; i < groupPage; i++) {\n        pageNumers.push(i);\n      }\n    } //앞으로 그룹 이동\n\n  } else if (nowPage % groupPage === 1 && nowPage !== 1) {\n    pageNumers.length = 0;\n\n    for (let i = nowPage - 1; i < nowPage - 1 + groupPage; i++) {\n      pageNumers.push(i);\n    } //뒤로 그룹 이동\n\n  } else if (groupPageArray[0] === nowPage) {\n    pageNumers.length = 0;\n\n    for (let i = 0; i < groupPageArray.length; i++) {\n      pageNumers.push(groupPageArray[i] - groupPage);\n    } //숫자 클릭 \n\n  } else {\n    pageNumers.length = 0;\n    console.log('숫자클릭==>', groupPageArray);\n\n    for (let i = 0; i < groupPageArray.length; i++) {\n      pageNumers.push(groupPageArray[i]);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"paginationDiv\",\n    style: {\n      marginTop: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    style: {\n      display: nowPage === 1 || nowPage === 0 ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: v - 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 91\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage - 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 126\n    }\n  }, \"\\u25C0\"))), pageNumers.map((v, i, array) => __jsx(\"li\", {\n    key: v,\n    style: {\n      display: isInVisible === true && v >= nowPage ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: v + 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, __jsx(\"a\", {\n    className: nowPage === 0 && nowPage === v || nowPage === v + 1 ? \"active\" : \"\",\n    onClick: () => pagenate(v + 1, array),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 68\n    }\n  }, v + 1))))), __jsx(\"li\", {\n    style: {\n      display: isInVisible === true ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: v + 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 77\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage + 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 112\n    }\n  }, \"\\u25B6\"))))));\n};\n\nexport default Pagenation;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/utilComponent/Pagenation.js"],"names":["React","useState","useCallback","useEffect","number","Link","Pagenation","pagenate","dataLength","postsPerPage","nowPage","groupPage","groupPageArray","pageNumers","isInVisible","push","i","length","console","log","marginTop","display","query","v","map","array"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,useEffect} from 'react'\r\nimport { number } from 'prop-types';\r\nimport Link from 'next/link'\r\n\r\nconst Pagenation = ({pagenate,dataLength,postsPerPage,nowPage,groupPage,groupPageArray}) =>{\r\n\r\n    const  pageNumers= []; \r\n\r\n    //마지막 페이지 처리 \r\n    let  isInVisible = false; \r\n    if(dataLength === 0 || dataLength < postsPerPage){\r\n        isInVisible = true; \r\n    }\r\n\r\n    if(nowPage===0){ //첫 로드시   \r\n\r\n        if(postsPerPage > dataLength){\r\n           \r\n                pageNumers.push(0); \r\n        }else{\r\n            for(let i=0; i<groupPage; i++){\r\n           \r\n                pageNumers.push(i); \r\n            }\r\n        }\r\n\r\n    //앞으로 그룹 이동\r\n    }else if(((nowPage % groupPage ===1)) && (nowPage !== 1)){\r\n            pageNumers.length = 0; \r\n            for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n            pageNumers.push(i); \r\n            }\r\n\r\n    //뒤로 그룹 이동\r\n    }else if((groupPageArray[0] === nowPage)){\r\n             pageNumers.length = 0; \r\n             for(let i=0; i<groupPageArray.length; i++){\r\n                pageNumers.push(groupPageArray[i]-groupPage); \r\n             }\r\n    \r\n    //숫자 클릭 \r\n    }else{\r\n           pageNumers.length=0; \r\n           console.log('숫자클릭==>',groupPageArray); \r\n           for(let i=0; i< groupPageArray.length; i++){\r\n               pageNumers.push(groupPageArray[i]); \r\n           }\r\n\r\n    }\r\n\r\n    return(\r\n        <>  \r\n            <div className=\"paginationDiv\" style={{marginTop:\"3%\"}}>\r\n                <ul className=\"pagination\">\r\n                    <li  style={{display: nowPage === 1 || nowPage === 0  ? \"none\" : \"\"}}><Link href={{query:{nowPage:v-1}}}><a onClick={()=>pagenate(nowPage-1,pageNumers)}>◀</a></Link></li>\r\n                    {pageNumers.map((v,i,array)=>(\r\n                        <li key={v}   style={{display : (isInVisible===true) && (v >=nowPage) ? \"none\" : \"\" }}>\r\n                            <li><Link href={{query:{nowPage:v+1}}}><a className={(nowPage === 0 && nowPage === v) || (nowPage === v+1) ?  \"active\" : \"\"} onClick={()=>pagenate(v+1,array)}>{v+1}</a></Link></li>\r\n                        </li>\r\n                    ))}\r\n                    <li style={{display :isInVisible===true ? \"none\" : \"\"}}><Link href={{query:{nowPage:v+1}}}><a onClick={()=>pagenate(nowPage+1,pageNumers)}>▶</a></Link></li>\r\n                </ul>     \r\n            </div>        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Pagenation; "]},"metadata":{},"sourceType":"module"}