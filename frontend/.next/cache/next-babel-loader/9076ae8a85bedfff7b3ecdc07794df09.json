{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nconst Comments1001 = ({\n  key,\n  postFlag,\n  nickName,\n  postId,\n  userInfo,\n  commentId,\n  comment,\n  who,\n  flag,\n  good,\n  bad,\n  createdDate,\n  click\n}) => {\n  const dispatch = useDispatch();\n  const {\n    clickCommentId,\n    likeIsClicked\n  } = useSelector(state => state.mainPosts_1001); // const [like , setLike]        = useState(false); \n  // const [disLike , setDisLike]  = useState(false); \n\n  console.log('clickCommentId=> ', clickCommentId, '  commentId=>  ', commentId, 'flag=>  ', flag, '  likeIsClicked=>', likeIsClicked);\n  const likeBtn = useCallback((commentid, flag, likeDislike) => {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      if (likeDislike === \"good\") {\n        // setLike(true); \n        //  setDisLike(false); \n        console.log('good 버튼 누름commentId==>   ', commentId, ' good=>  ', good, '  flag=>', flag);\n      } else {\n        // setLike(false); \n        //  setDisLike(true); \n        console.log('bad 버튼 누름commentId==>   ', commentId, ' bad=>  ', bad);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid,\n          postFlag,\n          postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName\n        }\n      });\n    }\n\n    alert(`${likeDislike}`);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 87\n    }\n  }), comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9] \", commentId, __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'good'),\n    twoToneColor: commentId === clickCommentId ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }), good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'bad'),\n    twoToneColor: commentId === clickCommentId ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }), bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }))));\n};\n\nexport default Comments1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","key","postFlag","nickName","postId","userInfo","commentId","comment","who","flag","good","bad","createdDate","click","dispatch","clickCommentId","likeIsClicked","state","mainPosts_1001","console","log","likeBtn","commentid","likeDislike","alert","type","data","marginTop","display","float"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({\r\n                      key,\r\n                      postFlag,\r\n                      nickName,\r\n                      postId,\r\n                      userInfo,\r\n\r\n                      commentId,\r\n                      comment,\r\n                      who,\r\n                      flag,\r\n                      good,\r\n                      bad,\r\n                      createdDate,\r\n\r\n                      click,\r\n                    })=>{\r\n\r\n    const dispatch = useDispatch();       \r\n    const {clickCommentId,\r\n           likeIsClicked } =useSelector((state)=>state.mainPosts_1001); \r\n\r\n    // const [like , setLike]        = useState(false); \r\n    // const [disLike , setDisLike]  = useState(false); \r\n\r\n\r\n    console.log('clickCommentId=> ' , clickCommentId , '  commentId=>  ' , commentId,  'flag=>  ' , flag,'  likeIsClicked=>',likeIsClicked); \r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n          //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag===\"Y\"){\r\n          \r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n\r\n            if(likeDislike ===\"good\"){\r\n               // setLike(true); \r\n              //  setDisLike(false); \r\n\r\n                console.log('good 버튼 누름commentId==>   ',commentId ,  ' good=>  ',good , '  flag=>' , flag); \r\n            }else{\r\n               // setLike(false); \r\n              //  setDisLike(true); \r\n\r\n                console.log('bad 버튼 누름commentId==>   ',commentId ,  ' bad=>  ',bad ); \r\n              }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n\r\n    \r\n        }\r\n\r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div  className='divTableRow' >\r\n                    <div  className=\"divTableCell\">\r\n                    <b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9] {commentId}\r\n               \r\n                        <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={commentId===clickCommentId ? \"#ff0000\" : \"#1ba640\"}/>{good}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={commentId===clickCommentId ? \"#ff0000\" : \"#1ba640\"} />{bad}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}