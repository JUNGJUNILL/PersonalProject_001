{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  emplist: [],\n  imagePaths: []\n};\nexport var EMP_LIST_REQUEST = 'EMP_LIST_REQUEST';\nexport var EMP_LIST_SUCCESS = 'EMP_LIST_SUCCESS';\nexport var EMP_LIST_FAILURE = 'EMP_LIST_FAILURE';\nexport var EMP_INSERT_REQUEST = 'EMP_INSERT_REQUEST';\nexport var EMP_INSERT_SUCCESS = 'EMP_INSERT_SUCCESS';\nexport var EMP_INSERT_FAILURE = 'EMP_INSERT_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case EMP_LIST_REQUEST:\n        {\n          break;\n        }\n\n      case EMP_LIST_SUCCESS:\n        {\n          draft.emplist.length = 0; //배열 초기화\n\n          action.data.forEach(function (v) {\n            draft.emplist.push(v);\n          });\n          break;\n        }\n\n      case EMP_LIST_FAILURE:\n        {\n          break;\n        }\n\n      case UPLOAD_IMAGES_REQUEST:\n        {\n          break;\n        }\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths.length = 0;\n          action.data.forEach(function (v) {\n            draft.imagePaths.push(v);\n          });\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        {\n          break;\n        }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/reducers/emp.js"],"names":["produce","initialState","emplist","imagePaths","EMP_LIST_REQUEST","EMP_LIST_SUCCESS","EMP_LIST_FAILURE","EMP_INSERT_REQUEST","EMP_INSERT_SUCCESS","EMP_INSERT_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","reducer","state","action","draft","type","length","data","forEach","v","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAGA,OAAO,IAAOC,YAAY,GAAG;AAEzBC,EAAAA,OAAO,EAAG,EAFe;AAGzBC,EAAAA,UAAU,EAAG;AAHY,CAAtB;AAOP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,qBAAqB,GAAC,uBAA5B;AACP,OAAO,IAAMC,qBAAqB,GAAC,uBAA5B;AACP,OAAO,IAAMC,qBAAqB,GAAC,uBAA5B;;AAGP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBb,YAAwB;AAAA,MAAVc,MAAU;AAG7C,SAAOf,OAAO,CAACc,KAAD,EAAO,UAACE,KAAD,EAAS;AAE1B,YAAOD,MAAM,CAACE,IAAd;AAEI,WAAKb,gBAAL;AAAuB;AACnB;AACH;;AAGD,WAAKC,gBAAL;AAAuB;AACnBW,UAAAA,KAAK,CAACd,OAAN,CAAcgB,MAAd,GAAqB,CAArB,CADmB,CAEnB;;AACAH,UAAAA,MAAM,CAACI,IAAP,CAAYC,OAAZ,CAAoB,UAACC,CAAD,EAAK;AACrBL,YAAAA,KAAK,CAACd,OAAN,CAAcoB,IAAd,CAAmBD,CAAnB;AACH,WAFD;AAGA;AACH;;AAED,WAAKf,gBAAL;AAAuB;AACnB;AACH;;AAGD,WAAKI,qBAAL;AAA4B;AACxB;AACH;;AAGD,WAAKC,qBAAL;AAA4B;AAExBK,UAAAA,KAAK,CAACb,UAAN,CAAiBe,MAAjB,GAAwB,CAAxB;AACAH,UAAAA,MAAM,CAACI,IAAP,CAAYC,OAAZ,CAAoB,UAACC,CAAD,EAAK;AACrBL,YAAAA,KAAK,CAACb,UAAN,CAAiBmB,IAAjB,CAAsBD,CAAtB;AACH,WAFD;AAIA;AACH;;AAED,WAAKT,qBAAL;AAA4B;AACxB;AACH;;AAOD;AAAU;AA7Cd;AAgDH,GAlDa,CAAd;AAoDH,CAvDD;;AA0DA,eAAeC,OAAf","sourcesContent":["import produce from 'immer'\r\n\r\n\r\nexport const  initialState = {\r\n\r\n    emplist : [], \r\n    imagePaths : [],\r\n\r\n}\r\n\r\nexport const EMP_LIST_REQUEST = 'EMP_LIST_REQUEST'; \r\nexport const EMP_LIST_SUCCESS = 'EMP_LIST_SUCCESS'; \r\nexport const EMP_LIST_FAILURE = 'EMP_LIST_FAILURE'; \r\n\r\n\r\nexport const EMP_INSERT_REQUEST = 'EMP_INSERT_REQUEST'; \r\nexport const EMP_INSERT_SUCCESS = 'EMP_INSERT_SUCCESS'; \r\nexport const EMP_INSERT_FAILURE = 'EMP_INSERT_FAILURE'; \r\n\r\nexport const UPLOAD_IMAGES_REQUEST=\"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS=\"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE=\"UPLOAD_IMAGES_FAILURE\";\r\n\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n\r\n\r\n    return produce(state,(draft)=>{\r\n\r\n        switch(action.type){\r\n\r\n            case EMP_LIST_REQUEST: {\r\n                break; \r\n            }\r\n\r\n\r\n            case EMP_LIST_SUCCESS: {\r\n                draft.emplist.length=0; \r\n                //배열 초기화\r\n                action.data.forEach((v)=>{\r\n                    draft.emplist.push(v); \r\n                }); \r\n                break; \r\n            }\r\n\r\n            case EMP_LIST_FAILURE: {\r\n                break; \r\n            }\r\n\r\n\r\n            case UPLOAD_IMAGES_REQUEST: {\r\n                break; \r\n            }\r\n\r\n\r\n            case UPLOAD_IMAGES_SUCCESS: {\r\n                \r\n                draft.imagePaths.length=0; \r\n                action.data.forEach((v)=>{\r\n                    draft.imagePaths.push(v); \r\n                }); \r\n\r\n                break; \r\n            }\r\n\r\n            case UPLOAD_IMAGES_FAILURE: {\r\n                break; \r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            default : break; \r\n        }\r\n\r\n    }); \r\n\r\n}\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}