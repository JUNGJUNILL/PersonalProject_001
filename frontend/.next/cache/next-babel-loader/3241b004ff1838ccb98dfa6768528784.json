{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\myEdit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { useState, useCallback, useRef } from 'react';\nimport { Button } from 'antd';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EMP_INSERT_REQUEST } from '../reducers/emp';\n\nconst Myeditor = () => {\n  const dispatch = useDispatch();\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty()); //<p></p>\n\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  const imageInput = useRef(); //제출\n\n  const editContent = useCallback(() => {\n    if (!content || !content.trim()) {\n      alert('게시글을 입력 해 주세요.');\n      return;\n    }\n\n    dispatch({\n      type: EMP_INSERT_REQUEST,\n      data: {\n        content: content,\n        nickName: userInfo\n      }\n    });\n  }, [content]); //이미지 업로드 \n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onEditorStateChange = useCallback(editState => {\n    setEditorState(editState);\n    setContent(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  }, [editorState]);\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Editor, {\n    editState: editorState,\n    wrapperClassName: \"demo-wrapper\",\n    editorClassName: \"demo-editor\",\n    localization: {\n      locale: 'ko'\n    },\n    onEditorStateChange: onEditorStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }), __jsx(Button, {\n    onClick: editContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC131\"));\n};\n\nexport default Myeditor;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/myEdit.js"],"names":["Editor","EditorState","convertToRaw","useState","useCallback","useRef","Button","draftToHtml","htmlToDraft","useDispatch","useSelector","EMP_INSERT_REQUEST","Myeditor","dispatch","editorState","setEditorState","createEmpty","content","setContent","userInfo","state","auth","imageInput","editContent","trim","alert","type","data","nickName","onClickImageUpload","current","click","onEditorStateChange","editState","getCurrentContent","onChangeImages","locale"],"mappings":";;;AAAA,SAAQA,MAAR,QAAqB,qBAArB;AACA,SAASC,WAAT,EAAqBC,YAArB,QAAyC,UAAzC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACKC,kBADL,QAEK,iBAFL;;AAMA,MAAMC,QAAQ,GAAG,MAAK;AAElB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAACF,WAAW,CAACe,WAAZ,EAAD,CAA9C,CAHkB,CAIlB;;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAWC;AAAX,MAAyBf,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAaT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA9B;AACA,QAAMC,UAAU,GAAGjB,MAAM,EAAzB,CAPkB,CASlB;;AACA,QAAMkB,WAAW,GAAGnB,WAAW,CAAC,MAAI;AAChC,QAAG,CAACa,OAAD,IAAY,CAACA,OAAO,CAACO,IAAR,EAAhB,EAA+B;AAC3BC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACH;;AACDZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAACf,kBADA;AAELgB,MAAAA,IAAI,EAAC;AACDV,QAAAA,OAAO,EAAGA,OADT;AAEDW,QAAAA,QAAQ,EAAGT;AAFV;AAFA,KAAD,CAAR;AASH,GAd8B,EAc7B,CAACF,OAAD,CAd6B,CAA/B,CAVkB,CA4BlB;;AAEA,QAAMY,kBAAkB,GAAGzB,WAAW,CAAC,MAAK;AAExCkB,IAAAA,UAAU,CAACQ,OAAX,CAAmBC,KAAnB;AACH,GAHqC,EAGpC,CAACT,UAAU,CAACQ,OAAZ,CAHoC,CAAtC;AAOD,QAAME,mBAAmB,GAAG5B,WAAW,CAAE6B,SAAD,IAAa;AAEpDlB,IAAAA,cAAc,CAACkB,SAAD,CAAd;AACAf,IAAAA,UAAU,CAACX,WAAW,CAACL,YAAY,CAACY,WAAW,CAACoB,iBAAZ,EAAD,CAAb,CAAZ,CAAV;AAEA,GALsC,EAKrC,CAACpB,WAAD,CALqC,CAAvC;AAOC,SACA,4BACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,GAAG,EAAEQ,UAAjC;AAA6C,IAAA,QAAQ,EAAEa,cAAvD;AAAuE,IAAA,MAAM,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFL,EAGK,MAAC,MAAD;AACG,IAAA,SAAS,EAAErB,WADd;AAEG,IAAA,gBAAgB,EAAC,cAFpB;AAGG,IAAA,eAAe,EAAC,aAHnB;AAIE,IAAA,YAAY,EAAE;AACVsB,MAAAA,MAAM,EAAC;AADG,KAJhB;AAQE,IAAA,mBAAmB,EAAEJ,mBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,EAaQ,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbR,CADA;AAkBH,CA9DD;;AAgEA,eAAeX,QAAf","sourcesContent":["import {Editor} from 'react-draft-wysiwyg'\r\nimport { EditorState,convertToRaw } from 'draft-js';\r\nimport { useState, useCallback, useRef } from 'react';\r\nimport {Button} from 'antd'\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \r\n    {EMP_INSERT_REQUEST,} \r\nfrom '../reducers/emp'; \r\n\r\n\r\n\r\nconst Myeditor = () =>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    //<p></p>\r\n    const [content , setContent] = useState(''); \r\n    const {userInfo} = useSelector((state)=>state.auth);\r\n    const imageInput = useRef(); \r\n\r\n    //제출\r\n    const editContent = useCallback(()=>{\r\n        if(!content || !content.trim()){\r\n            alert('게시글을 입력 해 주세요.'); \r\n            return; \r\n        }\r\n        dispatch({  \r\n            type:EMP_INSERT_REQUEST, \r\n            data:{\r\n                content : content, \r\n                nickName : userInfo, \r\n            }\r\n            \r\n        });\r\n\r\n    },[content]); \r\n\r\n\r\n\r\n    //이미지 업로드 \r\n    \r\n    const onClickImageUpload = useCallback(() =>{\r\n\r\n        imageInput.current.click(); \r\n    },[imageInput.current])\r\n\r\n\r\n\r\n   const onEditorStateChange = useCallback((editState)=>{\r\n\r\n    setEditorState(editState); \r\n    setContent(draftToHtml(convertToRaw(editorState.getCurrentContent()))); \r\n\r\n   },[editorState]);\r\n\r\n    return (    \r\n    <>\r\n        <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n         <Button>이미지 업로드</Button>\r\n         <Editor\r\n            editState={editorState}\r\n            wrapperClassName=\"demo-wrapper\"\r\n            editorClassName=\"demo-editor\"\r\n           localization={{\r\n               locale:'ko', \r\n           }}\r\n        \r\n           onEditorStateChange={onEditorStateChange}\r\n            />\r\n            <Button onClick={editContent}>작성</Button>\r\n\r\n    </>\r\n        )\r\n}\r\n\r\nexport default Myeditor; "]},"metadata":{},"sourceType":"module"}