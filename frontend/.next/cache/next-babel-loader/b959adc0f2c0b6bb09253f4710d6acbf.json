{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayOut from '../components/AppLayOut';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport '../CSS/antdMobile.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/auth'; //프로젝트 고정 틀\n\nvar Project01_TodoList = function Project01_TodoList(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"TodoList\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd-mobile/2.3.3/antd-mobile.css\",\n    integrity: \"sha256-uZbNsqglsHyapiY6Nlj8o9kAmliY/rWNCTqthjIHIXw=\",\n    crossorigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), __jsx(AppLayOut, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_c = Project01_TodoList;\n\nProject01_TodoList.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps, state, isServer, cookie;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //▲ next에서 제공해줌\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n            state = ctx.store.getState(); //프로젝트 전체 stat를 가져 올 수 있다. \n\n            isServer = false || !!context.req || !!context.ctx.req;\n            cookie = isServer ? ctx.req.headers.cookie : '';\n\n            if (isServer && cookie) {\n              //클라이언 환경에서는 브라우저가 쿠키를 넣어주고, \n              //SSR일 때는 우리가 직접 넣어줘야 한다. \n              console.log('우리가 넣어줌?');\n              axios.defaults.headers.Cookie = cookie;\n            }\n\n            console.log('state.auth.userInfo==>', state.auth.userInfo); // //(새로고침)로그인 정보 유지\n\n            if (state.auth.userInfo !== null) {\n              ctx.store.dispatch({\n                type: LOAD_USER_REQUEST\n              });\n            }\n\n            if (!Component.getInitialProps) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return Component.getInitialProps(ctx);\n\n          case 11:\n            pageProps = _context.sent;\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nProject01_TodoList.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware]; // 미들웨어들을 넣으면 된다.\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer); //react에서 redux를 사용하기 위해서는 createStore로 store를 생성해 주어야 한다. \n  //redux-next-wapper 6 버전 부터는 Provider store={store}를 내부적으로 해 준다. \n  //sagaMiddleware.run(rootSaga);  이새끼때문에 REQUEST, SUCCESS 2번씩 실행됨 ㅅㅂ \n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default _c2 = wrapper.withRedux(Project01_TodoList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Project01_TodoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/_app.js"],"names":["AppLayOut","Head","PropTypes","axios","createWrapper","createStore","compose","applyMiddleware","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","LOAD_USER_REQUEST","Project01_TodoList","Component","pageProps","getInitialProps","context","ctx","state","store","getState","isServer","req","cookie","headers","console","log","defaults","Cookie","auth","userInfo","dispatch","type","propTypes","elementType","isRequired","configureStore","sagaMiddleware","middlewares","enhancer","sagaTask","run","wrapper","debug","withRedux"],"mappings":"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","sourcesContent":["import AppLayOut from '../components/AppLayOut';\r\nimport Head      from 'next/head';\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'; \r\n\r\nimport 'antd/dist/antd.css'; \r\nimport  '../CSS/antdMobile.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n\r\n\r\n\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport reducer  from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../sagas'; \r\nimport { LOAD_USER_REQUEST } from '../reducers/auth';\r\n\r\n\r\n\r\n\r\n//프로젝트 고정 틀\r\nconst Project01_TodoList = ({Component,pageProps}) =>{\r\n\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <title>TodoList</title>\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\"/>\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd-mobile/2.3.3/antd-mobile.css\" integrity=\"sha256-uZbNsqglsHyapiY6Nlj8o9kAmliY/rWNCTqthjIHIXw=\" crossorigin=\"anonymous\" />\r\n                </Head>\r\n                <AppLayOut>\r\n                    <Component {...pageProps} />\r\n                </AppLayOut>\r\n            </div>\r\n            ); \r\n\r\n\r\n}\r\n\r\n\r\nProject01_TodoList.getInitialProps = async (context)=>{\r\n                                            //▲ next에서 제공해줌\r\n  const { ctx,Component } = context; \r\n  let pageProps ={}; \r\n  const state = ctx.store.getState();    //프로젝트 전체 stat를 가져 올 수 있다. \r\n  const isServer = typeof window === 'undefined' || !!context.req || !!context.ctx.req;\r\n  const cookie = isServer ? ctx.req.headers.cookie : ''; \r\n\r\n  if(isServer && cookie){\r\n      //클라이언 환경에서는 브라우저가 쿠키를 넣어주고, \r\n      //SSR일 때는 우리가 직접 넣어줘야 한다. \r\n      console.log('우리가 넣어줌?'); \r\n      axios.defaults.headers.Cookie = cookie; \r\n  }\r\n  \r\n  console.log('state.auth.userInfo==>' , state.auth.userInfo); \r\n  // //(새로고침)로그인 정보 유지\r\n  if(state.auth.userInfo !== null){\r\n  \r\n      ctx.store.dispatch({\r\n        type:LOAD_USER_REQUEST,\r\n      });\r\n\r\n  }\r\n\r\n\r\n  if(Component.getInitialProps){\r\n  pageProps =  await Component.getInitialProps(ctx); \r\n  }\r\n  \r\n  return {pageProps}; \r\n\r\n\r\n}\r\n\r\n\r\nProject01_TodoList.propTypes = { \r\n  Component:PropTypes.elementType.isRequired, \r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware(); \r\n  const middlewares = [sagaMiddleware]; // 미들웨어들을 넣으면 된다.\r\n  \r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(reducer, enhancer);\r\n                //react에서 redux를 사용하기 위해서는 createStore로 store를 생성해 주어야 한다. \r\n                //redux-next-wapper 6 버전 부터는 Provider store={store}를 내부적으로 해 준다. \r\n\r\n   //sagaMiddleware.run(rootSaga);  이새끼때문에 REQUEST, SUCCESS 2번씩 실행됨 ㅅㅂ \r\n   store.sagaTask = sagaMiddleware.run(rootSaga);\r\n   return store;\r\n\r\n}\r\n  \r\nconst wrapper = createWrapper(configureStore, {debug:  process.env.NODE_ENV === 'development'}); \r\nexport default wrapper.withRedux(Project01_TodoList); "]},"metadata":{},"sourceType":"module"}