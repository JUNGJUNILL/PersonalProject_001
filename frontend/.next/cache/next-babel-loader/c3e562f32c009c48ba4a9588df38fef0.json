{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test2.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback, useRef, current } from 'react';\n\nconst Test2 = () => {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: number,\n    1: setNumber\n  } = useState('');\n  const inputEl = useRef();\n  const onChange = useCallback(e => {\n    console.log('onChange');\n    setNumber(e.target.value);\n  }, []); //\n\n  const onInsert = useCallback(e => {\n    console.log('onInsert');\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n    inputEl.current.focus();\n  }, [number, list]);\n  const avg = useMemo(() => getAverage(list), [list]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: number,\n    onChange: onChange,\n    ref: inputEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, list.map((value, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, value))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\uD3C9\\uADE0 \\uAC12:\"), avg));\n};\n\nexport default Test2;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test2.js"],"names":["React","useState","useMemo","useCallback","useRef","current","Test2","list","setList","number","setNumber","inputEl","onChange","e","console","log","target","value","onInsert","nextList","concat","parseInt","focus","avg","getAverage","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAoE,OAApE;;AAGA,MAAMC,KAAK,GAAG,MAAK;AAEf,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAAQC;AAAR,MAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMU,OAAO,GAAGP,MAAM,EAAtB;AAEA,QAAMQ,QAAQ,GAAGT,WAAW,CAAEU,CAAD,IAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAL,IAAAA,SAAS,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AACH,GAH2B,EAG1B,EAH0B,CAA5B,CANe,CASR;;AAEP,QAAMC,QAAQ,GAAGf,WAAW,CAAEU,CAAD,IAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMI,QAAQ,GAAGZ,IAAI,CAACa,MAAL,CAAYC,QAAQ,CAACZ,MAAD,CAApB,CAAjB;AACAD,IAAAA,OAAO,CAACW,QAAD,CAAP;AACAT,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,CAACN,OAAR,CAAgBiB,KAAhB;AACH,GAN2B,EAM1B,CAACb,MAAD,EAAQF,IAAR,CAN0B,CAA5B;AAQA,QAAMgB,GAAG,GAAErB,OAAO,CAAC,MAAIsB,UAAU,CAACjB,IAAD,CAAf,EAAsB,CAACA,IAAD,CAAtB,CAAlB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,KAAK,EAAEE,MAAd;AAAsB,IAAA,QAAQ,EAAEG,QAAhC;AAA0C,IAAA,GAAG,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEO,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IAAI,CAACkB,GAAL,CAAS,CAACR,KAAD,EAAOS,KAAP,KACV;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBT,KAAjB,CADC,CADL,CAHA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAEiBM,GAFjB,CARA,CADJ;AAiBH,CAtCD;;AAyCA,eAAejB,KAAf","sourcesContent":["import React, {useState, useMemo, useCallback,useRef ,current} from 'react'\r\n\r\n\r\nconst Test2 = () =>{\r\n\r\n    const [list,setList] = useState([]); \r\n    const [number,setNumber] = useState(''); \r\n    const inputEl = useRef();\r\n\r\n    const onChange = useCallback((e) =>{\r\n        console.log('onChange'); \r\n        setNumber(e.target.value); \r\n    },[]); //\r\n\r\n    const onInsert = useCallback((e) =>{\r\n        console.log('onInsert'); \r\n        const nextList = list.concat(parseInt(number)); \r\n        setList(nextList); \r\n        setNumber(''); \r\n        inputEl.current.focus();\r\n    },[number,list]); \r\n    \r\n    const avg =useMemo(()=>getAverage(list),[list]); \r\n\r\n    return (\r\n        <div>\r\n        <input value={number} onChange={onChange} ref={inputEl}/>\r\n        <button onClick={onInsert}>등록</button>\r\n        <ul>    \r\n            {list.map((value,index) => (\r\n            <li key={index}>{value}</li>\r\n            ))}\r\n        </ul>\r\n        <div>\r\n            {/*<b>평균 값:</b>{getAverage(list)}*/}\r\n            <b>평균 값:</b>{avg}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Test2; "]},"metadata":{},"sourceType":"module"}