{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\inputBoxParent.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, memo, useRef } from 'react';\nimport InputBoxChilde from '../components/testComponent/inputBoxChilde'; //부모의 버튼을 클릭 시 자식의 함수를 실행시키게 하기 \n//도대체 어떻게 해야할까?\n//KeyWords : forwardRef, useImperativeHandle\n//https://velog.io/@hwang-eunji/React-Hooks-9-useImperativeHandle      예제 \n//https://ko.reactjs.org/docs/hooks-reference.html#useimperativehandle 공식문서 \n\nconst InputBoxParent = () => {\n  const {\n    0: initValue,\n    1: setInitValue\n  } = useState('');\n  const {\n    0: testValue,\n    1: setTestValue\n  } = useState('');\n  const parentRef = createRef();\n  const testRef = createRef();\n  console.log('parentRef.current', parentRef.current); //부모버튼 \n\n  const init = () => {\n    if (parentRef.current) {\n      console.log('current exsist ?');\n      parentRef.current.test();\n    } else {\n      console.log('current dosen t exsist ?');\n    }\n  };\n\n  const testChange = e => {\n    setTestValue(e.target.value);\n  };\n\n  const testBtn = () => {\n    testRef.current.focus();\n  };\n\n  const abc = (a, b, c) => {\n    console.log(`hello abc ${a},${b},${c}`);\n\n    if (parentRef.current) {\n      console.log('current exsist ?');\n      parentRef.current.test();\n    } else {\n      console.log('current dosen t exsist ?');\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(InputBoxChilde, {\n    clickedValues: initValue,\n    init: initValue,\n    ref: parentRef,\n    abc: abc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    ref: testRef,\n    value: testValue,\n    onChange: testChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: init,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"\\uBD80\\uBAA8\\uBC84\\uD2BC\"), __jsx(\"button\", {\n    onClick: testBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\uD3EC\\uCEE4\\uC2A4\"));\n};\n\nexport default InputBoxParent;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/inputBoxParent.js"],"names":["React","useCallback","useEffect","useState","createRef","memo","useRef","InputBoxChilde","InputBoxParent","initValue","setInitValue","testValue","setTestValue","parentRef","testRef","console","log","current","init","test","testChange","e","target","value","testBtn","focus","abc","a","b","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,IAA5D,EAAkEC,MAAlE,QAA+E,OAA/E;AAIA,OAAOC,cAAP,MAA2B,4CAA3B,C,CAGA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAE,MAAI;AAEtB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA2BP,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAaC;AAAb,MAA6BT,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMU,SAAS,GAAET,SAAS,EAA1B;AACA,QAAMU,OAAO,GAAEV,SAAS,EAAxB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCH,SAAS,CAACI,OAA5C,EAPsB,CAQtB;;AACA,QAAMC,IAAI,GAAG,MAAK;AAEd,QAAGL,SAAS,CAACI,OAAb,EAAqB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkBE,IAAlB;AACH,KAHD,MAGK;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;AACJ,GARD;;AAUA,QAAMI,UAAU,GAAIC,CAAD,IAAK;AACpBT,IAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAC,MAAI;AACdV,IAAAA,OAAO,CAACG,OAAR,CAAgBQ,KAAhB;AACH,GAFD;;AAOA,QAAMC,GAAG,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAU;AAClBd,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYW,CAAE,IAAGC,CAAE,IAAGC,CAAE,EAArC;;AACA,QAAGhB,SAAS,CAACI,OAAb,EAAqB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkBE,IAAlB;AACH,KAHD,MAGK;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;AACJ,GARD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,aAAa,EAAEP,SAA/B;AAA0C,IAAA,IAAI,EAAEA,SAAhD;AAA2D,IAAA,GAAG,EAAEI,SAAhE;AAA2E,IAAA,GAAG,EAAEa,GAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEZ,OAAxB;AAAiC,IAAA,KAAK,EAAEH,SAAxC;AAAmD,IAAA,QAAQ,EAAES,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,EAII;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADJ;AASH,CAlDD;;AAoDA,eAAehB,cAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef, memo ,useRef} from 'react'\r\n\r\n\r\n\r\nimport InputBoxChilde from '../components/testComponent/inputBoxChilde'\r\n\r\n\r\n//부모의 버튼을 클릭 시 자식의 함수를 실행시키게 하기 \r\n//도대체 어떻게 해야할까?\r\n//KeyWords : forwardRef, useImperativeHandle\r\n//https://velog.io/@hwang-eunji/React-Hooks-9-useImperativeHandle      예제 \r\n//https://ko.reactjs.org/docs/hooks-reference.html#useimperativehandle 공식문서 \r\nconst InputBoxParent =()=>{\r\n\r\n    const [initValue, setInitValue]= useState(''); \r\n    const [testValue , setTestValue] = useState(''); \r\n    const parentRef =createRef(); \r\n    const testRef =createRef(); \r\n\r\n    console.log('parentRef.current' , parentRef.current); \r\n    //부모버튼 \r\n    const init = () =>{\r\n    \r\n        if(parentRef.current){\r\n            console.log('current exsist ?');\r\n            parentRef.current.test(); \r\n        }else{\r\n            console.log('current dosen t exsist ?');\r\n        }\r\n    }\r\n\r\n    const testChange = (e)=>{\r\n        setTestValue(e.target.value); \r\n    }\r\n\r\n    const testBtn=()=>{\r\n        testRef.current.focus(); \r\n    }\r\n\r\n    \r\n\r\n\r\n    const abc = (a,b,c) =>{\r\n        console.log(`hello abc ${a},${b},${c}`); \r\n        if(parentRef.current){\r\n            console.log('current exsist ?');\r\n            parentRef.current.test(); \r\n        }else{\r\n            console.log('current dosen t exsist ?');\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <InputBoxChilde clickedValues={initValue} init={initValue} ref={parentRef} abc={abc} />  \r\n            <input type=\"text\" ref={testRef} value={testValue} onChange={testChange}/>\r\n            <button onClick={init}>부모버튼</button>\r\n            <button onClick={testBtn}>포커스</button>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default InputBoxParent; \r\n"]},"metadata":{},"sourceType":"module"}