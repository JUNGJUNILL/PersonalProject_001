{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_textArea.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar CommentTextArea = function CommentTextArea(_ref) {\n  _s();\n\n  var comment = _ref.comment,\n      insertComment = _ref.insertComment;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector.userInfo; //댓글 입력 textArea \n\n\n  var onChageComment = useCallback(function (e) {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  return __jsx(React.Fragment, null, __jsx(\"textarea\", {\n    value: comment,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: insertComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")));\n};\n\n_s(CommentTextArea, \"qgdLG5taBfnTELBtfLtGfxnAUcE=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentTextArea;\nexport default CommentTextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentTextArea\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_textArea.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Button","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","CommentTextArea","comment","insertComment","state","auth","userInfo","onChageComment","e","length","alert","setComment","target","value","width","height","marginTop","margin","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,SAEKC,+BAFL,EAGKC,kCAHL,QAKK,+BALL;;AAOA,IAAOC,eAAe,GAAE,SAAjBA,eAAiB,OAA4B;AAAA;;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;;AAAA,qBAEtBN,WAAW,CAAC,UAACO,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAFW;AAAA,MAEzCC,QAFyC,gBAEzCA,QAFyC,EAKlD;;;AACA,MAAMC,cAAc,GAAEf,WAAW,CAAC,UAACgB,CAAD,EAAK;AAErC,QAAGN,OAAO,CAACO,MAAR,KAAmB,GAAtB,EAA0B;AACxBC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AACDC,IAAAA,UAAU,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AAED,GARgC,EAQ/B,CAACX,OAAD,CAR+B,CAAjC;AAWF,SACI,4BACA;AAAW,IAAA,KAAK,EAAEA,OAAlB;AAA4B,IAAA,KAAK,EAAE;AAACY,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC,MAArB;AAA4BC,MAAAA,SAAS,EAAC;AAAtC,KAAnC;AAAgF,IAAA,QAAQ,EAAET,cAA1F;AAA0G,IAAA,WAAW,EAAGD,QAAQ,GAAG,cAAH,GAAoB,mBAApJ;AAAyK,IAAA,QAAQ,EAAEA,QAAQ,GAAG,KAAH,GAAW,IAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6B,eAAM;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,GAAGA,OAAO,CAACO,MAAX,GAAqB,CAD/B,WAHA,EAOA;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6B,eAAM;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEf,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAPA,CADJ;AAcC,CA/BD;;GAAOF,e;UAEuBJ,W;;;KAFvBI,e;AAiCP,eAAeA,eAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button} from 'antd'\r\n\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst  CommentTextArea= ({comment,insertComment}) =>{\r\n\r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n    \r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n\r\n\r\nreturn (\r\n    <>\r\n    <textarea  value={comment}  style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n      <Button type=\"primary\" onClick={insertComment}>댓글달기</Button>\r\n    </div>\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default CommentTextArea; "]},"metadata":{},"sourceType":"module"}