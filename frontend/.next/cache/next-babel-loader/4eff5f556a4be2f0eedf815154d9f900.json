{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\mainPosts_1001.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Pagenation from '../utilComponent/Pagenation';\nimport { DislikeTwoTone, LikeTwoTone, EyeOutlined, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { MAINPOSTS_1001_LIST_REQUEST } from '../reducers/mainPosts_1001';\nimport { LOAD_USER_REQUEST } from '../reducers/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from '../utilComponent/isEmpty';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nvar mainPosts_1001 = function mainPosts_1001(_ref) {\n  _s();\n\n  var pages = _ref.pages;\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      mainPosts_1001 = _useSelector.mainPosts_1001;\n\n  useEffect(function () {\n    // console.log('pages=>',pages); \n    pagenate(pages, []); //   dispatch({\n    //       type:MAINPOSTS_1001_LIST_REQUEST, \n    //       data:{postFlag:'1001',\n    //             currentPage:nowPage,\n    //             maxPage:postsPerPage\n    //            }, \n    //  })\n    // dispatch({\n    //     type:LOAD_USER_REQUEST,\n    // }); \n  }, []);\n\n  var abc = function abc() {\n    alert('abc');\n  };\n\n  var gotoDetail = useCallback(function (postId, userNickName, postFlag, param) {\n    router.push({\n      pathname: '/detailPage',\n      query: {\n        postId: postId,\n        nickName: userNickName,\n        postFlag: postFlag\n      }\n    });\n  }, []);\n  /*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\n\n  var _useState = useState(0),\n      nowPage = _useState[0],\n      setNowPage = _useState[1]; //현재 페이지\n\n\n  var _useState2 = useState(5),\n      postsPerPage = _useState2[0]; //한 페이지당 list 수 \n\n\n  var _useState3 = useState(5),\n      groupPage = _useState3[0],\n      setGroupPage = _useState3[1]; //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\n\n\n  var _useState4 = useState([]),\n      nowGroupPageArray = _useState4[0],\n      setNowGroupPageArray = _useState4[1]; //현제 페이징 그룹 배열\n\n\n  var pagenate = useCallback(function (pageNumber, groupPageArray) {\n    setNowPage(pageNumber);\n    nowGroupPageArray.length = 0;\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\n    var indexOfLastPost = pageNumber * postsPerPage;\n    var indexOfFirstPost = indexOfLastPost - postsPerPage;\n    dispatch({\n      type: MAINPOSTS_1001_LIST_REQUEST,\n      data: {\n        postFlag: '1001',\n        currentPage: indexOfFirstPost,\n        maxPage: postsPerPage\n      }\n    });\n  }, [nowPage, nowGroupPageArray]);\n  /*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, mainPosts_1001.map(function (v, i) {\n    return __jsx(\"div\", {\n      className: \"divTableRow\",\n      onClick: function onClick() {\n        return gotoDetail(v.postId, v.userNickName, '1001', nowPage);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }, __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"divImageCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }\n    }, __jsx(\"img\", {\n      src: \"https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 79\n      }\n    }))), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/detailPage',\n        query: {\n          postId: v.postId,\n          nickName: v.userNickName,\n          postFlag: '1001'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 50\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 155\n      }\n    }, isEmpty(v.title))), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 187\n      }\n    }), __jsx(LikeTwoTone, {\n      twoToneColor: \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }), \" : \", v.good, \" \", __jsx(DislikeTwoTone, {\n      twoToneColor: \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 68\n      }\n    }), \" : \", v.bad, \"  \", __jsx(EyeOutlined, {\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 120\n      }\n    }), \" : \", v.hit, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 156\n      }\n    }), __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), \" \", isEmpty(v.userNickName), \"   \", __jsx(FieldTimeOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 64\n      }\n    }), \" \", custumDateFormat(v.createdDate), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 119\n      }\n    })));\n  })), __jsx(Pagenation, {\n    pagenate: pagenate,\n    dataLength: mainPosts_1001.length,\n    postsPerPage: postsPerPage,\n    nowPage: nowPage,\n    groupPage: groupPage,\n    groupPageArray: nowGroupPageArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(mainPosts_1001, \"5MalsQXQRiypDIxZEAaQSSCV/Tg=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\nmainPosts_1001.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var pages;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pages = context.query.nowPage;\n            return _context.abrupt(\"return\", {\n              pages: pages\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default mainPosts_1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/mainPosts_1001.js"],"names":["React","useState","useEffect","useCallback","Router","useRouter","Link","Pagenation","DislikeTwoTone","LikeTwoTone","EyeOutlined","UserOutlined","FieldTimeOutlined","MAINPOSTS_1001_LIST_REQUEST","LOAD_USER_REQUEST","useDispatch","useSelector","isEmpty","custumDateFormat","mainPosts_1001","pages","dispatch","router","state","pagenate","abc","alert","gotoDetail","postId","userNickName","postFlag","param","push","pathname","query","nickName","nowPage","setNowPage","postsPerPage","groupPage","setGroupPage","nowGroupPageArray","setNowGroupPageArray","pageNumber","groupPageArray","length","concat","indexOfLastPost","indexOfFirstPost","type","data","currentPage","maxPage","map","v","i","title","good","bad","hit","createdDate","getInitialProps","context"],"mappings":"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","sourcesContent":["\r\nimport React , {useState,useEffect,useCallback}from 'react'\r\nimport Router ,{ useRouter } from 'next/router';\r\nimport Link from 'next/link'\r\nimport Pagenation from '../utilComponent/Pagenation'\r\nimport {DislikeTwoTone,LikeTwoTone ,EyeOutlined, UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport \r\n    {MAINPOSTS_1001_LIST_REQUEST,} \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\n\r\nimport \r\n    {LOAD_USER_REQUEST,\r\n    } \r\nfrom '../reducers/auth'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport isEmpty from '../utilComponent/isEmpty';\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\n\r\nconst mainPosts_1001 = ({pages})=>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const router   = useRouter(); \r\n  const {mainPosts_1001} = useSelector((state)=>state.mainPosts_1001); \r\n\r\n\r\n  useEffect(()=>{\r\n    // console.log('pages=>',pages); \r\n    pagenate(pages,[]); \r\n  //   dispatch({\r\n  //       type:MAINPOSTS_1001_LIST_REQUEST, \r\n  //       data:{postFlag:'1001',\r\n  //             currentPage:nowPage,\r\n  //             maxPage:postsPerPage\r\n  //            }, \r\n  //  })\r\n \r\n\r\n    // dispatch({\r\n    //     type:LOAD_USER_REQUEST,\r\n    // }); \r\n  },[]); \r\n\r\n  const abc = ()=>{\r\n    alert('abc'); \r\n  }\r\n\r\n  const gotoDetail = useCallback((postId,userNickName,postFlag,param)=>{\r\n    router.push({pathname:'/detailPage',\r\n                 query:{postId,nickName:userNickName,postFlag},\r\n              }); \r\n  },[])\r\n\r\n/*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\r\n  const [nowPage,setNowPage] = useState(0);                       //현재 페이지\r\n  const [postsPerPage] = useState(5);                             //한 페이지당 list 수 \r\n  const [groupPage , setGroupPage] = useState(5);                 //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\r\n  const [nowGroupPageArray,setNowGroupPageArray] =useState([]);   //현제 페이징 그룹 배열\r\n  const pagenate =useCallback((pageNumber, groupPageArray)=>{\r\n    setNowPage(pageNumber); \r\n    nowGroupPageArray.length=0; \r\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\r\n    const indexOfLastPost = pageNumber * postsPerPage;   \r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;  \r\n\r\n    dispatch({\r\n      type:MAINPOSTS_1001_LIST_REQUEST, \r\n      data:{postFlag:'1001',\r\n            currentPage:indexOfFirstPost,\r\n            maxPage:postsPerPage\r\n     }, \r\n\r\n     \r\n  });\r\n\r\n},[nowPage,nowGroupPageArray]); \r\n/*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\r\n\r\n\r\n   return (\r\n    <>\r\n      <div className=\"divTable\">\r\n            {mainPosts_1001.map((v,i)=>(\r\n               <div className='divTableRow' onClick={()=>gotoDetail(v.postId,v.userNickName,'1001',nowPage)}>\r\n                  <div className='divTableCell'><div className=\"divImageCell\"><img src='https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg' /></div></div>\r\n                  <div className=\"divTableCell\" ><Link href={{pathname:'/detailPage' , query:{postId:v.postId,nickName:v.userNickName,postFlag:'1001'}}} ><a>{isEmpty(v.title)}</a></Link><br/>\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {v.good} <DislikeTwoTone twoToneColor=\"#1ba640\"/> : {v.bad}  <EyeOutlined color=\"red\"/> : {v.hit}<br/>\r\n                  <UserOutlined /> {isEmpty(v.userNickName)}   <FieldTimeOutlined /> {custumDateFormat(v.createdDate)}<br />\r\n                  </div>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    \r\n\r\n        <Pagenation pagenate={pagenate} dataLength={mainPosts_1001.length} postsPerPage={postsPerPage} nowPage={nowPage} groupPage={groupPage} groupPageArray={nowGroupPageArray} />\r\n\r\n    </>\r\n    );\r\n}; \r\n\r\nmainPosts_1001.getInitialProps = async (context) =>{\r\n\r\n\r\n  const pages = context.query.nowPage; \r\n\r\n  return {pages}; \r\n\r\n}\r\n\r\nexport default mainPosts_1001; "]},"metadata":{},"sourceType":"module"}