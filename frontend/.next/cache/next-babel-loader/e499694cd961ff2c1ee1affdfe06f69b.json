{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_textArea.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { MAINPOSTS_1001_COMMENTINSERT_REQUEST } from '../../reducers/mainPosts_1001';\n\nconst CommentTextArea = ({\n  postFlag,\n  nickName,\n  postId,\n  userInfo\n}) => {\n  const dispatch = useDispatch();\n  const ref = createRef();\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n  const blank_pattern = /^\\s+|\\s+&/g; //댓글 입력 textArea \n\n  const onChageComment = useCallback(e => {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  const insertComment = useCallback(e => {\n    if (comment.length === 0 || comment.replace(blank_pattern, '') === \"\") {\n      ref.current.focus();\n      alert('댓글을 입력해 주세요!');\n      return;\n    }\n\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    } //댓글 입력\n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTINSERT_REQUEST,\n      data: {\n        postId,\n        postFlag,\n        nickName,\n        who: userInfo,\n        comment\n      }\n    });\n    setComment(''); // 댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag,\n        who: userInfo\n      }\n    });\n  }, [comment]);\n  return __jsx(React.Fragment, null, __jsx(\"textarea\", {\n    value: comment,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), userInfo && __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: insertComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")));\n};\n\nexport default CommentTextArea;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_textArea.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Button","MAINPOSTS_1001_COMMENTINSERT_REQUEST","CommentTextArea","postFlag","nickName","postId","userInfo","dispatch","ref","comment","setComment","blank_pattern","onChageComment","e","length","alert","target","value","insertComment","replace","current","focus","type","data","who","MAINPOSTS_1001_COMMENTS_REQUEST","width","height","marginTop","margin","display","float"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,SAEKC,oCAFL,QAIK,+BAJL;;AAMA,MAAOC,eAAe,GAAE,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,QAAV;AAAmBC,EAAAA,MAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAwC;AAE5D,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,GAAG,GAAGX,SAAS,EAArB;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMe,aAAa,GAAG,YAAtB,CAL4D,CAQ9D;;AACA,QAAMC,cAAc,GAAElB,WAAW,CAAEmB,CAAD,IAAK;AAErC,QAAGJ,OAAO,CAACK,MAAR,KAAmB,GAAtB,EAA0B;AACxBC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AACDL,IAAAA,UAAU,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV,CAAV;AAED,GARgC,EAQ/B,CAACR,OAAD,CAR+B,CAAjC;AAYA,QAAMS,aAAa,GAAGxB,WAAW,CAAEmB,CAAD,IAAK;AACrC,QAAGJ,OAAO,CAACK,MAAR,KAAmB,CAAnB,IAAwBL,OAAO,CAACU,OAAR,CAAgBR,aAAhB,EAA8B,EAA9B,MAAoC,EAA/D,EAAkE;AAC5DH,MAAAA,GAAG,CAACY,OAAJ,CAAYC,KAAZ;AACAN,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AAED,QAAGN,OAAO,CAACK,MAAR,KAAmB,GAAtB,EAA0B;AACxBC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD,KAVgC,CAW/B;;;AACAR,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAACrB,oCADE;AAEPsB,MAAAA,IAAI,EAAC;AACHlB,QAAAA,MADG;AAEHF,QAAAA,QAFG;AAGHC,QAAAA,QAHG;AAIHoB,QAAAA,GAAG,EAAClB,QAJD;AAKHG,QAAAA;AALG;AAFE,KAAD,CAAR;AAWFC,IAAAA,UAAU,CAAC,EAAD,CAAV,CAvBiC,CA0BlC;;AACGH,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAACG,+BADE;AAEPF,MAAAA,IAAI,EAAC;AACHlB,QAAAA,MADG;AAEHD,QAAAA,QAFG;AAGHD,QAAAA,QAHG;AAIHqB,QAAAA,GAAG,EAAClB;AAJD;AAFE,KAAD,CAAR;AASH,GApC4B,EAoC3B,CAACG,OAAD,CApC2B,CAAjC;AA0CF,SACI,4BACA;AAAW,IAAA,KAAK,EAAEA,OAAlB;AAA4B,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC,MAArB;AAA4BC,MAAAA,SAAS,EAAC;AAAtC,KAAnC;AAAgF,IAAA,QAAQ,EAAEhB,cAA1F;AAA0G,IAAA,WAAW,EAAGN,QAAQ,GAAG,cAAH,GAAoB,mBAApJ;AAAyK,IAAA,QAAQ,EAAEA,QAAQ,GAAG,KAAH,GAAW,IAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,KAAK,EAAE;AAACuB,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,OAAO,GAAGA,OAAO,CAACK,MAAX,GAAqB,CAD/B,WAHA,EAOCR,QAAQ,IACL;AAAK,IAAA,KAAK,EAAE;AAACuB,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEb,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CARJ,CADJ;AAiBC,CAhFD;;AAkFA,eAAehB,eAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button} from 'antd'\r\n\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst  CommentTextArea= ({postFlag,nickName,postId,userInfo}) =>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const ref = createRef(); \r\n    const [comment, setComment] = useState(''); \r\n    const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n    \r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n  \r\n\r\n\r\n  const insertComment = useCallback((e)=>{\r\n    if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n          ref.current.focus();  \r\n          alert('댓글을 입력해 주세요!'); \r\n          return; \r\n        }\r\n    \r\n        if(comment.length === 300){\r\n          alert('300자 이상 입력 할 수 없습니다.'); \r\n          return; \r\n        }\r\n          //댓글 입력\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_REQUEST, \r\n            data:{\r\n              postId,\r\n              postFlag,\r\n              nickName ,\r\n              who:userInfo, \r\n              comment,\r\n            }\r\n        });\r\n    \r\n        setComment(''); \r\n    \r\n    \r\n       // 댓글 리스트 \r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n            data:{\r\n              postId,\r\n              nickName,\r\n              postFlag,\r\n              who:userInfo,\r\n            }\r\n        }); \r\n      },[comment]);\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <textarea  value={comment}  style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    {userInfo && \r\n        <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n            <Button type=\"primary\" onClick={insertComment}>댓글달기</Button>\r\n        </div>\r\n    }\r\n\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default CommentTextArea; "]},"metadata":{},"sourceType":"module"}