{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport CreateUser from '../components/testComponent/CreateUser';\nimport UserList from '../components/testComponent/UserList';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nfunction Test() {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  }, []);\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'DevRappers',\n    email: 'devrappers@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    }; //setUsers([...users, user]);\n\n    setUsers(users => users.concat(user));\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  const onRemove = useCallback(id => {\n    setUsers(users => users.filter(user => user.id !== id));\n  }, []);\n  const onToggle = useCallback(id => {\n    setUsers(users => users.map(user => user.id === id ? _objectSpread(_objectSpread({}, user), {}, {\n      active: !user.active\n    }) : user));\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, __jsx(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(UserList, {\n    users: users,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count));\n}\n\nexport default Test;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["useEffect","CreateUser","UserList","countActiveUsers","users","console","log","filter","user","active","length","Test","inputs","setInputs","useState","username","email","onChange","useCallback","e","name","value","target","setUsers","id","nextId","useRef","onCreate","current","concat","onRemove","onToggle","map","count","useMemo"],"mappings":";;;;;;;;;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,EAAkCC,MAAzC;AACD;;AAED,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AACnCC,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBJ,MAA5B;AAEA,QAAMK,QAAQ,GAAGC,WAAW,CAACC,CAAC,IAAI;AAChC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,SAAS,iCACJD,MADI;AAEP,OAACQ,IAAD,GAAQC;AAFD,OAAT;AAID,GAN2B,EAM1B,EAN0B,CAA5B;AAQA,QAAM,CAACjB,KAAD,EAAQmB,QAAR,IAAoBT,QAAQ,CAAC,CACjC;AACEU,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,YAFZ;AAGEC,IAAAA,KAAK,EAAE,sBAHT;AAIEP,IAAAA,MAAM,EAAE;AAJV,GADiC,EAOjC;AACEe,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE,oBAHT;AAIEP,IAAAA,MAAM,EAAE;AAJV,GAPiC,EAajC;AACEe,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEP,IAAAA,MAAM,EAAE;AAJV,GAbiC,CAAD,CAAlC;AAqBA,QAAMgB,MAAM,GAAGC,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMC,QAAQ,GAAGT,WAAW,CAAC,MAAM;AACjC,UAAMV,IAAI,GAAG;AACXgB,MAAAA,EAAE,EAAEC,MAAM,CAACG,OADA;AAEXb,MAAAA,QAFW;AAGXC,MAAAA;AAHW,KAAb,CADiC,CAMjC;;AAEAO,IAAAA,QAAQ,CAACnB,KAAK,IAAEA,KAAK,CAACyB,MAAN,CAAarB,IAAb,CAAR,CAAR;AAEAK,IAAAA,SAAS,CAAC;AACRE,MAAAA,QAAQ,EAAE,EADF;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAIAS,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB;AACD,GAf2B,EAe1B,CAACb,QAAD,EAAWC,KAAX,CAf0B,CAA5B;AAiBA,QAAMc,QAAQ,GAAGZ,WAAW,CAACM,EAAE,IAAI;AACjCD,IAAAA,QAAQ,CAACnB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACgB,EAAL,KAAYA,EAAjC,CAAV,CAAR;AACD,GAF2B,EAE1B,EAF0B,CAA5B;AAIA,QAAMO,QAAQ,GAAGb,WAAW,CAACM,EAAE,IAAI;AACjCD,IAAAA,QAAQ,CAACnB,KAAK,IACZA,KAAK,CAAC4B,GAAN,CAAUxB,IAAI,IACZA,IAAI,CAACgB,EAAL,KAAYA,EAAZ,mCAAsBhB,IAAtB;AAA4BC,MAAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAA1C,SAAqDD,IADvD,CADM,CAAR;AAKD,GAN2B,EAM1B,EAN0B,CAA5B;AAQA,QAAMyB,KAAK,GAAGC,OAAO,CAAC,MAAM/B,gBAAgB,CAACC,KAAD,CAAvB,EAAgC,CAACA,KAAD,CAAhC,CAArB;AAEA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,MAAC,UAAD;AACE,IAAA,QAAQ,EAAEW,QADZ;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,QAAQ,EAAEU,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,EAOD,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEvB,KAAjB;AAAwB,IAAA,QAAQ,EAAE0B,QAAlC;AAA4C,IAAA,QAAQ,EAAEC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPC,EAQD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAgBE,KAAhB,CARC,CADL;AAYD;;AAED,eAAetB,IAAf","sourcesContent":["\r\nimport { useEffect } from 'react';\r\nimport CreateUser from '../components/testComponent/CreateUser'\r\nimport UserList from '../components/testComponent/UserList'\r\n\r\n\r\nfunction countActiveUsers(users) {\r\n    console.log('활성 사용자 수를 세는중...');\r\n    return users.filter(user => user.active).length;\r\n  }\r\n  \r\n  function Test() {\r\n    const [inputs, setInputs] = useState({\r\n      username: '',\r\n      email: ''\r\n    });\r\n    \r\n    const { username, email } = inputs;\r\n    \r\n    const onChange = useCallback(e => {\r\n      const { name, value } = e.target;\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n      });\r\n    },[]);\r\n    \r\n    const [users, setUsers] = useState([\r\n      {\r\n        id: 1,\r\n        username: 'DevRappers',\r\n        email: 'devrappers@gmail.com',\r\n        active: true\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'tester',\r\n        email: 'tester@example.com',\r\n        active: false\r\n      },\r\n      {\r\n        id: 3,\r\n        username: 'liz',\r\n        email: 'liz@example.com',\r\n        active: false\r\n      }\r\n    ]);\r\n  \r\n    const nextId = useRef(4);\r\n    \r\n    const onCreate = useCallback(() => {\r\n      const user = {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      };\r\n      //setUsers([...users, user]);\r\n      \r\n      setUsers(users=>users.concat(user));\r\n      \r\n      setInputs({\r\n        username: '',\r\n        email: ''\r\n      });\r\n      nextId.current += 1;\r\n    },[username, email]);\r\n    \r\n    const onRemove = useCallback(id => {\r\n      setUsers(users => users.filter(user => user.id !== id));\r\n    },[]);\r\n    \r\n    const onToggle = useCallback(id => {\r\n      setUsers(users =>\r\n        users.map(user =>\r\n          user.id === id ? { ...user, active: !user.active } : user\r\n        )\r\n      );\r\n    },[]);\r\n    \r\n    const count = useMemo(() => countActiveUsers(users), [users]);\r\n    \r\n    return (\r\n         <div>\r\n        <CreateUser\r\n          username={username}\r\n          email={email}\r\n          onChange={onChange}\r\n          onCreate={onCreate}\r\n        />\r\n        <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\r\n        <div>활성사용자 수 : {count}</div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Test;"]},"metadata":{},"sourceType":"module"}