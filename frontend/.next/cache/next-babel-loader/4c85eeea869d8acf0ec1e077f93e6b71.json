{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nconst Comments1001 = ({\n  likeBtn,\n  createdDate,\n  comment,\n  commentId,\n  flag,\n  good,\n  bad,\n  nickName,\n  who,\n  postFlag,\n  postId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: test,\n    1: setTest\n  } = useState(likeClick);\n  const {\n    0: goodCount,\n    1: setGoodCount\n  } = useState(good);\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  const {\n    0: disLike,\n    1: setDisLike\n  } = useState(false);\n  let badCount = parseInt(bad);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  /*\r\n  \r\n      const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n          if(!userInfo){\r\n            alert('로그인이 필요한 서비스 입니다.'); \r\n            return;\r\n          }\r\n        \r\n          //alert(`${commentid},${flag},${likeDislike}`)\r\n          //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n      \r\n          if(flag === \"Y\"){\r\n            alert('이미 좋아요! 싫어요! 했습니다.'); \r\n            return; \r\n      \r\n          }else{\r\n              if(likeDislike ===\"good\"){\r\n                  setLike(true); \r\n                  setDisLike(false); \r\n              }else{\r\n                  setLike(false); \r\n                  setDisLike(true); \r\n              }\r\n  \r\n          //댓글 좋아요!\r\n            dispatch({\r\n              type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n              data:{\r\n                commentid,\r\n                postFlag,\r\n                postId,\r\n                flag: likeDislike ,\r\n                who: userInfo,\r\n                nickName,\r\n              }\r\n          }); \r\n  \r\n      \r\n          }\r\n        //  setGoodCount(parseInt(good)+1); \r\n          //댓글 리스트 \r\n        //   dispatch({\r\n        //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        //     data:{\r\n        //       postId,\r\n        //       nickName,\r\n        //       postFlag,\r\n        //       who:userInfo, \r\n        //     }\r\n           \r\n        // }); \r\n         alert(`${likeDislike}`); \r\n        \r\n        },[]); \r\n  */\n\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 87\n    }\n  }), comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'good'),\n    twoToneColor: test ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }), good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'bad'),\n    twoToneColor: disLikeClick ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 162\n    }\n  }), bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 305\n    }\n  }))));\n};\n\nexport default Comments1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","likeBtn","createdDate","comment","commentId","flag","good","bad","nickName","who","postFlag","postId","dispatch","test","setTest","likeClick","goodCount","setGoodCount","like","setLike","disLike","setDisLike","badCount","parseInt","userInfo","state","auth","marginTop","display","float","disLikeClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,gBAAP,MAA8B,sCAA9B;AACA,SAAQC,cAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,SAEKC,+BAFL,EAGKC,kCAHL,QAKK,+BALL;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AACAC,EAAAA,WADA;AAEAC,EAAAA,OAFA;AAGAC,EAAAA,SAHA;AAIAC,EAAAA,IAJA;AAKAC,EAAAA,IALA;AAMAC,EAAAA,GANA;AAOAC,EAAAA,QAPA;AAQAC,EAAAA,GARA;AASAC,EAAAA,QATA;AAUAC,EAAAA;AAVA,CAAD,KAaG;AAItB,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AAEE,QAAM;AAAA,OAACoB,IAAD;AAAA,OAAMC;AAAN,MAAiBvB,QAAQ,CAACwB,SAAD,CAA/B;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAWC;AAAX,MAA2B1B,QAAQ,CAACe,IAAD,CAAzC;AAIF,QAAM;AAAA,OAACY,IAAD;AAAA,OAAQC;AAAR,MAAoB5B,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAAC6B,OAAD;AAAA,OAAWC;AAAX,MAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AAGE,MAAI+B,QAAQ,GAAGC,QAAQ,CAAChB,GAAD,CAAvB;AAEA,QAAM;AAACiB,IAAAA;AAAD,MAAoB9B,WAAW,CAAE+B,KAAD,IAASA,KAAK,CAACC,IAAhB,CAArC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDI,SACY;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,GAAJ,CADA,YACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQd,gBAAgB,CAACO,WAAD,CAAxB,CADpB,EACkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlE,EAECC,OAFD,EAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT,sBAKI;AAAM,IAAA,KAAK,EAAE;AAACwB,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,OAAO,EAAC,OAAxB;AAAgCC,MAAAA,KAAK,EAAC;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,MAAI5B,OAAO,CAACG,SAAD,EAAWC,IAAX,EAAgB,MAAhB,CAAjC;AAA0D,IAAA,YAAY,EAAEQ,IAAI,GAAG,SAAH,GAAe,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAC4GP,IAD5G,sBACyI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAIL,OAAO,CAACG,SAAD,EAAWC,IAAX,EAAgB,KAAhB,CAApC;AAA4D,IAAA,YAAY,EAAEyB,YAAY,GAAG,SAAH,GAAe,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzI,EAC4PvB,GAD5P,sBACwR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxR,CALJ,CADJ,CADZ;AAcH,CApGD;;AAsGA,eAAeP,YAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({likeBtn, \r\n                      createdDate,\r\n                      comment,\r\n                      commentId,\r\n                      flag,\r\n                      good,\r\n                      bad,\r\n                      nickName,\r\n                      who,\r\n                      postFlag,\r\n                      postId,\r\n\r\n\r\n                    })=>{\r\n\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n    const [test,setTest] = useState(likeClick); \r\n    const [goodCount,setGoodCount] = useState(good);  \r\n\r\n    \r\n\r\n  const [like , setLike]  = useState(false); \r\n  const [disLike , setDisLike]  = useState(false); \r\n\r\n\r\n    let badCount  =parseInt(bad); \r\n\r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n/*\r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            if(likeDislike ===\"good\"){\r\n                setLike(true); \r\n                setDisLike(false); \r\n            }else{\r\n                setLike(false); \r\n                setDisLike(true); \r\n            }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n\r\n    \r\n        }\r\n      //  setGoodCount(parseInt(good)+1); \r\n        //댓글 리스트 \r\n      //   dispatch({\r\n      //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n      //     data:{\r\n      //       postId,\r\n      //       nickName,\r\n      //       postFlag,\r\n      //       who:userInfo, \r\n      //     }\r\n         \r\n      // }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n*/\r\n    return (\r\n                <div  className='divTableRow' >\r\n                    <div  className=\"divTableCell\">\r\n                    <b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={test ? \"#ff0000\" : \"#1ba640\"}/>{good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={disLikeClick ? \"#ff0000\" : \"#1ba640\"} />{bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}