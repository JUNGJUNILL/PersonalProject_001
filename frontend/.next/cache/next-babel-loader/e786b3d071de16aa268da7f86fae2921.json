{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaEmpList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchempList),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(empListSaga);\n\nimport axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { EMP_LIST_REQUEST, EMP_LIST_SUCCESS, EMP_LIST_FAILURE } from '../reducers/emp';\n\nfunction APIempList() {\n  return axios.post('/emp', {}, {\n    withCredentials: true\n  });\n}\n\n_c = APIempList;\n\nfunction sagaEmpList(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaEmpList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(APIempList);\n\n        case 3:\n          result = _context.sent;\n          console.log('empList', result.data);\n          _context.next = 7;\n          return put({\n            type: EMP_LIST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          alert('사가 에러', _context.t0);\n          _context.next = 15;\n          return put({\n            type: EMP_LIST_FAILURE,\n            error: _context.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchempList() {\n  return _regeneratorRuntime.wrap(function watchempList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('watchempList');\n          _context2.next = 3;\n          return takeEvery(EMP_LIST_REQUEST, sagaEmpList);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function empListSaga() {\n  return _regeneratorRuntime.wrap(function empListSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchempList)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"APIempList\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/empListSaga.js"],"names":["sagaEmpList","watchempList","empListSaga","axios","all","fork","takeLatest","takeEvery","put","delay","call","EMP_LIST_REQUEST","EMP_LIST_SUCCESS","EMP_LIST_FAILURE","APIempList","post","withCredentials","action","result","console","log","data","type","error","alert"],"mappings":";;oDAeUA,W;qDAqBAC,Y;qDAKeC,W;;AAzCzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,UAAjB,EAA4BC,SAA5B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAkDC,IAAlD,QAA6D,oBAA7D;AACA,SACKC,gBADL,EAEKC,gBAFL,EAGKC,gBAHL,QAKK,iBALL;;AASA,SAASC,UAAT,GAAqB;AACjB,SAAOX,KAAK,CAACY,IAAN,CAAW,MAAX,EAAkB,EAAlB,EAAqB;AAACC,IAAAA,eAAe,EAAC;AAAjB,GAArB,CAAP;AACH;;KAFQF,U;;AAIT,SAAUd,WAAV,CAAsBiB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGqB,iBAAMP,IAAI,CAACI,UAAD,CAAV;;AAHrB;AAGYI,UAAAA,MAHZ;AAIMC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAwBF,MAAM,CAACG,IAA/B;AAJN;AAKM,iBAAOb,GAAG,CAAC;AACLc,YAAAA,IAAI,EAACV,gBADA;AAELS,YAAAA,IAAI,EAAEH,MAAM,CAACG;AAFR,WAAD,CAAV;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYQF,UAAAA,OAAO,CAACI,KAAR;AACAC,UAAAA,KAAK,CAAC,OAAD,cAAL;AAbR;AAcQ,iBAAMhB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAACT,gBADC;AAENU,YAAAA,KAAK;AAFC,WAAD,CAAT;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,SAAUtB,YAAV;AAAA;AAAA;AAAA;AAAA;AACIkB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AADJ;AAEI,iBAAMb,SAAS,CAACI,gBAAD,EAAkBX,WAAlB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEX,iBAAME,GAAG,CAAC,CACNC,IAAI,CAACJ,YAAD,CADE,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {EMP_LIST_REQUEST,\r\n     EMP_LIST_SUCCESS,\r\n     EMP_LIST_FAILURE\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\n\r\nfunction APIempList(){\r\n    return axios.post('/emp',{},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaEmpList(action){\r\n\r\n    try{\r\n      const result = yield call(APIempList); \r\n      console.log('empList' , result.data); \r\n      yield  put({\r\n            type:EMP_LIST_SUCCESS, \r\n            data: result.data, \r\n        })\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('사가 에러',e); \r\n        yield put({\r\n            type:EMP_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchempList(){\r\n    console.log('watchempList'); \r\n    yield takeEvery(EMP_LIST_REQUEST,sagaEmpList); \r\n}\r\n\r\nexport default function* empListSaga(){\r\n\r\n    yield all([\r\n        fork(watchempList), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}