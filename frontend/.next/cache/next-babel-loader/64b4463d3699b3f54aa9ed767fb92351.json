{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\count.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { COUNT_PLUS_REQUEST, countMinusActionm, COUNT_MINUS_REQUEST } from '../reducers/count';\n\nvar Count = function Count() {\n  _s();\n\n  var dispatch = useDispatch();\n  var count = useSelector(function (state) {\n    return state.count;\n  }); //store의 state를 불러오는 hook \n  //store의 state 중에서 count의 state를 불러온다.\n\n  var toggle = useCallback(function (param) {\n    return function () {\n      if (param === 'plus') {\n        return dispatch({\n          type: COUNT_PLUS_REQUEST\n        });\n      } else if (param === 'minus') {\n        return dispatch({\n          type: COUNT_MINUS_REQUEST\n        });\n      } else {\n        return;\n      }\n    };\n  }, []);\n  var ref = createRef();\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"\\uD14C\\uC2A4\\uD2B8 \\u3147\\u3147\", __jsx(\"inpu\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a01\",\n    value: \"text01\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"inpu\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 68\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 102\n    }\n  }), __jsx(\"inpu\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a02\",\n    value: \"text02\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"inpu\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 68\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 102\n    }\n  }), __jsx(\"inpu\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a03\",\n    value: \"text03\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"inpu\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 68\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 102\n    }\n  }), __jsx(\"inpu\", {\n    type: \"text\",\n    ref: ref,\n    name: \"a04\",\n    value: \"text04\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"inpu\", {\n    type: \"button\",\n    value: \"\\uBC84\\uD2BC1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 68\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 102\n    }\n  }));\n};\n\n_s(Count, \"9JLh5EGpiEauO8HADopXgKHfFko=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/count.js"],"names":["React","useCallback","createRef","useDispatch","useSelector","COUNT_PLUS_REQUEST","countMinusActionm","COUNT_MINUS_REQUEST","Count","dispatch","count","state","toggle","param","type","ref"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,kBAAR,EAA2BC,iBAA3B,EAA6CC,mBAA7C,QAAsE,mBAAtE;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAK;AAAA;;AAGf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,KAAK,GAAMN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAA5B,CAJe,CAKc;AACA;;AAE7B,MAAME,MAAM,GAAGX,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAE,YAAI;AAElC,UAAGA,KAAK,KAAI,MAAZ,EAAmB;AAChB,eAAQJ,QAAQ,CAAC;AAACK,UAAAA,IAAI,EAACT;AAAN,SAAD,CAAhB;AACF,OAFD,MAEM,IAAGQ,KAAK,KAAI,OAAZ,EAAoB;AACtB,eAAOJ,QAAQ,CAAC;AAACK,UAAAA,IAAI,EAACP;AAAN,SAAD,CAAf;AACH,OAFK,MAED;AACD;AACH;AACJ,KAT+B;AAAA,GAAN,EASxB,EATwB,CAA1B;AAaA,MAAMQ,GAAG,GAAGb,SAAS,EAArB;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAMA;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEa,GAAvB;AAA4B,IAAA,IAAI,EAAE,KAAlC;AAAyC,IAAA,KAAK,EAAE,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,EAM2D;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN3D,EAM6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN7F,EAOA;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEA,GAAvB;AAA4B,IAAA,IAAI,EAAE,KAAlC;AAAyC,IAAA,KAAK,EAAE,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EAO2D;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP3D,EAO6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP7F,EAQA;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEA,GAAvB;AAA4B,IAAA,IAAI,EAAE,KAAlC;AAAyC,IAAA,KAAK,EAAE,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,EAQ2D;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR3D,EAQ6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR7F,EASA;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEA,GAAvB;AAA4B,IAAA,IAAI,EAAE,KAAlC;AAAyC,IAAA,KAAK,EAAE,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,EAS2D;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT3D,EAS6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT7F,CADJ;AAiBH,CA1CD;;GAAMP,K;UAGeL,W,EACAC,W;;;KAJfI,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React, { useCallback ,createRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {COUNT_PLUS_REQUEST,countMinusActionm,COUNT_MINUS_REQUEST}from '../reducers/count';\r\n\r\n\r\nconst Count = () =>{\r\n\r\n\r\n    const dispatch = useDispatch(); \r\n    const count    = useSelector(state => state.count); \r\n                                 //store의 state를 불러오는 hook \r\n                                 //store의 state 중에서 count의 state를 불러온다.\r\n\r\n    const toggle = useCallback(param=>()=>{\r\n        \r\n        if(param ==='plus'){\r\n           return  dispatch({type:COUNT_PLUS_REQUEST}); \r\n        }else if(param ==='minus'){\r\n            return dispatch({type:COUNT_MINUS_REQUEST});  \r\n        }else{\r\n            return; \r\n        }\r\n    },[]); \r\n\r\n\r\n\r\n    const ref = createRef(); \r\n\r\n                                 \r\n                                 \r\n    return (\r\n        <div>\r\n          {/** 카운드 : {count.number}\r\n            <button onClick={toggle('plus')}>더하기</button>\r\n            <button onClick={toggle('minus')}>빼 기</button>\r\n         */} \r\n        테스트 ㅇㅇ\r\n        <inpu type=\"text\" ref={ref} name={\"a01\"} value={\"text01\"}/><inpu type=\"button\" value=\"버튼1\" /><br/>\r\n        <inpu type=\"text\" ref={ref} name={\"a02\"} value={\"text02\"}/><inpu type=\"button\" value=\"버튼1\" /><br/>\r\n        <inpu type=\"text\" ref={ref} name={\"a03\"} value={\"text03\"}/><inpu type=\"button\" value=\"버튼1\" /><br/>\r\n        <inpu type=\"text\" ref={ref} name={\"a04\"} value={\"text04\"}/><inpu type=\"button\" value=\"버튼1\" /><br/>\r\n        </div>\r\n \r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}