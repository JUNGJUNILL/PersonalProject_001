{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\mainPosts_1001.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Pagenation from '../utilComponent/Pagenation';\nimport { DislikeTwoTone, LikeTwoTone, EyeOutlined, UserOutlined, FieldTimeOutlined, FolderTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_LIST_REQUEST } from '../reducers/mainPosts_1001';\nimport { LOAD_USER_REQUEST } from '../reducers/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from '../utilComponent/isEmpty';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nvar mainPosts_1001 = function mainPosts_1001(_ref) {\n  _s();\n\n  var pages = _ref.pages;\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      mainPosts_1001 = _useSelector.mainPosts_1001,\n      pppp = _useSelector.pppp;\n  /*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\n\n\n  var _useState = useState(0),\n      nowPage = _useState[0],\n      setNowPage = _useState[1]; //현재 페이지\n\n\n  var _useState2 = useState(2),\n      postsPerPage = _useState2[0]; //한 페이지당 list 수 \n\n\n  var _useState3 = useState(5),\n      groupPage = _useState3[0],\n      setGroupPage = _useState3[1]; //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ... 5의 배수만 입력가능 \n\n\n  var _useState4 = useState([]),\n      nowGroupPageArray = _useState4[0],\n      setNowGroupPageArray = _useState4[1]; //현제 페이징 그룹 배열\n\n\n  var _useState5 = useState(0),\n      page = _useState5[0],\n      setPage = _useState5[1];\n\n  var pagenate = useCallback(function (pageNumber, groupPageArray) {\n    setNowPage(pageNumber);\n    nowGroupPageArray.length = 0;\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\n    console.log('nowGroupPageArray ==>', nowGroupPageArray);\n    var indexOfLastPost = pageNumber * postsPerPage;\n    var indexOfFirstPost = indexOfLastPost - postsPerPage;\n    dispatch({\n      type: MAINPOSTS_1001_LIST_REQUEST,\n      data: {\n        postFlag: '1001',\n        currentPage: indexOfFirstPost,\n        maxPage: postsPerPage\n      }\n    });\n  }, [nowPage, nowGroupPageArray]);\n  /*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\n\n  useEffect(function () {\n    //상세 정보 본 후 뒤로 가기 눌렀을 경우 \n    //페이지 이동후 뒤로가기 눌렀을 경우 \n    //페이지 첫 로드시.. \n    // if(!pages){\n    //   console.log('useEffect' , pages); \n    //   dispatch({\n    //     type:MAINPOSTS_1001_LIST_REQUEST, \n    //     data:{postFlag:'1001',\n    //           currentPage:nowPage,\n    //           maxPage:postsPerPage\n    //         }, \n    //   }); \n    // }else{\n    // }\n    console.log('pages exists!  ', pages);\n    setPage(pages);\n    var pageArray = [0, 1, 2, 3, 4];\n\n    if (pages - 1 % groupPage === 0 || nowPage >= groupPage + 1) {\n      console.log('으잌');\n      pageArray.length = 0;\n\n      for (var i = 0; i < groupPage; i++) {\n        pageArray.push(pages - 1 + i);\n      }\n\n      console.log('pageArray=>', pageArray);\n    }\n\n    pagenate(parseInt(pages), pageArray);\n  }, [pages]);\n\n  var abc = function abc() {\n    if (pages) {\n      pagenate(pages, [0, 1, 2]);\n    } else {\n      pagenate(2, [0, 1, 2]);\n    }\n  };\n\n  var gotoDetail = useCallback(function (postId, userNickName, postFlag) {\n    router.push({\n      pathname: '/detailPage',\n      query: {\n        postId: postId,\n        nickName: userNickName,\n        postFlag: postFlag\n      }\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"button\",\n    value: \"hello\",\n    onClick: abc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), __jsx(Link, {\n    href: {\n      query: {\n        nowPage: 2\n      }\n    },\n    onClick: abc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 52\n    }\n  }, \"abc\")), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, mainPosts_1001.map(function (v, i) {\n    return __jsx(\"div\", {\n      className: \"divTableRow\",\n      onClick: function onClick() {\n        return gotoDetail(v.postId, v.userNickName, '1001', nowPage);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    }, __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"divImageCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, __jsx(\"img\", {\n      src: \"https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 79\n      }\n    }))), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/detailPage',\n        query: {\n          postId: v.postId,\n          nickName: v.userNickName,\n          postFlag: '1001'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 50\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 155\n      }\n    }, isEmpty(v.title))), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 187\n      }\n    }), __jsx(LikeTwoTone, {\n      twoToneColor: \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }), \" : \", v.good, \" \", __jsx(DislikeTwoTone, {\n      twoToneColor: \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 68\n      }\n    }), \" : \", v.bad, \"  \", __jsx(EyeOutlined, {\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 120\n      }\n    }), \" : \", v.hit, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 156\n      }\n    }), __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }), \" \", isEmpty(v.userNickName), \"   \", __jsx(FieldTimeOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 64\n      }\n    }), \" \", custumDateFormat(v.createdDate), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 119\n      }\n    })));\n  })), __jsx(Pagenation, {\n    pagenate: pagenate,\n    dataLength: mainPosts_1001.length,\n    postsPerPage: postsPerPage,\n    nowPage: nowPage,\n    groupPage: groupPage,\n    groupPageArray: nowGroupPageArray,\n    pages: page,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(mainPosts_1001, \"caTm/pQ+4Q8WIxO6QHNuhLecJg4=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\nmainPosts_1001.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var pages;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pages = context.query.nowPage;\n            return _context.abrupt(\"return\", {\n              pages: pages\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default mainPosts_1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/mainPosts_1001.js"],"names":["React","useState","useEffect","useCallback","Router","useRouter","Link","Pagenation","DislikeTwoTone","LikeTwoTone","EyeOutlined","UserOutlined","FieldTimeOutlined","FolderTwoTone","MAINPOSTS_1001_LIST_REQUEST","LOAD_USER_REQUEST","useDispatch","useSelector","isEmpty","custumDateFormat","mainPosts_1001","pages","dispatch","router","state","pppp","nowPage","setNowPage","postsPerPage","groupPage","setGroupPage","nowGroupPageArray","setNowGroupPageArray","page","setPage","pagenate","pageNumber","groupPageArray","length","concat","console","log","indexOfLastPost","indexOfFirstPost","type","data","postFlag","currentPage","maxPage","pageArray","i","push","parseInt","abc","gotoDetail","postId","userNickName","pathname","query","nickName","map","v","title","good","bad","hit","createdDate","getInitialProps","context"],"mappings":"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","sourcesContent":["\r\nimport React , {useState,useEffect,useCallback}from 'react'\r\nimport Router ,{ useRouter } from 'next/router';\r\nimport Link from 'next/link'\r\nimport Pagenation from '../utilComponent/Pagenation'\r\nimport {DislikeTwoTone,LikeTwoTone ,EyeOutlined, UserOutlined, FieldTimeOutlined, FolderTwoTone} from '@ant-design/icons'\r\nimport \r\n    {MAINPOSTS_1001_LIST_REQUEST,} \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\n\r\nimport \r\n    {LOAD_USER_REQUEST,\r\n    } \r\nfrom '../reducers/auth'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport isEmpty from '../utilComponent/isEmpty';\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\n\r\nconst mainPosts_1001 = ({pages})=>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const router   = useRouter(); \r\n  const {mainPosts_1001,pppp} = useSelector((state)=>state.mainPosts_1001); \r\n\r\n\r\n  /*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\r\n  const [nowPage,setNowPage] = useState(0);                       //현재 페이지\r\n  const [postsPerPage] = useState(2);                             //한 페이지당 list 수 \r\n  const [groupPage , setGroupPage] = useState(5);                 //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ... 5의 배수만 입력가능 \r\n  const [nowGroupPageArray,setNowGroupPageArray] =useState([]);   //현제 페이징 그룹 배열\r\n  const [page,setPage] = useState(0); \r\n\r\n  const pagenate =useCallback((pageNumber, groupPageArray)=>{\r\n\r\n    setNowPage(pageNumber); \r\n    nowGroupPageArray.length=0; \r\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\r\n    console.log('nowGroupPageArray ==>',nowGroupPageArray); \r\n    const indexOfLastPost = pageNumber * postsPerPage;   \r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;  \r\n\r\n     dispatch({\r\n        type:MAINPOSTS_1001_LIST_REQUEST, \r\n        data:{postFlag:'1001',\r\n              currentPage:indexOfFirstPost,\r\n              maxPage:postsPerPage\r\n       }, \r\n    });\r\n\r\n},[nowPage,nowGroupPageArray]); \r\n/*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\r\n\r\n  useEffect(()=>{\r\n      //상세 정보 본 후 뒤로 가기 눌렀을 경우 \r\n      //페이지 이동후 뒤로가기 눌렀을 경우 \r\n      //페이지 첫 로드시.. \r\n        // if(!pages){\r\n        //   console.log('useEffect' , pages); \r\n        //   dispatch({\r\n        //     type:MAINPOSTS_1001_LIST_REQUEST, \r\n        //     data:{postFlag:'1001',\r\n        //           currentPage:nowPage,\r\n        //           maxPage:postsPerPage\r\n        //         }, \r\n        //   }); \r\n        // }else{\r\n\r\n        // }\r\n          console.log('pages exists!  ' ,pages );\r\n          setPage(pages);\r\n\r\n          let pageArray =[0,1,2,3,4]\r\n        \r\n          if( ((pages-1 % groupPage) === 0) || nowPage >=groupPage+1){\r\n            console.log('으잌'); \r\n            pageArray.length=0; \r\n            for(let i=0; i<groupPage; i++){\r\n              pageArray.push((pages-1)+i)\r\n             }\r\n            console.log('pageArray=>' , pageArray); \r\n          }\r\n\r\n          pagenate(parseInt(pages),pageArray);\r\n      \r\n  },[pages]); \r\n\r\n  \r\n  const abc = ()=>{\r\n    if(pages){\r\n      pagenate(pages,[0,1,2]);\r\n    }else{\r\n      pagenate(2,[0,1,2]); \r\n    }\r\n   \r\n  }\r\n  const gotoDetail = useCallback((postId,userNickName,postFlag)=>{\r\n    router.push({pathname:'/detailPage',\r\n                 query:{postId,nickName:userNickName,postFlag},\r\n              }); \r\n  },[])\r\n\r\n   return (\r\n    <div>\r\n    <input type=\"button\"  value=\"hello\" onClick={abc}></input>\r\n    <Link href={{query:{nowPage:2}}} onClick={abc}><a>abc</a></Link>\r\n      <div className=\"divTable\">\r\n            {mainPosts_1001.map((v,i)=>(\r\n               <div className='divTableRow' onClick={()=>gotoDetail(v.postId,v.userNickName,'1001',nowPage)}>\r\n                  <div className='divTableCell'><div className=\"divImageCell\"><img src='https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg' /></div></div>\r\n                  <div className=\"divTableCell\" ><Link href={{pathname:'/detailPage' , query:{postId:v.postId,nickName:v.userNickName,postFlag:'1001'}}} ><a>{isEmpty(v.title)}</a></Link><br/>\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {v.good} <DislikeTwoTone twoToneColor=\"#1ba640\"/> : {v.bad}  <EyeOutlined color=\"red\"/> : {v.hit}<br/>\r\n                  <UserOutlined /> {isEmpty(v.userNickName)}   <FieldTimeOutlined /> {custumDateFormat(v.createdDate)}<br />\r\n                  </div>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    \r\n      <Pagenation pagenate={pagenate} dataLength={mainPosts_1001.length} postsPerPage={postsPerPage} nowPage={nowPage} groupPage={groupPage} groupPageArray={nowGroupPageArray} pages={page}/>\r\n\r\n    </div>\r\n    );\r\n}; \r\n\r\nmainPosts_1001.getInitialProps = async (context) =>{\r\n\r\n  const pages = context.query.nowPage; \r\n  return {pages}; \r\n\r\n}\r\n\r\nexport default mainPosts_1001; "]},"metadata":{},"sourceType":"module"}