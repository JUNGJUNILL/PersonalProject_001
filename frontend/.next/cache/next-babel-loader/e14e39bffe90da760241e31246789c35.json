{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\mainPosts_1001.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Pagenation from '../utilComponent/Pagenation';\nimport { DislikeTwoTone, LikeTwoTone, EyeOutlined, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { MAINPOSTS_1001_LIST_REQUEST } from '../reducers/mainPosts_1001';\nimport { LOAD_USER_REQUEST } from '../reducers/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from '../utilComponent/isEmpty';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nconst mainPosts_1001 = ({\n  pages\n}) => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    mainPosts_1001\n  } = useSelector(state => state.mainPosts_1001);\n  /*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\n\n  const {\n    0: nowPage,\n    1: setNowPage\n  } = useState(0); //현재 페이지\n\n  const {\n    0: postsPerPage\n  } = useState(2); //한 페이지당 list 수 \n\n  const {\n    0: groupPage,\n    1: setGroupPage\n  } = useState(5); //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\n\n  const {\n    0: nowGroupPageArray,\n    1: setNowGroupPageArray\n  } = useState([]); //현제 페이징 그룹 배열\n\n  const pagenate = useCallback((pageNumber, groupPageArray) => {\n    console.log(pageNumber);\n    setNowPage(pageNumber);\n    nowGroupPageArray.length = 0;\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\n    console.log('nowGroupPageArray ==>', nowGroupPageArray);\n    const indexOfLastPost = pageNumber * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    dispatch({\n      type: MAINPOSTS_1001_LIST_REQUEST,\n      data: {\n        postFlag: '1001',\n        currentPage: indexOfFirstPost,\n        maxPage: postsPerPage\n      }\n    });\n  }, [nowPage, nowGroupPageArray]);\n  /*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\n\n  useEffect(() => {\n    console.log('pages=>', pages);\n\n    if (!pages) {\n      pagenate(pages, [0, 1, 2, 3, 4]);\n    } else {\n      dispatch({\n        type: MAINPOSTS_1001_LIST_REQUEST,\n        data: {\n          postFlag: '1001',\n          currentPage: nowPage,\n          maxPage: postsPerPage\n        }\n      });\n    } // dispatch({\n    //     type:LOAD_USER_REQUEST,\n    // }); \n\n  }, []);\n  const gotoDetail = useCallback((postId, userNickName, postFlag, param) => {\n    router.push({\n      pathname: '/detailPage',\n      query: {\n        postId,\n        nickName: userNickName,\n        postFlag\n      }\n    });\n  }, []);\n\n  const abc = () => {\n    alert('abc');\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, mainPosts_1001.map((v, i) => __jsx(\"div\", {\n    className: \"divTableRow\",\n    onClick: () => gotoDetail(v.postId, v.userNickName, '1001', nowPage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"divImageCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 49\n    }\n  }, __jsx(\"img\", {\n    src: \"https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 79\n    }\n  }))), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/detailPage',\n      query: {\n        postId: v.postId,\n        nickName: v.userNickName,\n        postFlag: '1001'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 50\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 155\n    }\n  }, isEmpty(v.title))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 187\n    }\n  }), __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }), \" : \", v.good, \" \", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 68\n    }\n  }), \" : \", v.bad, \"  \", __jsx(EyeOutlined, {\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 120\n    }\n  }), \" : \", v.hit, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 156\n    }\n  }), __jsx(UserOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }), \" \", isEmpty(v.userNickName), \"   \", __jsx(FieldTimeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 64\n    }\n  }), \" \", custumDateFormat(v.createdDate), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 119\n    }\n  }))))), __jsx(Pagenation, {\n    pagenate: pagenate,\n    dataLength: mainPosts_1001.length,\n    postsPerPage: postsPerPage,\n    nowPage: nowPage,\n    groupPage: groupPage,\n    groupPageArray: nowGroupPageArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }));\n};\n\nmainPosts_1001.getInitialProps = async context => {\n  const pages = context.query.nowPage;\n  console.log('getInitialProps pages ==>', pages);\n  return {\n    pages\n  };\n};\n\nexport default mainPosts_1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/mainPosts_1001.js"],"names":["React","useState","useEffect","useCallback","Router","useRouter","Link","Pagenation","DislikeTwoTone","LikeTwoTone","EyeOutlined","UserOutlined","FieldTimeOutlined","MAINPOSTS_1001_LIST_REQUEST","LOAD_USER_REQUEST","useDispatch","useSelector","isEmpty","custumDateFormat","mainPosts_1001","pages","dispatch","router","state","nowPage","setNowPage","postsPerPage","groupPage","setGroupPage","nowGroupPageArray","setNowGroupPageArray","pagenate","pageNumber","groupPageArray","console","log","length","concat","indexOfLastPost","indexOfFirstPost","type","data","postFlag","currentPage","maxPage","gotoDetail","postId","userNickName","param","push","pathname","query","nickName","abc","alert","map","v","i","title","good","bad","hit","createdDate","getInitialProps","context"],"mappings":"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","sourcesContent":["\r\nimport React , {useState,useEffect,useCallback}from 'react'\r\nimport Router ,{ useRouter } from 'next/router';\r\nimport Link from 'next/link'\r\nimport Pagenation from '../utilComponent/Pagenation'\r\nimport {DislikeTwoTone,LikeTwoTone ,EyeOutlined, UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport \r\n    {MAINPOSTS_1001_LIST_REQUEST,} \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\n\r\nimport \r\n    {LOAD_USER_REQUEST,\r\n    } \r\nfrom '../reducers/auth'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport isEmpty from '../utilComponent/isEmpty';\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\n\r\nconst mainPosts_1001 = ({pages})=>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const router   = useRouter(); \r\n  const {mainPosts_1001} = useSelector((state)=>state.mainPosts_1001); \r\n\r\n\r\n  /*-------------------------------------------페이징 처리 로직 start-------------------------------------------------------*/\r\n  const [nowPage,setNowPage] = useState(0);                       //현재 페이지\r\n  const [postsPerPage] = useState(2);                             //한 페이지당 list 수 \r\n  const [groupPage , setGroupPage] = useState(5);                 //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\r\n  const [nowGroupPageArray,setNowGroupPageArray] =useState([]);   //현제 페이징 그룹 배열\r\n\r\n  const pagenate =useCallback((pageNumber, groupPageArray)=>{\r\n    console.log(pageNumber); \r\n    setNowPage(pageNumber); \r\n    nowGroupPageArray.length=0; \r\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\r\n    console.log('nowGroupPageArray ==>',nowGroupPageArray); \r\n    const indexOfLastPost = pageNumber * postsPerPage;   \r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;  \r\n\r\n    dispatch({\r\n      type:MAINPOSTS_1001_LIST_REQUEST, \r\n      data:{postFlag:'1001',\r\n            currentPage:indexOfFirstPost,\r\n            maxPage:postsPerPage\r\n     }, \r\n\r\n     \r\n  });\r\n\r\n},[nowPage,nowGroupPageArray]); \r\n/*-------------------------------------------페이징 처리 로직   end-------------------------------------------------------*/\r\n\r\n  useEffect(()=>{\r\n    \r\n    console.log('pages=>',pages); \r\n\r\n    if(!pages){\r\n      pagenate(pages,[0,1,2,3,4]); \r\n    }else{\r\n      dispatch({\r\n        type:MAINPOSTS_1001_LIST_REQUEST, \r\n        data:{postFlag:'1001',\r\n              currentPage:nowPage,\r\n              maxPage:postsPerPage\r\n            }, \r\n  }); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n    // dispatch({\r\n    //     type:LOAD_USER_REQUEST,\r\n    // }); \r\n  },[]); \r\n\r\n\r\n  const gotoDetail = useCallback((postId,userNickName,postFlag,param)=>{\r\n    router.push({pathname:'/detailPage',\r\n                 query:{postId,nickName:userNickName,postFlag},\r\n              }); \r\n  },[])\r\n  const abc =()=>{\r\n    alert('abc'); \r\n  }\r\n\r\n\r\n\r\n   return (\r\n    <div>\r\n      <div className=\"divTable\">\r\n            {mainPosts_1001.map((v,i)=>(\r\n               <div className='divTableRow' onClick={()=>gotoDetail(v.postId,v.userNickName,'1001',nowPage)}>\r\n                  <div className='divTableCell'><div className=\"divImageCell\"><img src='https://dimg.donga.com/wps/NEWS/IMAGE/2019/11/24/98510015.1.jpg' /></div></div>\r\n                  <div className=\"divTableCell\" ><Link href={{pathname:'/detailPage' , query:{postId:v.postId,nickName:v.userNickName,postFlag:'1001'}}} ><a>{isEmpty(v.title)}</a></Link><br/>\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {v.good} <DislikeTwoTone twoToneColor=\"#1ba640\"/> : {v.bad}  <EyeOutlined color=\"red\"/> : {v.hit}<br/>\r\n                  <UserOutlined /> {isEmpty(v.userNickName)}   <FieldTimeOutlined /> {custumDateFormat(v.createdDate)}<br />\r\n                  </div>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    \r\n\r\n        <Pagenation pagenate={pagenate} dataLength={mainPosts_1001.length} postsPerPage={postsPerPage} nowPage={nowPage} groupPage={groupPage} groupPageArray={nowGroupPageArray} />\r\n\r\n    </div>\r\n    );\r\n}; \r\n\r\nmainPosts_1001.getInitialProps = async (context) =>{\r\n\r\n  const pages = context.query.nowPage; \r\n  console.log('getInitialProps pages ==>', pages); \r\n\r\n  return {pages}; \r\n\r\n}\r\n\r\nexport default mainPosts_1001; "]},"metadata":{},"sourceType":"module"}