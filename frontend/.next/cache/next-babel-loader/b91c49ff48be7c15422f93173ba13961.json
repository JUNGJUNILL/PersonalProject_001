{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaMainPosts_1001List),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchMainPosts_1001),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sagaMainPosts_1001Detail),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchMainPosts_1001Detail),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(sagaMainPosts_1001CommentList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchMainPosts_1001CommentList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(sagaMainPosts_1001CommentInsert),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchMainPosts_1001CommentInsert),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(sagaMainPosts_1001CommentLike),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchMainPosts_1001CommentLike),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(mainPosts_1001Saga);\n\nimport axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { MAINPOSTS_1001_LIST_REQUEST, MAINPOSTS_1001_LIST_SUCCESS, MAINPOSTS_1001_LIST_FAILURE, MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_DETAIL_INFO_SUCCESS, MAINPOSTS_1001_DETAIL_INFO_FAILURE, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTS_SUCCESS, MAINPOSTS_1001_COMMENTS_FAILURE, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTINSERT_SUCCESS, MAINPOSTS_1001_COMMENTINSERT_FAILURE, MAINPOSTS_1001_COMMENTLIKE_REQUEST, MAINPOSTS_1001_COMMENTLIKE_SUCCESS, MAINPOSTS_1001_COMMENTLIKE_FAILURE } from '../reducers/mainPosts_1001'; //mainPost_1001 리스트 \n//-----------------------------------------------------------------------------------\n\nfunction APImainPosts_1001List(data) {\n  return axios.post('/mainPosts_1001', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c = APImainPosts_1001List;\n\nfunction sagaMainPosts_1001List(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaMainPosts_1001List$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(APImainPosts_1001List, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: MAINPOSTS_1001_LIST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 14;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          alert('error', _context.t0);\n          _context.next = 14;\n          return put({\n            type: MAINPOSTS_1001_LIST_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchMainPosts_1001() {\n  return _regeneratorRuntime.wrap(function watchMainPosts_1001$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(MAINPOSTS_1001_LIST_REQUEST, sagaMainPosts_1001List);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 상세정보 \n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001Detail(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001Detail', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c2 = APImainPosts_1001Detail;\n\nfunction sagaMainPosts_1001Detail(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaMainPosts_1001Detail$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(APImainPosts_1001Detail, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: MAINPOSTS_1001_DETAIL_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 14;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          alert('error', _context3.t0);\n          _context3.next = 14;\n          return put({\n            type: MAINPOSTS_1001_DETAIL_INFO_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchMainPosts_1001Detail() {\n  return _regeneratorRuntime.wrap(function watchMainPosts_1001Detail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(MAINPOSTS_1001_DETAIL_INFO_REQUEST, sagaMainPosts_1001Detail);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 상세 정보 댓글 리스트\n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentList(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001Comments', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c3 = APImainPosts_1001CommentList;\n\nfunction sagaMainPosts_1001CommentList(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaMainPosts_1001CommentList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(APImainPosts_1001CommentList, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: MAINPOSTS_1001_COMMENTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 14;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          alert('error', _context5.t0);\n          _context5.next = 14;\n          return put({\n            type: MAINPOSTS_1001_COMMENTS_FAILURE,\n            error: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchMainPosts_1001CommentList() {\n  return _regeneratorRuntime.wrap(function watchMainPosts_1001CommentList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(MAINPOSTS_1001_COMMENTS_REQUEST, sagaMainPosts_1001CommentList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 댓글 입력\n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentInsert(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001CommentInsert', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c4 = APImainPosts_1001CommentInsert;\n\nfunction sagaMainPosts_1001CommentInsert(action) {\n  var result, array;\n  return _regeneratorRuntime.wrap(function sagaMainPosts_1001CommentInsert$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(APImainPosts_1001CommentInsert, action.data);\n\n        case 3:\n          result = _context7.sent;\n          array = [];\n          result.data.map(function (v, i) {\n            result.data[0].kk = 'addComment';\n            array.push(v);\n          });\n          _context7.next = 8;\n          return put({\n            type: MAINPOSTS_1001_COMMENTINSERT_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context7.next = 16;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          alert('error', _context7.t0);\n          _context7.next = 16;\n          return put({\n            type: MAINPOSTS_1001_COMMENTINSERT_FAILURE,\n            error: _context7.t0\n          });\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction watchMainPosts_1001CommentInsert() {\n  return _regeneratorRuntime.wrap(function watchMainPosts_1001CommentInsert$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(MAINPOSTS_1001_COMMENTINSERT_REQUEST, sagaMainPosts_1001CommentInsert);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} //-----------------------------------------------------------------------------------\n//mainPost_1001 댓글 LIKE / DISLIKE \n//-----------------------------------------------------------------------------------\n\n\nfunction APImainPosts_1001CommentLike(data) {\n  return axios.post('/mainPosts_1001/mainPosts_1001CommentLike', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c5 = APImainPosts_1001CommentLike;\n\nfunction sagaMainPosts_1001CommentLike(action) {\n  var result, obj;\n  return _regeneratorRuntime.wrap(function sagaMainPosts_1001CommentLike$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(APImainPosts_1001CommentLike, action.data);\n\n        case 3:\n          result = _context9.sent;\n          // console.log('스트감 mainPosts_1001Comments=>' , action.data.mainPosts_1001Comments,'commentid=>' , action.data.commentid); \n          action.data.mainPosts_1001Comments.map(function (v, i) {\n            if (v.commentId === action.data.commentid) {\n              action.data.mainPosts_1001Comments[i] = _objectSpread(_objectSpread({}, mainPosts_1001Comments[i]), {}, {\n                clickedComponent: action.data.commentid,\n                flag: 'Y',\n                likeDislikeflag: action.data.flag\n              });\n            }\n          });\n          console.log('action.data.mainPosts_1001Comments=>', action.data.mainPosts_1001Comments);\n          obj = [{\n            clickCommentId: result.data,\n            likeDisLikeFlag: action.data.flag\n          }];\n          _context9.next = 9;\n          return put({\n            type: MAINPOSTS_1001_COMMENTLIKE_SUCCESS,\n            data: obj\n          });\n\n        case 9:\n          _context9.next = 17;\n          break;\n\n        case 11:\n          _context9.prev = 11;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          alert('error', _context9.t0);\n          _context9.next = 17;\n          return put({\n            type: MAINPOSTS_1001_COMMENTLIKE_FAILURE,\n            error: _context9.t0\n          });\n\n        case 17:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 11]]);\n}\n\nfunction watchMainPosts_1001CommentLike() {\n  return _regeneratorRuntime.wrap(function watchMainPosts_1001CommentLike$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(MAINPOSTS_1001_COMMENTLIKE_REQUEST, sagaMainPosts_1001CommentLike);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} //-----------------------------------------------------------------------------------\n\n\nexport default function mainPosts_1001Saga() {\n  return _regeneratorRuntime.wrap(function mainPosts_1001Saga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchMainPosts_1001), fork(watchMainPosts_1001Detail), fork(watchMainPosts_1001CommentList), fork(watchMainPosts_1001CommentInsert), fork(watchMainPosts_1001CommentLike)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"APImainPosts_1001List\");\n$RefreshReg$(_c2, \"APImainPosts_1001Detail\");\n$RefreshReg$(_c3, \"APImainPosts_1001CommentList\");\n$RefreshReg$(_c4, \"APImainPosts_1001CommentInsert\");\n$RefreshReg$(_c5, \"APImainPosts_1001CommentLike\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/sagas/mainPosts_1001Saga.js"],"names":["sagaMainPosts_1001List","watchMainPosts_1001","sagaMainPosts_1001Detail","watchMainPosts_1001Detail","sagaMainPosts_1001CommentList","watchMainPosts_1001CommentList","sagaMainPosts_1001CommentInsert","watchMainPosts_1001CommentInsert","sagaMainPosts_1001CommentLike","watchMainPosts_1001CommentLike","mainPosts_1001Saga","axios","all","fork","takeLatest","takeEvery","put","delay","call","MAINPOSTS_1001_LIST_REQUEST","MAINPOSTS_1001_LIST_SUCCESS","MAINPOSTS_1001_LIST_FAILURE","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_DETAIL_INFO_SUCCESS","MAINPOSTS_1001_DETAIL_INFO_FAILURE","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTS_SUCCESS","MAINPOSTS_1001_COMMENTS_FAILURE","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTINSERT_SUCCESS","MAINPOSTS_1001_COMMENTINSERT_FAILURE","MAINPOSTS_1001_COMMENTLIKE_REQUEST","MAINPOSTS_1001_COMMENTLIKE_SUCCESS","MAINPOSTS_1001_COMMENTLIKE_FAILURE","APImainPosts_1001List","data","post","withCredentials","action","result","type","console","error","alert","APImainPosts_1001Detail","APImainPosts_1001CommentList","APImainPosts_1001CommentInsert","array","map","v","i","kk","push","APImainPosts_1001CommentLike","mainPosts_1001Comments","commentId","commentid","clickedComponent","flag","likeDislikeflag","log","obj","clickCommentId","likeDisLikeFlag"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {\r\n        MAINPOSTS_1001_LIST_REQUEST,\r\n        MAINPOSTS_1001_LIST_SUCCESS,\r\n        MAINPOSTS_1001_LIST_FAILURE,    \r\n\r\n        MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n        MAINPOSTS_1001_DETAIL_INFO_SUCCESS,\r\n        MAINPOSTS_1001_DETAIL_INFO_FAILURE,\r\n\r\n        MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        MAINPOSTS_1001_COMMENTS_SUCCESS, \r\n        MAINPOSTS_1001_COMMENTS_FAILURE, \r\n\r\n        MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n        MAINPOSTS_1001_COMMENTINSERT_SUCCESS,\r\n        MAINPOSTS_1001_COMMENTINSERT_FAILURE, \r\n\r\n        MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n        MAINPOSTS_1001_COMMENTLIKE_SUCCESS,\r\n        MAINPOSTS_1001_COMMENTLIKE_FAILURE,\r\n\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\n\r\n\r\n//mainPost_1001 리스트 \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001List(data){\r\n    return axios.post('/mainPosts_1001',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaMainPosts_1001List(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001List,action.data);  \r\n      yield  put({\r\n            type:MAINPOSTS_1001_LIST_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchMainPosts_1001(){\r\n    yield takeLatest(MAINPOSTS_1001_LIST_REQUEST,sagaMainPosts_1001List); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//mainPost_1001 상세정보 \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001Detail(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001Detail',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaMainPosts_1001Detail(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001Detail,action.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_DETAIL_INFO_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_DETAIL_INFO_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchMainPosts_1001Detail(){\r\n    yield takeLatest(MAINPOSTS_1001_DETAIL_INFO_REQUEST,sagaMainPosts_1001Detail); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//mainPost_1001 상세 정보 댓글 리스트\r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentList(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001Comments',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentList(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentList,action.data); \r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTS_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTS_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentList(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTS_REQUEST,sagaMainPosts_1001CommentList); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//mainPost_1001 댓글 입력\r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentInsert(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001CommentInsert',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentInsert(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentInsert,action.data); \r\n      const array=[]; \r\n      result.data.map((v,i)=>{\r\n        result.data[0].kk='addComment'; \r\n        array.push(v); \r\n      }); \r\n      \r\n\r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentInsert(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTINSERT_REQUEST,sagaMainPosts_1001CommentInsert); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//mainPost_1001 댓글 LIKE / DISLIKE \r\n//-----------------------------------------------------------------------------------\r\nfunction APImainPosts_1001CommentLike(data){\r\n    return axios.post('/mainPosts_1001/mainPosts_1001CommentLike',{data},{withCredentials:true})\r\n}\r\n\r\n\r\nfunction* sagaMainPosts_1001CommentLike(action){\r\n\r\n    try{\r\n      const result = yield call(APImainPosts_1001CommentLike,action.data); \r\n       // console.log('스트감 mainPosts_1001Comments=>' , action.data.mainPosts_1001Comments,'commentid=>' , action.data.commentid); \r\n     \r\n        action.data.mainPosts_1001Comments.map((v,i)=>{\r\n            if(v.commentId === action.data.commentid){\r\n                action.data.mainPosts_1001Comments[i] = {...mainPosts_1001Comments[i], \r\n                                                            clickedComponent:action.data.commentid,\r\n                                                            flag:'Y', \r\n                                                            likeDislikeflag:action.data.flag}\r\n            }\r\n        }); \r\n        console.log('action.data.mainPosts_1001Comments=>' , action.data.mainPosts_1001Comments); \r\n        const obj = [{clickCommentId:result.data , likeDisLikeFlag:action.data.flag }]\r\n    \r\n      yield  put({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_SUCCESS, \r\n            data:obj, \r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\n\r\nfunction* watchMainPosts_1001CommentLike(){\r\n    yield takeLatest(MAINPOSTS_1001_COMMENTLIKE_REQUEST,sagaMainPosts_1001CommentLike); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nexport default function* mainPosts_1001Saga(){\r\n\r\n    yield all([\r\n        fork(watchMainPosts_1001), \r\n        fork(watchMainPosts_1001Detail), \r\n        fork(watchMainPosts_1001CommentList), \r\n        fork(watchMainPosts_1001CommentInsert), \r\n        fork(watchMainPosts_1001CommentLike), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}