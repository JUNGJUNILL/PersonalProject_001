{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\detailPage.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST } from '../reducers/mainPosts_1001';\nimport { DislikeTwoTone, LikeTwoTone, EyeOutlined, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nconst detailPage = ({\n  nickName,\n  postFlag,\n  postId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n  const {\n    mainPosts_1001Info,\n    mainPosts_1001Comments\n  } = useSelector(state => state.mainPosts_1001);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  const array = [{\n    commentId: 'C1000001',\n    postFlag: '1001',\n    postId: '10000013',\n    content: '와우01',\n    createdDate: '20200921',\n    good: '11',\n    bad: '1'\n  }, {\n    commentId: 'C1000002',\n    postFlag: '1001',\n    postId: '10000013',\n    content: '와우02',\n    createdDate: '20200922',\n    good: '12',\n    bad: '2'\n  }, {\n    commentId: 'C1000003',\n    postFlag: '1001',\n    postId: '10000013',\n    content: '와우03',\n    createdDate: '20200923',\n    good: '13',\n    bad: '3'\n  }, {\n    commentId: 'C1000004',\n    postFlag: '1001',\n    postId: '10000013',\n    content: '와우04',\n    createdDate: '20200924',\n    good: '14',\n    bad: '4'\n  }, {\n    commentId: 'C1000005',\n    postFlag: '1001',\n    postId: '10000013',\n    content: '와우05',\n    createdDate: '20200925',\n    good: '15',\n    bad: '5'\n  }];\n  const onChageComment = useCallback(e => {\n    if (comment.length === 10) {\n      alert('10자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  useEffect(() => {\n    //상세 정보 \n    dispatch({\n      type: MAINPOSTS_1001_DETAIL_INFO_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag\n      }\n    }); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag\n      }\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCellTh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, mainPosts_1001Info[0].title, \" [\", mainPosts_1001Comments.length, \"]\")), __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(UserOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }), \"  \", mainPosts_1001Info[0].userNickName, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 73\n    }\n  }), __jsx(FieldTimeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }), \"  \", custumDateFormat(mainPosts_1001Info[0].createdDate), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 95\n    }\n  }), __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), \" : \", mainPosts_1001Info[0].good, \" \", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 88\n    }\n  }), \" : \", mainPosts_1001Info[0].bad))), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: mainPosts_1001Info[0].content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })), \"\\xA0\\xA0\", __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 77\n    }\n  }, __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 85\n    }\n  })))), __jsx(\"textarea\", {\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: comment.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\"), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, mainPosts_1001Comments.map((v, i) => __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, v.userNickName), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 32\n    }\n  }), custumDateFormat(v.createdDate), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 42\n    }\n  }), v.comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 20\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), \"\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 60\n    }\n  }), \"\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 112\n    }\n  })))))));\n};\n\ndetailPage.getInitialProps = async context => {\n  const postId = context.query.postId;\n  const nickName = context.query.nickName;\n  const postFlag = context.query.postFlag;\n  return {\n    nickName,\n    postFlag,\n    postId\n  };\n};\n\nexport default detailPage;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/detailPage.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","DislikeTwoTone","LikeTwoTone","EyeOutlined","UserOutlined","FieldTimeOutlined","Button","custumDateFormat","detailPage","nickName","postFlag","postId","dispatch","comment","setComment","mainPosts_1001Info","mainPosts_1001Comments","state","mainPosts_1001","userInfo","auth","array","commentId","content","createdDate","good","bad","onChageComment","e","length","alert","target","value","type","data","marginTop","title","userNickName","width","height","border","borderColor","display","justifyContent","alignItems","__html","margin","float","map","v","i","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\nimport {DislikeTwoTone,LikeTwoTone ,EyeOutlined, UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport {Button} from 'antd'\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\nconst detailPage  = ({nickName,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const [comment, setComment] = useState(''); \r\n\r\n  const {mainPosts_1001Info , mainPosts_1001Comments} = useSelector((state)=>state.mainPosts_1001); \r\n  const {userInfo}                                    = useSelector((state)=>state.auth);\r\n\r\n\r\n  const array = [{commentId:'C1000001',postFlag:'1001',postId:'10000013',content:'와우01',createdDate:'20200921',good:'11',bad:'1'},\r\n                {commentId:'C1000002',postFlag:'1001',postId:'10000013',content:'와우02',createdDate:'20200922',good:'12',bad:'2'},\r\n                {commentId:'C1000003',postFlag:'1001',postId:'10000013',content:'와우03',createdDate:'20200923',good:'13',bad:'3'},\r\n                {commentId:'C1000004',postFlag:'1001',postId:'10000013',content:'와우04',createdDate:'20200924',good:'14',bad:'4'},\r\n                {commentId:'C1000005',postFlag:'1001',postId:'10000013',content:'와우05',createdDate:'20200925',good:'15',bad:'5'},\r\n                ]\r\n\r\n  const onChageComment =useCallback((e)=>{\r\n    if(comment.length ===10){\r\n      alert('10자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n\r\n   useEffect(()=>{\r\n  \r\n    //상세 정보 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n          }\r\n    });\r\n\r\n    //댓글 리스트 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n          }\r\n    }); \r\n\r\n  },[]); \r\n\r\n    return (\r\n    <>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n      <div className='divTable' style={{marginTop:'3%'}}>\r\n            <div className='divTableRowTh'>\r\n                <div className='divTableCellTh'>{mainPosts_1001Info[0].title} [{mainPosts_1001Comments.length}]</div>\r\n           </div>\r\n           <div className='divTableRow'>\r\n                <div className='divTableCell'>\r\n                  <UserOutlined />  {mainPosts_1001Info[0].userNickName}<br />\r\n                  <FieldTimeOutlined />  {custumDateFormat(mainPosts_1001Info[0].createdDate)}<br />\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].good} <DislikeTwoTone twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].bad} \r\n                </div>\r\n           </div>\r\n      </div>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n\r\n      <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n         광고입니다.\r\n      </div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",marginTop:\"1%\"}}>\r\n        <div dangerouslySetInnerHTML={{__html:mainPosts_1001Info[0].content}}/>\r\n     </div> \r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}   \r\n    \r\n\r\n\r\n\r\n\r\n    <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n      광고입니다.\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n     {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n    <div className='divTable'>\r\n      <div className='divTableRowTh' style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n          <Button><LikeTwoTone twoToneColor=\"#1ba640\"/></Button>&nbsp;&nbsp;<Button><DislikeTwoTone twoToneColor=\"#1ba640\"/></Button>\r\n      </div>\r\n    </div>\r\n    {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n\r\n\r\n    <textarea style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} />\r\n    <input type=\"text\" value={comment.length}/>\r\n    <Button type=\"primary\" style={{margin:\"1%\",display:\"block\",float:\"right\"}}>댓글달기</Button>\r\n  \r\n\r\n   {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n   <div className=\"divTable\">\r\n   {mainPosts_1001Comments.map((v,i)=>(\r\n   <div className='divTableRow' >\r\n      <div className=\"divTableCell\">\r\n        <b>{v.userNickName}</b><br/>\r\n        {custumDateFormat(v.createdDate)}<br/>\r\n        {v.comment}<br />\r\n        답글 [9]\r\n        <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n          <LikeTwoTone twoToneColor=\"#1ba640\"/>&nbsp;&nbsp;<DislikeTwoTone twoToneColor=\"#1ba640\"/>&nbsp;&nbsp;<br />\r\n        </div>\r\n      </div>\r\n   </div>\r\n   \r\n   ))}\r\n   </div>\r\n   {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n\r\n    </>\r\n        )\r\n}\r\n\r\n\r\ndetailPage.getInitialProps = async (context) =>{\r\n\r\n  const postId   = context.query.postId; \r\n  const nickName = context.query.nickName; \r\n  const postFlag = context.query.postFlag; \r\n  return {nickName,postFlag,postId}; \r\n}\r\nexport default detailPage; "]},"metadata":{},"sourceType":"module"}