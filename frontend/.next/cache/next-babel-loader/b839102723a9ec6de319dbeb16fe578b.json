{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\detailPage.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../reducers/mainPosts_1001';\nimport { DislikeTwoTone, LikeTwoTone, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nvar detailPage = function detailPage(_ref) {\n  _s();\n\n  var nickName = _ref.nickName,\n      postFlag = _ref.postFlag,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n  var ref = createRef();\n\n  var _useState = useState(function () {\n    return createRef();\n  }),\n      testRef = _useState[0],\n      setTestRef = _useState[1];\n\n  var _useState2 = useState(''),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var _useState3 = useState(false),\n      like = _useState3[0],\n      setLike = _useState3[1];\n\n  var blank_pattern = /^\\s+|\\s+&/g;\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      mainPosts_1001Info = _useSelector.mainPosts_1001Info,\n      mainPosts_1001Comments = _useSelector.mainPosts_1001Comments,\n      commentLikeDislikeFlag = _useSelector.commentLikeDislikeFlag;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    //상세 정보 \n    dispatch({\n      type: MAINPOSTS_1001_DETAIL_INFO_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag\n      }\n    }); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag,\n        who: userInfo\n      }\n    });\n  }, []); //댓글 입력 textArea \n\n  var onChageComment = useCallback(function (e) {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]); //댓글 입력 insert \n\n  var insertComment = function insertComment(e) {\n    if (comment.length === 0 || comment.replace(blank_pattern, '') === \"\") {\n      ref.current.focus();\n      alert('댓글을 입력해 주세요!');\n      return;\n    }\n\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    } //댓글 입력\n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTINSERT_REQUEST,\n      data: {\n        postId: postId,\n        postFlag: postFlag,\n        nickName: nickName,\n        comment: comment\n      }\n    });\n    setComment(''); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag,\n        who: userInfo\n      }\n    });\n  };\n\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      setLike(true); //댓글 좋아요!\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName\n        }\n      });\n    } //댓글 리스트 \n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag,\n        who: userInfo\n      }\n    });\n    alert(\"\".concat(likeDislike));\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCellTh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, mainPosts_1001Info[0].title, \" [\", mainPosts_1001Comments.length, \"]\")), __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(UserOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }), \"  \", mainPosts_1001Info[0].userNickName, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 73\n    }\n  }), __jsx(FieldTimeOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }), \"  \", custumDateFormat(mainPosts_1001Info[0].createdDate), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 95\n    }\n  }), __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }), \" : \", mainPosts_1001Info[0].good, \" \", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 88\n    }\n  }), \" : \", mainPosts_1001Info[0].bad))), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: mainPosts_1001Info[0].content\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  })), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 90\n    }\n  }, __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 98\n    }\n  })))), __jsx(\"textarea\", {\n    value: comment,\n    ref: ref,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: insertComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, mainPosts_1001Comments.map(function (v, i) {\n    return __jsx(\"div\", {\n      className: \"divTableRow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, v.userNickName), \" \\xA0 \", __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 42\n      }\n    }, custumDateFormat(v.createdDate)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 90\n      }\n    }), v.comment, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 22\n      }\n    }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"R\" + i + \"C01\",\n      value: v.commentId,\n      readOnly: true,\n      style: {\n        color: \"#00c234\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: \"1%\",\n        display: \"block\",\n        \"float\": \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, __jsx(LikeTwoTone, {\n      onClick: function onClick() {\n        return likeBtn(v.commentId, v.flag, 'good');\n      },\n      ref: testRef,\n      twoToneColor: like ? \"#00c234\" : \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), v.good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n      onClick: function onClick() {\n        return likeBtn(v.commentId, v.flag, 'bad');\n      },\n      twoToneColor: \"#1ba640\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 165\n      }\n    }), v.bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 284\n      }\n    }))));\n  })));\n};\n\n_s(detailPage, \"vTYelYgZpwOmuA5csvX8EpKeHWI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\ndetailPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var postId, nickName, postFlag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postId = context.query.postId;\n            nickName = context.query.nickName;\n            postFlag = context.query.postFlag;\n            return _context.abrupt(\"return\", {\n              nickName: nickName,\n              postFlag: postFlag,\n              postId: postId\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default detailPage;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/detailPage.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","DislikeTwoTone","LikeTwoTone","UserOutlined","FieldTimeOutlined","Button","custumDateFormat","detailPage","nickName","postFlag","postId","dispatch","ref","testRef","setTestRef","comment","setComment","like","setLike","blank_pattern","state","mainPosts_1001","mainPosts_1001Info","mainPosts_1001Comments","commentLikeDislikeFlag","auth","userInfo","type","data","who","onChageComment","e","length","alert","target","value","insertComment","replace","current","focus","likeBtn","commentid","flag","likeDislike","marginTop","title","userNickName","createdDate","good","bad","width","height","border","borderColor","display","justifyContent","alignItems","__html","content","margin","map","v","i","commentId","color","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\nimport {DislikeTwoTone,LikeTwoTone , UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport {Button} from 'antd'\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\nconst detailPage  = ({nickName,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const ref = createRef(); \r\n  const [testRef,setTestRef] = useState(()=>createRef()); \r\n  const [comment, setComment] = useState(''); \r\n  const [like , setLike]  = useState(false); \r\n  const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n  const {mainPosts_1001Info , mainPosts_1001Comments,commentLikeDislikeFlag} = useSelector((state)=>state.mainPosts_1001); \r\n  const {userInfo}                                    = useSelector((state)=>state.auth);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    //상세 정보 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n          }\r\n    });\r\n\r\n    //댓글 리스트 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n            who:userInfo, \r\n          }\r\n    }); \r\n\r\n  },[]); \r\n\r\n\r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n\r\n\r\n  //댓글 입력 insert \r\n  const insertComment = (e)=>{\r\n\r\n    if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n      ref.current.focus();  \r\n      alert('댓글을 입력해 주세요!'); \r\n      return; \r\n    }\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n      \r\n      //댓글 입력\r\n      dispatch({\r\n        type:MAINPOSTS_1001_COMMENTINSERT_REQUEST, \r\n        data:{\r\n          postId,\r\n          postFlag,\r\n          nickName,\r\n          comment,\r\n        }\r\n    });\r\n\r\n    setComment(''); \r\n\r\n    //댓글 리스트 \r\n      dispatch({\r\n        type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        data:{\r\n          postId,\r\n          nickName,\r\n          postFlag,\r\n          who:userInfo,\r\n        }\r\n    }); \r\n  };\r\n\r\n  \r\n  const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n    if(!userInfo){\r\n      alert('로그인이 필요한 서비스 입니다.'); \r\n      return;\r\n    }\r\n  \r\n    //alert(`${commentid},${flag},${likeDislike}`)\r\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n\r\n    if(flag === \"Y\"){\r\n      alert('이미 좋아요! 싫어요! 했습니다.'); \r\n      return; \r\n\r\n    }else{\r\n      setLike(true); \r\n      //댓글 좋아요!\r\n      dispatch({\r\n        type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n        data:{\r\n          commentid,\r\n          postFlag,\r\n          postId,\r\n          flag: likeDislike ,\r\n          who: userInfo,\r\n          nickName,\r\n        }\r\n    }); \r\n\r\n    }\r\n\r\n    //댓글 리스트 \r\n    dispatch({\r\n      type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n      data:{\r\n        postId,\r\n        nickName,\r\n        postFlag,\r\n        who:userInfo, \r\n      }\r\n  }); \r\n   alert(`${likeDislike}`); \r\n  \r\n  },[]); \r\n\r\n  \r\n\r\n    return (\r\n    <>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n      <div className='divTable' style={{marginTop:'3%'}}>\r\n            <div className='divTableRowTh'>\r\n                <div className='divTableCellTh'>{mainPosts_1001Info[0].title} [{mainPosts_1001Comments.length}]</div>\r\n           </div>\r\n           <div className='divTableRow'>\r\n                <div className='divTableCell'>\r\n                  <UserOutlined />  {mainPosts_1001Info[0].userNickName}<br />\r\n                  <FieldTimeOutlined />  {custumDateFormat(mainPosts_1001Info[0].createdDate)}<br />\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].good} <DislikeTwoTone  twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].bad} \r\n                </div>\r\n           </div>\r\n      </div>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n\r\n      <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n         광고입니다.\r\n      </div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",marginTop:\"1%\"}}>\r\n        <div dangerouslySetInnerHTML={{__html:mainPosts_1001Info[0].content}}/>\r\n     </div> \r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}   \r\n    \r\n\r\n\r\n\r\n\r\n    <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n      광고입니다.\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n     {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n    <div className='divTable'>\r\n      <div className='divTableRowTh' style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n          <Button><LikeTwoTone  twoToneColor=\"#1ba640\"/></Button>&nbsp;&nbsp;&nbsp;&nbsp;<Button><DislikeTwoTone twoToneColor=\"#1ba640\"/></Button>\r\n      </div>\r\n    </div>\r\n    {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n    <textarea  value={comment} ref={ref} style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n      <Button type=\"primary\" onClick={insertComment}>댓글달기</Button>\r\n    </div>\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n    <div className=\"divTable\">\r\n    {mainPosts_1001Comments.map((v,i)=>(\r\n    <div className='divTableRow' >\r\n        <div className=\"divTableCell\">\r\n          <b>{v.userNickName}</b> &nbsp; <small>{custumDateFormat(v.createdDate)}</small><br/>\r\n          {v.comment}<br />\r\n          답글 [9]\r\n          <input type=\"text\" name={\"R\"+i+\"C01\"} value={v.commentId} readOnly={true} style={{color:\"#00c234\"}}/>\r\n          <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>{/*#1ba640*/}\r\n            <LikeTwoTone onClick={()=>likeBtn(v.commentId,v.flag,'good')} ref={testRef} twoToneColor={like ? \"#00c234\": \"#1ba640\"}/>{v.good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(v.commentId,v.flag,'bad')} twoToneColor=\"#1ba640\"/>{v.bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n    ))}\r\n    </div>\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n\r\n    </>\r\n        )\r\n}\r\n\r\n\r\ndetailPage.getInitialProps = async (context) =>{\r\n\r\n  const postId   = context.query.postId; \r\n  const nickName = context.query.nickName; \r\n  const postFlag = context.query.postFlag; \r\n  return {nickName,postFlag,postId}; \r\n}\r\nexport default detailPage; "]},"metadata":{},"sourceType":"module"}