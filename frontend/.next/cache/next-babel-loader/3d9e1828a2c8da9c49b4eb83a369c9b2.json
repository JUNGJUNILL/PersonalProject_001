{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar Comments1001 = function Comments1001(_ref) {\n  _s();\n\n  var createdDate = _ref.createdDate,\n      comment = _ref.comment,\n      userNickName = _ref.userNickName,\n      commentId = _ref.commentId,\n      flag = _ref.flag,\n      good = _ref.good,\n      bad = _ref.bad;\n\n  var _useState = useState(false),\n      like = _useState[0],\n      setLike = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      setLike(true); //댓글 좋아요!\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName\n        }\n      });\n    } //댓글 리스트 \n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId: postId,\n        nickName: nickName,\n        postFlag: postFlag,\n        who: userInfo\n      }\n    });\n    alert(\"\".concat(likeDislike));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, userNickName), \" \\xA0 \", __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 50\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 96\n    }\n  }), comment, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'good');\n    },\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'good');\n    },\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 162\n    }\n  }), bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 298\n    }\n  }))));\n};\n\n_s(Comments1001, \"Y3DVKh3g1G+WVo7m0+OHTVPHEfw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Comments1001;\nexport default Comments1001;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments1001\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","createdDate","comment","userNickName","commentId","flag","good","bad","like","setLike","state","auth","userInfo","likeBtn","commentid","likeDislike","alert","dispatch","type","data","postFlag","postId","who","nickName","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({createdDate,comment,userNickName,commentId,flag,good,bad}) =>{\r\n\r\n    \r\n    const [like , setLike]  = useState(false); \r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n          setLike(true); \r\n          //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n    \r\n        }\r\n    \r\n        //댓글 리스트 \r\n        dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n            who:userInfo, \r\n          }\r\n      }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div className='divTableRow' >\r\n                    <div className=\"divTableCell\">\r\n                    <b>{userNickName}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>{/*#1ba640*/}\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"}/>{good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"} />{bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}