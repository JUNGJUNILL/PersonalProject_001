{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\utilComponent\\\\Pagenation.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { number } from 'prop-types';\nimport Link from 'next/link';\n\nvar Pagenation = function Pagenation(_ref) {\n  var pagenate = _ref.pagenate,\n      dataLength = _ref.dataLength,\n      postsPerPage = _ref.postsPerPage,\n      nowPage = _ref.nowPage,\n      groupPage = _ref.groupPage,\n      groupPageArray = _ref.groupPageArray;\n  //const pageNumers = [[],[]];\n  //const [pageNumers, setPageNumers ] = useState([]);\n  var pageNumers = []; //이차원 배열 활용\n  // if(nowPage===0){\n  //     for(let i=0;  i<pageNumers.length; i++){\n  //         for(let j=1; j<=groupPage; j++){\n  //             if(i===0){\n  //                 pageNumers[i].push(j); \n  //             }else{\n  //                 pageNumers[i].push(groupPage+j);\n  //             }\n  //         }\n  //     }\n  // }--------------------------------------------------\n  // if(nowPage ===0 || (nowPage % groupPage ==! 1)){\n  //     pageNumers.length = 0; \n  //     for(let i =0; i<groupPage; i++){\n  //     pageNumers.push(i); \n  //     }\n  // }\n\n  if (nowPage === 0) {\n    for (var i = 0; i < groupPage; i++) {\n      pageNumers.push(i);\n    }\n  } else if (nowPage % groupPage === 1) {\n    pageNumers.length = 0;\n\n    for (var _i = nowPage - 1; _i < nowPage - 1 + groupPage; _i++) {\n      pageNumers.push(_i);\n    }\n  } else {\n    console.log(nowPage, ':', groupPageArray);\n    pageNumers.length = 0;\n\n    for (var _i2 = 0; _i2 < groupPageArray.length; _i2++) {\n      pageNumers.push(groupPageArray[_i2]);\n    }\n  }\n\n  console.log('pageNumers===>', pageNumers); // for(let i=0; i<groupPage; i++){\n  //     pageNumers.push(i); \n  //     if(((nowPage % groupPage ===1)) && (nowPage !== 1)){\n  //         pageNumers.length = 0; \n  //         for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\n  //         pageNumers.push(i); \n  //         }\n  //     }\n  // }\n  // if((nowPage % groupPage ===1) && (nowPage !== 1)){\n  //     pageNumers.length = 0; \n  //     for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\n  //     pageNumers.push(i); \n  //     }\n  // }\n\n  return __jsx(React.Fragment, null, __jsx(\"nav\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, nowPage, __jsx(\"li\", {\n    style: {\n      display: nowPage === 1 || nowPage === 0 ? \"none\" : \"\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: '#',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 86\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      return pagenate(nowPage - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 103\n    }\n  }, \"\\u25C0\"))), pageNumers.map(function (v, i, array) {\n    return __jsx(\"li\", {\n      key: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }\n    }, __jsx(Link, {\n      href: '#',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 30\n      }\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return pagenate(v + 1, array);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 47\n      }\n    }, v + 1))));\n  }), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: '#',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      return pagenate(nowPage + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 38\n    }\n  }, \"\\u25B6\"))))));\n};\n\n_c = Pagenation;\nexport default Pagenation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagenation\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/utilComponent/Pagenation.js"],"names":["React","useState","useCallback","useEffect","number","Link","Pagenation","pagenate","dataLength","postsPerPage","nowPage","groupPage","groupPageArray","pageNumers","i","push","length","console","log","display","map","v","array"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,useEffect} from 'react'\r\nimport { number } from 'prop-types';\r\nimport Link from 'next/link'\r\n\r\nconst Pagenation = ({pagenate,dataLength,postsPerPage,nowPage,groupPage,groupPageArray}) =>{\r\n\r\n    //const pageNumers = [[],[]];\r\n    //const [pageNumers, setPageNumers ] = useState([]);\r\n     const  pageNumers= []; \r\n        //이차원 배열 활용\r\n        // if(nowPage===0){\r\n\r\n        //     for(let i=0;  i<pageNumers.length; i++){\r\n                \r\n        //         for(let j=1; j<=groupPage; j++){\r\n\r\n        //             if(i===0){\r\n        //                 pageNumers[i].push(j); \r\n        //             }else{\r\n        //                 pageNumers[i].push(groupPage+j);\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }--------------------------------------------------\r\n\r\n\r\n        // if(nowPage ===0 || (nowPage % groupPage ==! 1)){\r\n\r\n        //     pageNumers.length = 0; \r\n        //     for(let i =0; i<groupPage; i++){\r\n        //     pageNumers.push(i); \r\n        //     }\r\n\r\n        // }\r\n\r\n\r\n        if(nowPage===0){\r\n\r\n            for(let i=0; i<groupPage; i++){\r\n           \r\n                pageNumers.push(i); \r\n            }\r\n\r\n        }else if(((nowPage % groupPage ===1))){\r\n\r\n            pageNumers.length = 0; \r\n            for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n            pageNumers.push(i); \r\n            }\r\n\r\n        }else{\r\n           console.log(nowPage, ':' , groupPageArray); \r\n           pageNumers.length=0; \r\n           for(let i=0; i< groupPageArray.length; i++){\r\n               pageNumers.push(groupPageArray[i]); \r\n           }\r\n        }\r\n\r\n        console.log( 'pageNumers===>' ,   pageNumers); \r\n        // for(let i=0; i<groupPage; i++){\r\n           \r\n        //     pageNumers.push(i); \r\n\r\n        //     if(((nowPage % groupPage ===1)) && (nowPage !== 1)){\r\n        //         pageNumers.length = 0; \r\n        //         for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n        //         pageNumers.push(i); \r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n  \r\n\r\n        // if((nowPage % groupPage ===1) && (nowPage !== 1)){\r\n        //     pageNumers.length = 0; \r\n        //     for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n        //     pageNumers.push(i); \r\n        //     }\r\n        // }\r\n\r\n\r\n    return(\r\n        <>  \r\n        <nav>\r\n            <ul>\r\n                {nowPage}\r\n                <li style={{display: nowPage === 1 || nowPage === 0  ? \"none\" : \"\"}}><Link href={'#'}><a onClick={()=>pagenate(nowPage-1)}>◀</a></Link></li>\r\n               \r\n               \r\n                {pageNumers.map((v,i,array)=>(\r\n                    <li key={v}>\r\n                         <li><Link href={'#'}><a onClick={()=>pagenate(v+1,array)}>{v+1}</a></Link></li>\r\n                    </li>\r\n                ))}\r\n\r\n\r\n\r\n                <li><Link href={'#'}><a onClick={()=>pagenate(nowPage+1)}>▶</a></Link></li>\r\n            </ul>               \r\n        </nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Pagenation; "]},"metadata":{},"sourceType":"module"}