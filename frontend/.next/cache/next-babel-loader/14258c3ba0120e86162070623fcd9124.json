{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\detailPage.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../reducers/mainPosts_1001';\nimport { DislikeTwoTone, LikeTwoTone, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nconst detailPage = ({\n  nickName,\n  postFlag,\n  postId\n}) => {\n  const dispatch = useDispatch();\n  const ref = createRef();\n  const {\n    0: testRef,\n    1: setTestRef\n  } = useState(() => createRef());\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  const blank_pattern = /^\\s+|\\s+&/g;\n  const {\n    mainPosts_1001Info,\n    mainPosts_1001Comments,\n    commentLikeDislikeFlag\n  } = useSelector(state => state.mainPosts_1001);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    //상세 정보 \n    dispatch({\n      type: MAINPOSTS_1001_DETAIL_INFO_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag\n      }\n    }); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag,\n        who: userInfo\n      }\n    });\n  }, []); //댓글 입력 textArea \n\n  const onChageComment = useCallback(e => {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]); //댓글 입력 insert \n\n  const insertComment = e => {\n    if (comment.length === 0 || comment.replace(blank_pattern, '') === \"\") {\n      ref.current.focus();\n      alert('댓글을 입력해 주세요!');\n      return;\n    }\n\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    } //댓글 입력\n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTINSERT_REQUEST,\n      data: {\n        postId,\n        postFlag,\n        nickName,\n        comment\n      }\n    });\n    setComment(''); //댓글 리스트 \n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag,\n        who: userInfo\n      }\n    });\n  };\n\n  const likeBtn = useCallback((commentid, flag) => {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    }\n\n    setLike(true);\n    alert(commentid, flag); //댓글 좋아요!\n    //   dispatch({\n    //     type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \n    //     data:{\n    //       commentid,\n    //       postFlag,\n    //       postId,\n    //       who: userInfo,\n    //       nickName,\n    //       flag,\n    //     }\n    // }); \n    // alert(\"commentLikeDislikeFlag=>\" , commentLikeDislikeFlag); \n    // if(commentLikeDislikeFlag ===\"Y\"){\n    //   alert('이미 좋아요! 싫어요! 했습니다.'); \n    //   return; \n    // }\n\n    alert('좋아요!');\n  }, []);\n  const dislikeBtn = useCallback(() => {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    }\n\n    alert('싫어요!');\n  }, []);\n\n  const test123 = (p1, p2) => {\n    alert(p1, ' : ', p2);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCellTh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, mainPosts_1001Info[0].title, \" [\", mainPosts_1001Comments.length, \"]\")), __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(UserOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }), \"  \", mainPosts_1001Info[0].userNickName, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 73\n    }\n  }), __jsx(FieldTimeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }), \"  \", custumDateFormat(mainPosts_1001Info[0].createdDate), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 95\n    }\n  }), __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }), \" : \", mainPosts_1001Info[0].good, \" \", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 88\n    }\n  }), \" : \", mainPosts_1001Info[0].bad))), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: mainPosts_1001Info[0].content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  })), \"\\xA0\\xA0\", __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 78\n    }\n  }, __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 86\n    }\n  })), __jsx(\"input\", {\n    type: \"button\",\n    value: \"test\",\n    onClick: () => test123('123', '123'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }))), __jsx(\"textarea\", {\n    value: comment,\n    ref: ref,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: insertComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, mainPosts_1001Comments.map((v, i) => __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, v.userNickName), \" \\xA0 \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 42\n    }\n  }, custumDateFormat(v.createdDate)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 90\n    }\n  }), v.comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 22\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: () => likeBtn(v.commentId, 'good'),\n    ref: testRef,\n    twoToneColor: like ? \"#00c234\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }), v.good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: dislikeBtn,\n    twoToneColor: \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 158\n    }\n  }), v.bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 250\n    }\n  })))))));\n};\n\ndetailPage.getInitialProps = async context => {\n  const postId = context.query.postId;\n  const nickName = context.query.nickName;\n  const postFlag = context.query.postFlag;\n  return {\n    nickName,\n    postFlag,\n    postId\n  };\n};\n\nexport default detailPage;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/detailPage.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","DislikeTwoTone","LikeTwoTone","UserOutlined","FieldTimeOutlined","Button","custumDateFormat","detailPage","nickName","postFlag","postId","dispatch","ref","testRef","setTestRef","comment","setComment","like","setLike","blank_pattern","mainPosts_1001Info","mainPosts_1001Comments","commentLikeDislikeFlag","state","mainPosts_1001","userInfo","auth","type","data","who","onChageComment","e","length","alert","target","value","insertComment","replace","current","focus","likeBtn","commentid","flag","dislikeBtn","test123","p1","p2","marginTop","title","userNickName","createdDate","good","bad","width","height","border","borderColor","display","justifyContent","alignItems","__html","content","margin","float","map","v","i","commentId","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\nimport {DislikeTwoTone,LikeTwoTone , UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport {Button} from 'antd'\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\nconst detailPage  = ({nickName,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const ref = createRef(); \r\n  const [testRef,setTestRef] = useState(()=>createRef()); \r\n  const [comment, setComment] = useState(''); \r\n  const [like , setLike]  = useState(false); \r\n  const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n  const {mainPosts_1001Info , mainPosts_1001Comments,commentLikeDislikeFlag} = useSelector((state)=>state.mainPosts_1001); \r\n  const {userInfo}                                    = useSelector((state)=>state.auth);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    //상세 정보 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n          }\r\n    });\r\n\r\n    //댓글 리스트 \r\n    dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n            who:userInfo, \r\n          }\r\n    }); \r\n\r\n  },[]); \r\n\r\n\r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n\r\n\r\n  //댓글 입력 insert \r\n  const insertComment = (e)=>{\r\n\r\n    if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n      ref.current.focus();  \r\n      alert('댓글을 입력해 주세요!'); \r\n      return; \r\n    }\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n      \r\n      //댓글 입력\r\n      dispatch({\r\n        type:MAINPOSTS_1001_COMMENTINSERT_REQUEST, \r\n        data:{\r\n          postId,\r\n          postFlag,\r\n          nickName,\r\n          comment,\r\n        }\r\n    });\r\n\r\n    setComment(''); \r\n\r\n    //댓글 리스트 \r\n      dispatch({\r\n        type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n        data:{\r\n          postId,\r\n          nickName,\r\n          postFlag,\r\n          who:userInfo,\r\n        }\r\n    }); \r\n  };\r\n\r\n  \r\n  const likeBtn =useCallback((commentid,flag)=>{\r\n    if(!userInfo){\r\n      alert('로그인이 필요한 서비스 입니다.'); \r\n      return;\r\n    }\r\n    setLike(true); \r\n    \r\n    alert(commentid,flag); \r\n    \r\n    //댓글 좋아요!\r\n  //   dispatch({\r\n  //     type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n  //     data:{\r\n  //       commentid,\r\n  //       postFlag,\r\n  //       postId,\r\n  //       who: userInfo,\r\n  //       nickName,\r\n  //       flag,\r\n        \r\n  //     }\r\n  // }); \r\n\r\n  // alert(\"commentLikeDislikeFlag=>\" , commentLikeDislikeFlag); \r\n  // if(commentLikeDislikeFlag ===\"Y\"){\r\n  //   alert('이미 좋아요! 싫어요! 했습니다.'); \r\n  //   return; \r\n  // }\r\n\r\n   \r\n   alert('좋아요!'); \r\n  },[]); \r\n\r\n  const dislikeBtn= useCallback(()=>{\r\n    if(!userInfo){\r\n      alert('로그인이 필요한 서비스 입니다.'); \r\n      return;\r\n    }\r\n\r\n    alert('싫어요!'); \r\n  },[]); \r\n\r\n\r\n  const test123 = (p1,p2) =>{\r\n    alert(p1 , ' : ' , p2); \r\n  }\r\n\r\n    return (\r\n    <>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n      <div className='divTable' style={{marginTop:'3%'}}>\r\n            <div className='divTableRowTh'>\r\n                <div className='divTableCellTh'>{mainPosts_1001Info[0].title} [{mainPosts_1001Comments.length}]</div>\r\n           </div>\r\n           <div className='divTableRow'>\r\n                <div className='divTableCell'>\r\n                  <UserOutlined />  {mainPosts_1001Info[0].userNickName}<br />\r\n                  <FieldTimeOutlined />  {custumDateFormat(mainPosts_1001Info[0].createdDate)}<br />\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].good} <DislikeTwoTone  twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].bad} \r\n                </div>\r\n           </div>\r\n      </div>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n\r\n      <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n         광고입니다.\r\n      </div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",marginTop:\"1%\"}}>\r\n        <div dangerouslySetInnerHTML={{__html:mainPosts_1001Info[0].content}}/>\r\n     </div> \r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}   \r\n    \r\n\r\n\r\n\r\n\r\n    <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n      광고입니다.\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n     {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n    <div className='divTable'>\r\n      <div className='divTableRowTh' style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n          <Button><LikeTwoTone  twoToneColor=\"#1ba640\"/></Button>&nbsp;&nbsp;<Button><DislikeTwoTone twoToneColor=\"#1ba640\"/></Button>\r\n        <input type=\"button\" value=\"test\" onClick={()=>test123('123','123')}/>\r\n          </div>\r\n    </div>\r\n    {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n    <textarea  value={comment} ref={ref} style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n      <Button type=\"primary\" onClick={insertComment}>댓글달기</Button>\r\n    </div>\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n    <div className=\"divTable\">\r\n    {mainPosts_1001Comments.map((v,i)=>(\r\n    <div className='divTableRow' >\r\n        <div className=\"divTableCell\">\r\n          <b>{v.userNickName}</b> &nbsp; <small>{custumDateFormat(v.createdDate)}</small><br/>\r\n          {v.comment}<br />\r\n          답글 [9]\r\n          <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>{/*#1ba640*/}\r\n            <LikeTwoTone onClick={()=>likeBtn(v.commentId,'good')} ref={testRef} twoToneColor={like ? \"#00c234\": \"#1ba640\"}/>{v.good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={dislikeBtn} twoToneColor=\"#1ba640\"/>{v.bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n    ))}\r\n    </div>\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n\r\n    </>\r\n        )\r\n}\r\n\r\n\r\ndetailPage.getInitialProps = async (context) =>{\r\n\r\n  const postId   = context.query.postId; \r\n  const nickName = context.query.nickName; \r\n  const postFlag = context.query.postFlag; \r\n  return {nickName,postFlag,postId}; \r\n}\r\nexport default detailPage; "]},"metadata":{},"sourceType":"module"}