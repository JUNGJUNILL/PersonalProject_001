{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport CreateUser from '../components/testComponent/CreateUser';\nimport UserList from '../components/testComponent/UserList';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(function (user) {\n    return user.active;\n  }).length;\n}\n\nfunction Test() {\n  _s();\n\n  var _useState = useState({\n    username: '',\n    email: ''\n  }),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var username = inputs.username,\n      email = inputs.email;\n  var onChange = useCallback(function (e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }, []);\n\n  var _useState2 = useState([{\n    id: 1,\n    username: 'DevRappers',\n    email: 'devrappers@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var nextId = useRef(4);\n  var onCreate = useCallback(function () {\n    var user = {\n      id: nextId.current,\n      username: username,\n      email: email\n    }; //setUsers([...users, user]);\n\n    setUsers(function (users) {\n      return users.concat(user);\n    });\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  var onRemove = useCallback(function (id) {\n    setUsers(function (users) {\n      return users.filter(function (user) {\n        return user.id !== id;\n      });\n    });\n  }, []);\n  var onToggle = useCallback(function (id) {\n    setUsers(function (users) {\n      return users.map(function (user) {\n        return user.id === id ? _objectSpread(_objectSpread({}, user), {}, {\n          active: !user.active\n        }) : user;\n      });\n    });\n  }, []);\n  var count = useMemo(function () {\n    return countActiveUsers(users);\n  }, [users]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, __jsx(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), __jsx(UserList, {\n    users: users,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count));\n}\n\n_s(Test, \"Or7nU7fjLWLqPeFNbrARH4kQUWM=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useCallback","useEffect","useState","createRef","CreateUser","UserList","countActiveUsers","users","console","log","filter","user","active","length","Test","username","email","inputs","setInputs","onChange","e","target","name","value","id","setUsers","nextId","useRef","onCreate","current","concat","onRemove","onToggle","map","count","useMemo"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport CreateUser from '../components/testComponent/CreateUser'\r\nimport UserList from '../components/testComponent/UserList'\r\n\r\n\r\nfunction countActiveUsers(users) {\r\n    console.log('활성 사용자 수를 세는중...');\r\n    return users.filter(user => user.active).length;\r\n  }\r\n  \r\n  function Test() {\r\n    const [inputs, setInputs] = useState({\r\n      username: '',\r\n      email: ''\r\n    });\r\n    \r\n    const { username, email } = inputs;\r\n    \r\n    const onChange = useCallback(e => {\r\n      const { name, value } = e.target;\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n      });\r\n    },[]);\r\n    \r\n    const [users, setUsers] = useState([\r\n      {\r\n        id: 1,\r\n        username: 'DevRappers',\r\n        email: 'devrappers@gmail.com',\r\n        active: true\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'tester',\r\n        email: 'tester@example.com',\r\n        active: false\r\n      },\r\n      {\r\n        id: 3,\r\n        username: 'liz',\r\n        email: 'liz@example.com',\r\n        active: false\r\n      }\r\n    ]);\r\n  \r\n    const nextId = useRef(4);\r\n    \r\n    const onCreate = useCallback(() => {\r\n      const user = {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      };\r\n      //setUsers([...users, user]);\r\n      \r\n      setUsers(users=>users.concat(user));\r\n      \r\n      setInputs({\r\n        username: '',\r\n        email: ''\r\n      });\r\n      nextId.current += 1;\r\n    },[username, email]);\r\n    \r\n    const onRemove = useCallback(id => {\r\n      setUsers(users => users.filter(user => user.id !== id));\r\n    },[]);\r\n    \r\n    const onToggle = useCallback(id => {\r\n      setUsers(users =>\r\n        users.map(user =>\r\n          user.id === id ? { ...user, active: !user.active } : user\r\n        )\r\n      );\r\n    },[]);\r\n    \r\n    const count = useMemo(() => countActiveUsers(users), [users]);\r\n    \r\n    return (\r\n         <div>\r\n        <CreateUser\r\n          username={username}\r\n          email={email}\r\n          onChange={onChange}\r\n          onCreate={onCreate}\r\n        />\r\n        <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\r\n        <div>활성사용자 수 : {count}</div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Test;"]},"metadata":{},"sourceType":"module"}