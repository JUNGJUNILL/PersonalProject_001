{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Item from '../components/testComponent/Item';\n\nconst Test = () => {\n  const {\n    0: numbers,\n    1: setNumbers\n  } = useState([1, 2, 3]);\n  const {\n    0: array,\n    1: setArray\n  } = useState([]);\n\n  const addNumber = () => {\n    setArray([...numbers]); //배열 추가 시 \n\n    setNumbers(prev => [...prev, prev.length + 1]);\n  };\n\n  useEffect(() => {\n    setArray([...numbers]);\n  }, []);\n\n  const updateArray = () => {\n    setArray([...numbers]);\n    numbers.map((v, i) => {\n      if (v === 1) {\n        array[i] = numbers[i] + 1;\n      }\n\n      if (v === 2) {\n        array[i] = numbers[i] + 1;\n      }\n\n      console.log('vv=>', v);\n    });\n    setArray(prev => [...array]);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, array.map(num => __jsx(Item, {\n    key: num,\n    num: num,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    onClick: addNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Click\"), __jsx(\"div\", {\n    onClick: updateArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"UPDATE\"), __jsx(\"input\", {\n    type: \"text\",\n    value: array.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useState","useEffect","Item","Test","numbers","setNumbers","array","setArray","addNumber","prev","length","updateArray","map","v","i","console","log","num"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,kCAAjB;;AAGA,MAAMC,IAAI,GAAG,MAAK;AAEd,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAAtC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMQ,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC,CAAC,GAAGH,OAAJ,CAAD,CAAR,CADsB,CAEpB;;AACAC,IAAAA,UAAU,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUA,IAAI,CAACC,MAAL,GAAc,CAAxB,CAAT,CAAV;AAED,GALH;;AAOET,EAAAA,SAAS,CAAC,MAAI;AAEZM,IAAAA,QAAQ,CAAC,CAAC,GAAGH,OAAJ,CAAD,CAAR;AACD,GAHQ,EAGP,EAHO,CAAT;;AAKF,QAAMO,WAAW,GAAG,MAAK;AAEvBJ,IAAAA,QAAQ,CAAC,CAAC,GAAGH,OAAJ,CAAD,CAAR;AAEAA,IAAAA,OAAO,CAACQ,GAAR,CAAY,CAACC,CAAD,EAAGC,CAAH,KAAO;AACjB,UAAGD,CAAC,KAAG,CAAP,EAAS;AACPP,QAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWV,OAAO,CAACU,CAAD,CAAP,GAAW,CAAtB;AACD;;AACD,UAAGD,CAAC,KAAG,CAAP,EAAS;AACPP,QAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWV,OAAO,CAACU,CAAD,CAAP,GAAW,CAAtB;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,CAAnB;AACD,KARD;AAUAN,IAAAA,QAAQ,CAACE,IAAI,IAAI,CAAC,GAAGH,KAAJ,CAAT,CAAR;AAED,GAhBD;;AAkBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACM,GAAN,CAAUK,GAAG,IACZ,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAX;AAAgB,IAAA,GAAG,EAAEA,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE;AAAK,IAAA,OAAO,EAAET,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAK,IAAA,OAAO,EAAEG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,KAAK,CAACI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAWH,CA/CD;;AAiDA,eAAeP,IAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Item from '../components/testComponent/Item'\r\n\r\n\r\nconst Test = () =>{\r\n\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n\r\n\r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        setNumbers(prev => [...prev, prev.length + 1]);\r\n\r\n      };\r\n\r\n      useEffect(()=>{\r\n\r\n        setArray([...numbers]); \r\n      },[]); \r\n\r\n    const updateArray = () =>{\r\n\r\n      setArray([...numbers]); \r\n\r\n      numbers.map((v,i)=>{\r\n        if(v===1){\r\n          array[i] = numbers[i]+1;  \r\n        }\r\n        if(v===2){\r\n          array[i] = numbers[i]+1;  \r\n        }\r\n        console.log('vv=>',v); \r\n      })\r\n\r\n      setArray(prev => [...array]);\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {array.map(num => (\r\n          <Item key={num} num={num}></Item>\r\n        ))}\r\n        <div onClick={addNumber}>Click</div>\r\n        <div onClick={updateArray}>UPDATE</div>\r\n        <input type=\"text\" value={array.length} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test; "]},"metadata":{},"sourceType":"module"}