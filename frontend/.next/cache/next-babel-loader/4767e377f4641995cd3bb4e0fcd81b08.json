{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { EMP_LIST_REQUEST, EMP_LIST_SUCCESS, EMP_LIST_FAILURE, EMP_INSERT_REQUEST, EMP_INSERT_SUCCESS, EMP_INSERT_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, TEST_REQUEST, TEST_SUCCESS, TEST_FAILURE } from '../reducers/emp'; //EMP SELECT\n//-----------------------------------------------------------------------------------\n\nfunction APIempList(data) {\n  return axios.post('/emp', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaEmpList(action) {\n  try {\n    const result = yield call(APIempList, action.data);\n    yield put({\n      type: EMP_LIST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: EMP_LIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchempList() {\n  yield takeLatest(EMP_LIST_REQUEST, sagaEmpList);\n} //-----------------------------------------------------------------------------------\n//EMP INSERT \n//-----------------------------------------------------------------------------------\n\n\nfunction APIempInsert(data) {\n  return axios.post('/emp/empInsert', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaEmpInsert(action) {\n  try {\n    const result = yield call(APIempInsert, action.data);\n    console.log('saga', result);\n    yield put({\n      type: EMP_INSERT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: EMP_INSERT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchInsertEmp() {\n  yield takeLatest(EMP_INSERT_REQUEST, sagaEmpInsert);\n} //-----------------------------------------------------------------------------------\n// FILE UPLOAD \n//-----------------------------------------------------------------------------------\n\n\nfunction APIUploadImage(formData) {\n  return axios.post('/emp/images', formData, {\n    withCredentials: true\n  });\n}\n\nfunction* upLoadImages(action) {\n  try {\n    const result = yield call(APIUploadImage, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, upLoadImages);\n} //-----------------------------------------------------------------------------------\n//TEST\n//-----------------------------------------------------------------------------------\n\n\nfunction APItest(data) {\n  return axios.post('/emp/select', {\n    data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* sagaTest(action) {\n  try {\n    const result = yield call(APItest, action.data);\n    console.log('TESTSAGA', result);\n    yield put({\n      type: TEST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    alert('error', e);\n    yield put({\n      type: TEST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchTest() {\n  yield takeLatest(TEST_REQUEST, sagaTest);\n} //-----------------------------------------------------------------------------------\n\n\nexport default function* empListSaga() {\n  yield all([fork(watchempList), fork(watchInsertEmp), fork(watchUploadImages), fork(watchTest)]);\n}","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/sagas/empListSaga.js"],"names":["axios","all","fork","takeLatest","takeEvery","put","delay","call","EMP_LIST_REQUEST","EMP_LIST_SUCCESS","EMP_LIST_FAILURE","EMP_INSERT_REQUEST","EMP_INSERT_SUCCESS","EMP_INSERT_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","TEST_REQUEST","TEST_SUCCESS","TEST_FAILURE","APIempList","data","post","withCredentials","sagaEmpList","action","result","type","e","console","error","alert","watchempList","APIempInsert","sagaEmpInsert","log","watchInsertEmp","APIUploadImage","formData","upLoadImages","watchUploadImages","APItest","sagaTest","watchTest","empListSaga"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {EMP_LIST_REQUEST,\r\n     EMP_LIST_SUCCESS,\r\n     EMP_LIST_FAILURE,\r\n     EMP_INSERT_REQUEST,\r\n     EMP_INSERT_SUCCESS,\r\n     EMP_INSERT_FAILURE,\r\n     UPLOAD_IMAGES_REQUEST,\r\n     UPLOAD_IMAGES_SUCCESS,\r\n     UPLOAD_IMAGES_FAILURE,\r\n\r\n    TEST_REQUEST,\r\n    TEST_SUCCESS,\r\n    TEST_FAILURE\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\n\r\n//EMP SELECT\r\n//-----------------------------------------------------------------------------------\r\nfunction APIempList(data){\r\n    return axios.post('/emp',{data},{withCredentials:true})\r\n}\r\n\r\nfunction* sagaEmpList(action){\r\n\r\n    try{\r\n      const result = yield call(APIempList,action.data); \r\n      yield  put({\r\n            type:EMP_LIST_SUCCESS, \r\n            data:result.data,\r\n        });\r\n\r\n    }catch(e){\r\n\r\n        console.error(e); \r\n        alert('error', e); \r\n        yield put({\r\n            type:EMP_LIST_FAILURE, \r\n            error: e, \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchempList(){\r\n    yield takeLatest(EMP_LIST_REQUEST,sagaEmpList); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n//EMP INSERT \r\n//-----------------------------------------------------------------------------------\r\nfunction APIempInsert(data){\r\n\r\n    return axios.post('/emp/empInsert',{data},{withCredentials:true})\r\n\r\n}\r\n\r\nfunction* sagaEmpInsert(action){\r\n\r\n    try{\r\n\r\n        const result = yield call(APIempInsert,action.data); \r\n        console.log('saga' , result); \r\n        yield  put({\r\n              type:EMP_INSERT_SUCCESS, \r\n              data:result.data,\r\n          });\r\n  \r\n      }catch(e){\r\n  \r\n          console.error(e); \r\n          alert('error', e); \r\n          yield put({\r\n              type:EMP_INSERT_FAILURE, \r\n              error: e, \r\n          }); \r\n      }\r\n\r\n}\r\n\r\n\r\nfunction* watchInsertEmp(){\r\n    yield takeLatest(EMP_INSERT_REQUEST,sagaEmpInsert); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n// FILE UPLOAD \r\n//-----------------------------------------------------------------------------------\r\nfunction APIUploadImage(formData){\r\n    return axios.post('/emp/images',formData,{withCredentials:true}); \r\n}\r\n\r\nfunction* upLoadImages(action){\r\n\r\n\r\n    try{\r\n        const result = yield call(APIUploadImage,action.data); \r\n        yield  put({\r\n              type:UPLOAD_IMAGES_SUCCESS, \r\n              data:result.data,\r\n          });\r\n  \r\n      }catch(e){\r\n  \r\n          console.error(e); \r\n          alert('error', e); \r\n          yield put({\r\n              type:UPLOAD_IMAGES_FAILURE, \r\n              error: e, \r\n          }); \r\n      }\r\n\r\n}\r\n\r\n\r\n\r\nfunction* watchUploadImages(){\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST,upLoadImages); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n//TEST\r\n//-----------------------------------------------------------------------------------\r\n\r\nfunction APItest(data){\r\n\r\n    return axios.post('/emp/select',{data},{withCredentials:true})\r\n\r\n}\r\n\r\nfunction* sagaTest(action){\r\n\r\n    try{\r\n\r\n        const result = yield call(APItest,action.data); \r\n        console.log('TESTSAGA' , result); \r\n        yield  put({\r\n              type:TEST_SUCCESS, \r\n              data:result.data,\r\n          });\r\n  \r\n      }catch(e){\r\n  \r\n          console.error(e); \r\n          alert('error', e); \r\n          yield put({\r\n              type:TEST_FAILURE, \r\n              error: e, \r\n          }); \r\n      }\r\n\r\n}\r\n\r\n\r\nfunction* watchTest(){\r\n    yield takeLatest(TEST_REQUEST,sagaTest); \r\n}\r\n//-----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function* empListSaga(){\r\n\r\n    yield all([\r\n        fork(watchempList), \r\n        fork(watchInsertEmp), \r\n        fork(watchUploadImages), \r\n        fork(watchTest), \r\n     ])\r\n}"]},"metadata":{},"sourceType":"module"}