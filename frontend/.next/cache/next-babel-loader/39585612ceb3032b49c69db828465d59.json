{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\useCallback.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// 렌더되는 Child 컴포넌트의 수 만큼 인라인 함수가 생성된다. \nconst Child = ({\n  onClick\n}) => {\n  return __jsx(\"button\", {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 10\n    }\n  }, \"Click Me!\");\n};\n\nconst Root = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Child, {\n    onClick: () => console.log('callback'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), __jsx(Child, {\n    onClick: () => console.log('callback'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), __jsx(Child, {\n    onClick: () => console.log('callback'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(Child, {\n    onClick: () => console.log('callback'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), __jsx(Child, {\n    onClick: () => console.log('callback'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Root;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/useCallback.js"],"names":["Child","onClick","Root","console","log"],"mappings":";;;;AAAA;AACA,MAAMA,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC3B,SAAO;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAFD;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAVD;;AAYA,eAAeF,IAAf","sourcesContent":["// 렌더되는 Child 컴포넌트의 수 만큼 인라인 함수가 생성된다. \r\nconst Child = ({onClick}) => {\r\n  return <button onClick={onClick}>Click Me!</button>\r\n};\r\n\r\nconst Root = () => {\r\n  return (\r\n    <div>\r\n      <Child onClick={() => console.log('callback')}/> \r\n      <Child onClick={() => console.log('callback')}/> \r\n      <Child onClick={() => console.log('callback')}/> \r\n      <Child onClick={() => console.log('callback')}/> \r\n      <Child onClick={() => console.log('callback')}/> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Root;"]},"metadata":{},"sourceType":"module"}