{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test2.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback, useRef, current } from 'react';\n\nconst getAverage = numbers => {\n  console.log('평균값 계산 중...');\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Test2 = () => {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: number,\n    1: setNumber\n  } = useState('');\n  const inputEl = useRef();\n  const onChange = useCallback(e => {\n    console.log('onChange');\n    setNumber(e.target.value);\n  }, []); //\n\n  const onInsert = useCallback(e => {\n    // const nextList = list.concat(parseInt(number)); \n    setList([...list, number]);\n    setNumber('');\n    inputEl.current.focus();\n  }, []);\n  const avg = useMemo(() => getAverage(list), [list]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: number,\n    onChange: onChange,\n    ref: inputEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, list.map((value, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, value))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"\\uD3C9\\uADE0 \\uAC12:\"), avg));\n};\n\nexport default Test2;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test2.js"],"names":["React","useState","useMemo","useCallback","useRef","current","getAverage","numbers","console","log","length","sum","reduce","a","b","Test2","list","setList","number","setNumber","inputEl","onChange","e","target","value","onInsert","focus","avg","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAoE,OAApE;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAY;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,MAAGF,OAAO,CAACG,MAAR,KAAmB,CAAtB,EAAyB,OAAO,CAAP;AACzB,QAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAxB,CAAZ;AACA,SAAOH,GAAG,GAAGJ,OAAO,CAACG,MAArB;AAEH,CAPD;;AAUA,MAAMK,KAAK,GAAG,MAAK;AAEf,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAAA,OAACiB,MAAD;AAAA,OAAQC;AAAR,MAAqBlB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMmB,OAAO,GAAGhB,MAAM,EAAtB;AAEA,QAAMiB,QAAQ,GAAGlB,WAAW,CAAEmB,CAAD,IAAM;AAC/Bd,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAU,IAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAH2B,EAG1B,EAH0B,CAA5B,CANe,CASR;;AAEP,QAAMC,QAAQ,GAAGtB,WAAW,CAAEmB,CAAD,IAAM;AAGhC;AACCL,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASE,MAAT,CAAD,CAAP;AACAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,CAACf,OAAR,CAAgBqB,KAAhB;AACH,GAP2B,EAO1B,EAP0B,CAA5B;AASA,QAAMC,GAAG,GAAEzB,OAAO,CAAC,MAAII,UAAU,CAACU,IAAD,CAAf,EAAsB,CAACA,IAAD,CAAtB,CAAlB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,KAAK,EAAEE,MAAd;AAAsB,IAAA,QAAQ,EAAEG,QAAhC;AAA0C,IAAA,GAAG,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IAAI,CAACY,GAAL,CAAS,CAACJ,KAAD,EAAOK,KAAP,KACV;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBL,KAAjB,CADC,CADL,CAHA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAEiBG,GAFjB,CARA,CADJ;AAiBH,CAvCD;;AA0CA,eAAeZ,KAAf","sourcesContent":["import React, {useState, useMemo, useCallback,useRef ,current} from 'react'\r\n\r\nconst getAverage = (numbers) =>{\r\n\r\n    console.log('평균값 계산 중...'); \r\n    if(numbers.length === 0) return 0; \r\n    const sum = numbers.reduce((a,b)=>a+b); \r\n    return sum / numbers.length; \r\n\r\n}\r\n\r\n\r\nconst Test2 = () =>{\r\n\r\n    const [list,setList] = useState([]); \r\n    const [number,setNumber] = useState(''); \r\n    const inputEl = useRef();\r\n\r\n    const onChange = useCallback((e) =>{\r\n        console.log('onChange'); \r\n        setNumber(e.target.value); \r\n    },[]); //\r\n\r\n    const onInsert = useCallback((e) =>{\r\n      \r\n        \r\n       // const nextList = list.concat(parseInt(number)); \r\n        setList([...list,number]); \r\n        setNumber(''); \r\n        inputEl.current.focus();\r\n    },[]); \r\n    \r\n    const avg =useMemo(()=>getAverage(list),[list]); \r\n\r\n    return (\r\n        <div>\r\n        <input value={number} onChange={onChange} ref={inputEl}/>\r\n        <button onClick={onInsert}>등록</button>\r\n        <ul>    \r\n            {list.map((value,index) => (\r\n            <li key={index}>{value}</li>\r\n            ))}\r\n        </ul>\r\n        <div>\r\n            {/*<b>평균 값:</b>{getAverage(list)}*/}\r\n            <b>평균 값:</b>{avg}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Test2; "]},"metadata":{},"sourceType":"module"}