{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\testComponent\\\\movieComponent.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { memo, useState, useEffect, useRef } from \"react\";\n\nvar MovieName = function MovieName() {\n  _s();\n\n  var _useState = useState(''),\n      a = _useState[0],\n      Aset = _useState[1];\n\n  console.log('name=>', name);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, name, __jsx(\"input\", {\n    type: \"button\",\n    value: \"clickcName\",\n    onClick: function onClick() {\n      return Aset('hello');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(MovieName, \"l+DKeQLFkNgzRuyDqO4Zch6lKFk=\");\n\n_c = MovieName;\nexport default _c2 = memo(MovieName); //메모 사용 시 부모 컴포넌트의 state가 변하여도 자식 컴포넌트는 리렌더링되지 않는다.\n//export default MovieName; \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieName\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/testComponent/movieComponent.js"],"names":["React","memo","useState","useEffect","useRef","MovieName","a","Aset","console","log","name"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,QAArB,EAA8BC,SAA9B,EAAwCC,MAAxC,QAAsD,OAAtD;;AAEA,IAAMC,SAAS,GAAE,SAAXA,SAAW,GAAK;AAAA;;AAAA,kBAEDH,QAAQ,CAAC,EAAD,CAFP;AAAA,MAEXI,CAFW;AAAA,MAETC,IAFS;;AAIlBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,IAArB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,EACA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,YAA3B;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAIH,IAAI,CAAC,OAAD,CAAR;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAMH,CAXD;;GAAMF,S;;KAAAA,S;AAaN,qBAAeJ,IAAI,CAACI,SAAD,CAAnB,C,CACA;AACA","sourcesContent":["\r\nimport React, {memo, useState,useEffect,useRef } from \"react\";\r\n\r\nconst MovieName =() =>{\r\n\r\n    const [a,Aset] = useState(''); \r\n\r\n    console.log('name=>',name); \r\n    return (\r\n        <div>{name}\r\n        <input type=\"button\" value='clickcName' onClick={()=>Aset('hello')} /> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default memo(MovieName); \r\n//메모 사용 시 부모 컴포넌트의 state가 변하여도 자식 컴포넌트는 리렌더링되지 않는다.\r\n//export default MovieName; \r\n\r\n"]},"metadata":{},"sourceType":"module"}