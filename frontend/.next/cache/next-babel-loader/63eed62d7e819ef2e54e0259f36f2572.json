{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\CKEditor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input, Alert } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\nimport { EMP_INSERT_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/emp';\n\nvar Editor = function Editor() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.emp;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useState = useState(''),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var imageInput = useRef();\n\n  var abc = function abc() {\n    alert(content);\n  }; //이미지 업로드 창 \n\n\n  var onChangeImages = useCallback(function (e) {\n    var imageFormData = new FormData();\n    Array.prototype.forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []); //이미지 업로드 클릭 \n\n  var onClickImageUpload = useCallback(function () {\n    alert(\"??\");\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  var MyCustomUploadAdapterPlugin = function MyCustomUploadAdapterPlugin() {};\n\n  ClassicEditor.create(document.querySelector('#editor'), {\n    extraPlugins: [MyCustomUploadAdapterPlugin] // ...\n\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n  return __jsx(\"div\", {\n    className: \"demo-editor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Using CKEditor 5 build in React\"), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(CKEditor, {\n    editor: ClassicEditor,\n    config: {\n      toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'imageUpload'],\n      placeholder: \"글을 입력해보세요!\"\n    } //data=\"<p>Hello from CKEditor 5!</p>\"\n    //최소 실행시 보여줄 문구 \n    ,\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setContent(data);\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: abc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"\\uBC97\\uC740\"));\n};\n\n_s(Editor, \"852Siln9KGPCmwd0IZSuOc1/ZCw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/CKEditor.js"],"names":["useState","useCallback","useRef","useDispatch","useSelector","Button","Input","Alert","CKEditor","ClassicEditor","Bold","EMP_INSERT_REQUEST","UPLOAD_IMAGES_REQUEST","Editor","dispatch","state","emp","imagePaths","content","setContent","imageInput","abc","alert","onChangeImages","e","imageFormData","FormData","Array","prototype","forEach","call","target","files","f","append","type","data","onClickImageUpload","current","click","MyCustomUploadAdapterPlugin","create","document","querySelector","extraPlugins","error","console","log","toolbar","placeholder","editor","event","getData"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button, Input, Alert} from 'antd'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\r\n\r\nimport \r\n    {EMP_INSERT_REQUEST, \r\n     UPLOAD_IMAGES_REQUEST,\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Editor = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {imagePaths} = useSelector((state)=>state.emp); \r\n    const [content,setContent] = useState('');   \r\n    const imageInput = useRef(); \r\n\r\n    const abc = ()=>{\r\n        alert(content); \r\n    }\r\n\r\n        //이미지 업로드 창 \r\n        const onChangeImages = useCallback((e)=>{\r\n        \r\n            const imageFormData = new FormData(); \r\n            Array.prototype.forEach.call(e.target.files ,(f)=>{\r\n                imageFormData.append('image',f); \r\n            });\r\n            \r\n            dispatch({\r\n                    type:UPLOAD_IMAGES_REQUEST,\r\n                    data:imageFormData,             \r\n            }); \r\n    \r\n        },[]); \r\n    \r\n\r\n\r\n    //이미지 업로드 클릭 \r\n    const onClickImageUpload = useCallback(() =>{\r\n        alert(\"??\"); \r\n        imageInput.current.click(); \r\n\r\n    },[imageInput.current]); \r\n\r\n\r\n    const MyCustomUploadAdapterPlugin =()=>{\r\n        \r\n    }\r\n    \r\n    ClassicEditor\r\n    .create( document.querySelector( '#editor' ), {\r\n        extraPlugins: [ MyCustomUploadAdapterPlugin ],\r\n\r\n        // ...\r\n    } )\r\n    .catch( error => {\r\n        console.log( error );\r\n    } );\r\n\r\n    return(\r\n\r\n        \r\n        <div className=\"demo-editor\">\r\n        <h2>Using CKEditor 5 build in React</h2>\r\n\r\n        <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n\r\n        <CKEditor\r\n            editor={ ClassicEditor }\r\n            config={{\r\n                toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList','imageUpload'],\r\n                placeholder: \"글을 입력해보세요!\",\r\n            \r\n\r\n            }}\r\n\r\n\r\n            //data=\"<p>Hello from CKEditor 5!</p>\"\r\n            //최소 실행시 보여줄 문구 \r\n\r\n            onInit={ editor => {\r\n                // You can store the \"editor\" and use when it is needed.\r\n                console.log( 'Editor is ready to use!', editor );\r\n            } }\r\n            onChange={ ( event, editor ) => {\r\n                const data = editor.getData();\r\n                setContent(data); \r\n                console.log( { event, editor, data } );\r\n            } }\r\n            onBlur={ ( event, editor ) => {\r\n                console.log( 'Blur.', editor );\r\n            } }\r\n            onFocus={ ( event, editor ) => {\r\n                console.log( 'Focus.', editor );\r\n            } }\r\n        />\r\n        <Button onClick={abc}>벗은</Button>\r\n        </div>\r\n       \r\n\r\n    )\r\n\r\n} \r\n\r\n\r\nexport default Editor; "]},"metadata":{},"sourceType":"module"}