{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\utilComponent\\\\Pagenation.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect, memo } from 'react';\nimport { number } from 'prop-types';\nimport Link from 'next/link';\n\nconst Pagenation = ({\n  pagenate,\n  dataLength,\n  postsPerPage,\n  nowPage,\n  groupPage,\n  groupPageArray\n}) => {\n  const pageNumers = [1, 2, 3, 4, 5]; //마지막 페이지 처리 \n\n  let isInVisible = false;\n\n  if (dataLength === 0 || dataLength < postsPerPage) {\n    isInVisible = true;\n  } //첫 로드시 \n\n\n  if (nowPage === 0) {\n    if (postsPerPage > dataLength) {\n      pageNumers.push(0);\n    } else {\n      for (let i = 0; i < groupPage; i++) {\n        pageNumers.push(i);\n      }\n    } //앞으로 그룹 이동\n\n  } else if (nowPage % groupPage === 1 && nowPage !== 1) {\n    pageNumers.length = 0;\n\n    for (let i = nowPage - 1; i < nowPage - 1 + groupPage; i++) {\n      pageNumers.push(i);\n    } //뒤로 그룹 이동\n\n  } else if (groupPageArray[0] === nowPage) {\n    pageNumers.length = 0;\n\n    for (let i = 0; i < groupPageArray.length; i++) {\n      pageNumers.push(groupPageArray[i] - groupPage);\n    } //숫자 클릭 \n\n  } else {\n    pageNumers.length = 0;\n\n    for (let i = 0; i < groupPageArray.length; i++) {\n      pageNumers.push(groupPageArray[i]);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"paginationDiv\",\n    style: {\n      marginTop: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    style: {\n      display: nowPage === 1 || nowPage === 0 ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: nowPage - 1,\n        group: pageNumers[0].valueOf()\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 91\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage - 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 162\n    }\n  }, \"\\u25C0\"))), pageNumers.map((v, i, array) => __jsx(\"li\", {\n    key: v,\n    style: {\n      display: isInVisible === true && v >= nowPage ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: v + 1,\n        group: pageNumers[0].valueOf()\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, __jsx(\"a\", {\n    className: nowPage === 0 && nowPage === v || nowPage === v + 1 ? \"active\" : \"\",\n    onClick: () => pagenate(v + 1, array),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 98\n    }\n  }, v + 1))))), __jsx(\"li\", {\n    style: {\n      display: isInVisible === true ? \"none\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: {\n      query: {\n        nowPage: nowPage + 1,\n        group: pageNumers[0].valueOf()\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 77\n    }\n  }, __jsx(\"a\", {\n    onClick: () => pagenate(nowPage + 1, pageNumers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 148\n    }\n  }, \"\\u25B6\"))))));\n};\n\nexport default memo(Pagenation);","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/utilComponent/Pagenation.js"],"names":["React","useState","useCallback","useEffect","memo","number","Link","Pagenation","pagenate","dataLength","postsPerPage","nowPage","groupPage","groupPageArray","pageNumers","isInVisible","push","i","length","marginTop","display","query","group","valueOf","map","v","array"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,useEffect,memo} from 'react'\r\nimport { number } from 'prop-types';\r\nimport Link from 'next/link'\r\n\r\nconst Pagenation = ({pagenate,dataLength,postsPerPage,nowPage,groupPage,groupPageArray}) =>{\r\n\r\n    const  pageNumers= [1,2,3,4,5]; \r\n\r\n\r\n    //마지막 페이지 처리 \r\n    let  isInVisible = false; \r\n    if(dataLength === 0 || dataLength < postsPerPage){\r\n        isInVisible = true; \r\n    }\r\n\r\n    //첫 로드시 \r\n    if(nowPage===0){   \r\n        if(postsPerPage > dataLength){\r\n           \r\n                pageNumers.push(0); \r\n        }else{\r\n            for(let i=0; i<groupPage; i++){\r\n           \r\n                pageNumers.push(i); \r\n            }\r\n        }\r\n\r\n    //앞으로 그룹 이동\r\n    }else if(((nowPage % groupPage === 1)) && (nowPage !== 1)){ \r\n            pageNumers.length = 0; \r\n            for(let i=nowPage-1; i<(nowPage-1)+groupPage; i++ ){\r\n            pageNumers.push(i); \r\n            }\r\n    //뒤로 그룹 이동\r\n    }else if((groupPageArray[0] === nowPage)){\r\n             pageNumers.length = 0; \r\n             for(let i=0; i<groupPageArray.length; i++){\r\n                pageNumers.push(groupPageArray[i]-groupPage); \r\n             }\r\n    //숫자 클릭 \r\n    }else{\r\n           pageNumers.length=0; \r\n           for(let i=0; i< groupPageArray.length; i++){\r\n               pageNumers.push(groupPageArray[i]); \r\n           }\r\n\r\n    }\r\n\r\n    return(\r\n        <>  \r\n            <div className=\"paginationDiv\" style={{marginTop:\"3%\"}}>\r\n                <ul className=\"pagination\">\r\n                    <li  style={{display: nowPage === 1 || nowPage === 0  ? \"none\" : \"\"}}><Link href={{query:{nowPage:nowPage-1,group:pageNumers[0].valueOf()}}}><a onClick={()=>pagenate(nowPage-1,pageNumers)}>◀</a></Link></li>\r\n                    {pageNumers.map((v,i,array)=>(\r\n                        <li key={v}   style={{display : (isInVisible===true) && (v >=nowPage) ? \"none\" : \"\" }}>\r\n                            <li><Link href={{query:{nowPage:v+1,group:pageNumers[0].valueOf()}}}><a className={(nowPage === 0 && nowPage === v) || (nowPage === v+1) ? \"active\" : \"\"} onClick={()=>pagenate(v+1,array)}>{v+1}</a></Link></li>\r\n                        </li>\r\n                    ))}\r\n                    <li style={{display :isInVisible===true ? \"none\" : \"\"}}><Link href={{query:{nowPage:nowPage+1,group:pageNumers[0].valueOf()}}}><a onClick={()=>pagenate(nowPage+1,pageNumers)}>▶</a></Link></li>\r\n                </ul>     \r\n            </div>        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(Pagenation); "]},"metadata":{},"sourceType":"module"}