{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Item from '../components/testComponent/Item';\nimport CreateUser from '../components/testComponent/CreateUser';\nimport UserList from '../components/testComponent/UserList';\n\nconst Test = () => {\n  const {\n    0: numbers,\n    1: setNumbers\n  } = useState([1, 2, 3]);\n  const {\n    0: array,\n    1: setArray\n  } = useState([]);\n\n  const addNumber = () => {\n    setArray([...numbers]); //배열 추가 시 \n    //setNumbers(prev => [...prev, prev.length + 1]);\n\n    console.log('numbers=>', numbers, 'array=>', array);\n  };\n\n  useEffect(() => {\n    setArray([...numbers]);\n  }, []); // const updateArray = () =>{\n  //   setArray([...numbers]); \n  //   numbers.map((v,i)=>{\n  //     if(v===1){\n  //       array[i] = numbers[i]+1;  \n  //     }\n  //     if(v===2){\n  //       array[i] = numbers[i]+1;  \n  //     }\n  //     console.log('vv=>',v); \n  //   })\n  //   setArray(prev => [...array]);\n  // }\n\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  };\n\n  const {\n    0: users,\n    1: setUsers\n  } = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com'\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([user, ...users]);\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), __jsx(UserList, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useState","useEffect","useRef","Item","CreateUser","UserList","Test","numbers","setNumbers","array","setArray","addNumber","console","log","inputs","setInputs","username","email","onChange","e","name","value","target","users","setUsers","id","nextId","onCreate","user","current"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef } from \"react\";\r\nimport Item from '../components/testComponent/Item'\r\nimport CreateUser from '../components/testComponent/CreateUser'\r\nimport UserList from '../components/testComponent/UserList'\r\n\r\nconst Test = () =>{\r\n\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n\r\n\r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        //setNumbers(prev => [...prev, prev.length + 1]);\r\n        \r\n        console.log('numbers=>' , numbers, 'array=>' , array); \r\n\r\n      };\r\n\r\n      useEffect(()=>{\r\n\r\n        setArray([...numbers]); \r\n      },[]); \r\n\r\n    // const updateArray = () =>{\r\n\r\n    //   setArray([...numbers]); \r\n\r\n    //   numbers.map((v,i)=>{\r\n    //     if(v===1){\r\n    //       array[i] = numbers[i]+1;  \r\n    //     }\r\n    //     if(v===2){\r\n    //       array[i] = numbers[i]+1;  \r\n    //     }\r\n    //     console.log('vv=>',v); \r\n    //   })\r\n\r\n    //   setArray(prev => [...array]);\r\n\r\n    // }\r\n\r\n\r\n    const [inputs, setInputs] =useState({username:'', email:'', }); \r\n\r\n    \r\n    const { username, email } = inputs;\r\n\r\n    const onChange = e =>{\r\n      const {name, value} = e.target; \r\n\r\n      setInputs({\r\n        ...inputs,[name]:value\r\n      }); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [users, setUsers] = useState([\r\n      {\r\n        id: 1,\r\n        username: 'velopert',\r\n        email: 'public.velopert@gmail.com'\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'tester',\r\n        email: 'tester@example.com'\r\n      },\r\n      {\r\n        id: 3,\r\n        username: 'liz',\r\n        email: 'liz@example.com'\r\n      }\r\n    ]);\r\n  \r\n    const nextId = useRef(4);\r\n    const onCreate = () => {\r\n      \r\n      const user = {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      };\r\n      \r\n      setUsers([user,...users]);\r\n\r\n      setInputs({\r\n        username: '',\r\n        email: ''\r\n      });\r\n  \r\n      nextId.current += 1;\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>\r\n          <CreateUser \r\n            username={username}\r\n            email={email}\r\n            onChange={onChange}\r\n            onCreate={onCreate}\r\n          />\r\n          <UserList users={users} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test; "]},"metadata":{},"sourceType":"module"}