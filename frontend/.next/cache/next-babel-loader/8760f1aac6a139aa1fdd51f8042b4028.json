{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\count.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { COUNT_PLUS_REQUEST, countMinusActionm, COUNT_MINUS_REQUEST } from '../reducers/count';\n\nvar Count = function Count() {\n  _s();\n\n  var dispatch = useDispatch();\n  var count = useSelector(function (state) {\n    return state.count;\n  }); //store의 state를 불러오는 hook \n  //store의 state 중에서 count의 state를 불러온다.\n\n  var toggle = useCallback(function (param) {\n    return function () {\n      if (param === 'plus') {\n        return dispatch({\n          type: COUNT_PLUS_REQUEST\n        });\n      } else if (param === 'minus') {\n        return dispatch({\n          type: COUNT_MINUS_REQUEST\n        });\n      } else {\n        return;\n      }\n    };\n  }, []);\n  var array = [\"array1\", \"array2\", \"array3\"];\n  var ref = createRef();\n\n  var onChageedFunc = function onChageedFunc(e) {\n    console.log('sex-->  ', e.target.value);\n  };\n\n  var testBtn = function testBtn(e) {\n    onChageedFunc(e); // console.log(e.target.name);\n    // console.log(ref.current); \n    //console.log( ref.current.getElementById(\"good\").value); \n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, array.map(function (v, i) {\n    return __jsx(\"input\", {\n      type: \"text\",\n      ref: ref,\n      name: \"a01\",\n      onChange: onChageedFunc,\n      value: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\n_s(Count, \"9JLh5EGpiEauO8HADopXgKHfFko=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/count.js"],"names":["React","useCallback","createRef","useDispatch","useSelector","COUNT_PLUS_REQUEST","countMinusActionm","COUNT_MINUS_REQUEST","Count","dispatch","count","state","toggle","param","type","array","ref","onChageedFunc","e","console","log","target","value","testBtn","map","v","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,kBAAR,EAA2BC,iBAA3B,EAA6CC,mBAA7C,QAAsE,mBAAtE;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAK;AAAA;;AAGf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,KAAK,GAAMN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAA5B,CAJe,CAKc;AACA;;AAE7B,MAAME,MAAM,GAAGX,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAE,YAAI;AAElC,UAAGA,KAAK,KAAI,MAAZ,EAAmB;AAChB,eAAQJ,QAAQ,CAAC;AAACK,UAAAA,IAAI,EAACT;AAAN,SAAD,CAAhB;AACF,OAFD,MAEM,IAAGQ,KAAK,KAAI,OAAZ,EAAoB;AACtB,eAAOJ,QAAQ,CAAC;AAACK,UAAAA,IAAI,EAACP;AAAN,SAAD,CAAf;AACH,OAFK,MAED;AACD;AACH;AACJ,KAT+B;AAAA,GAAN,EASxB,EATwB,CAA1B;AAWA,MAAMQ,KAAK,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,CAAd;AAIA,MAAMC,GAAG,GAAGd,SAAS,EAArB;;AAEA,MAAMe,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAK;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,CAAC,CAACG,MAAF,CAASC,KAAhC;AACP,GAFD;;AAGA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACL,CAAD,EAAK;AAEjBD,IAAAA,aAAa,CAACC,CAAD,CAAb,CAFiB,CAGlB;AACD;AACE;AAEH,GAPD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACS,GAAN,CAAU,UAACC,CAAD,EAAGC,CAAH;AAAA,WAEP;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEV,GAAxB;AAA6B,MAAA,IAAI,EAAE,KAAnC;AAA0C,MAAA,QAAQ,EAAEC,aAApD;AAAmE,MAAA,KAAK,EAAEQ,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO;AAAA,GAAV,CADD,CADJ;AA8BH,CApED;;GAAMjB,K;UAGeL,W,EACAC,W;;;KAJfI,K;AAsEN,eAAeA,KAAf","sourcesContent":["import React, { useCallback ,createRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {COUNT_PLUS_REQUEST,countMinusActionm,COUNT_MINUS_REQUEST}from '../reducers/count';\r\n\r\n\r\nconst Count = () =>{\r\n\r\n\r\n    const dispatch = useDispatch(); \r\n    const count    = useSelector(state => state.count); \r\n                                 //store의 state를 불러오는 hook \r\n                                 //store의 state 중에서 count의 state를 불러온다.\r\n\r\n    const toggle = useCallback(param=>()=>{\r\n        \r\n        if(param ==='plus'){\r\n           return  dispatch({type:COUNT_PLUS_REQUEST}); \r\n        }else if(param ==='minus'){\r\n            return dispatch({type:COUNT_MINUS_REQUEST});  \r\n        }else{\r\n            return; \r\n        }\r\n    },[]); \r\n\r\n    const array = [\"array1\",\"array2\",\"array3\"]\r\n\r\n\r\n\r\n    const ref = createRef(); \r\n\r\n    const onChageedFunc = (e)=>{\r\n            console.log('sex-->  ',e.target.value); \r\n    }\r\n    const testBtn = (e)=>{\r\n\r\n        onChageedFunc(e); \r\n       // console.log(e.target.name);\r\n      // console.log(ref.current); \r\n        //console.log( ref.current.getElementById(\"good\").value); \r\n      \r\n    }\r\n                                 \r\n                              \r\n    return (\r\n        <div>\r\n        {array.map((v,i)=>(\r\n\r\n            <input type=\"text\" ref={ref} name={\"a01\"} onChange={onChageedFunc} value={v}/>\r\n\r\n        ))}\r\n             </div>\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    )\r\n\r\n}\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}