{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test2.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback, useRef, current } from 'react';\n\nvar Test2 = function Test2() {\n  _s();\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var handleClick = useCallback(function () {\n    return console.log('clicked!');\n  }, []); // useCallback 사용\n  //컴포넌트가 렌더링 될 때마다 함수를 새로 생성한다는 단점이 있다. \n  //부모 컴포넌트가 렌더링되거나, 상태가 변경되는 경우, React 컴포넌트는 렌더링을 유발한다.\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"\\uCE74\\uC6B4\\uD2B8 \\uC62C\\uB9AC\\uAE30\"), __jsx(\"button\", {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"\\uD074\\uB9AD\\uD574\\uBCF4\\uC138\\uC694!\"));\n};\n\n_s(Test2, \"1cB4ljO+WlCyM3OAm4ykdyUJXqU=\");\n\n_c = Test2;\nexport default Test2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test2.js"],"names":["React","useState","useMemo","useCallback","useRef","current","Test2","count","setCount","handleClick","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAoE,OAApE;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAK;AAAA;;AAAA,kBACWL,QAAQ,CAAC,CAAD,CADnB;AAAA,MACRM,KADQ;AAAA,MACDC,QADC;;AAEf,MAAMC,WAAW,GAAGN,WAAW,CAC3B;AAAA,WAAMO,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA,GAD2B,EAE7B,EAF6B,CAA/B,CAFe,CAIT;AAEN;AACA;;AACA,SAEI,4BACA;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADA,EAEA;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFA,CAFJ;AAQH,CAhBD;;GAAMH,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React, {useState, useMemo, useCallback,useRef ,current} from 'react'\r\n\r\n\r\n\r\n\r\nconst Test2 = () =>{\r\n    const [count, setCount] = useState(0)\r\n    const handleClick = useCallback(\r\n        () => console.log('clicked!'),\r\n      []) // useCallback 사용\r\n    \r\n    //컴포넌트가 렌더링 될 때마다 함수를 새로 생성한다는 단점이 있다. \r\n    //부모 컴포넌트가 렌더링되거나, 상태가 변경되는 경우, React 컴포넌트는 렌더링을 유발한다.\r\n    return (\r\n\r\n        <>\r\n        <button onClick={() => setCount(count + 1)}>카운트 올리기</button>\r\n        <button onClick={handleClick}>클릭해보세요!</button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Test2; "]},"metadata":{},"sourceType":"module"}