{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport Comment1001ByComments from './mainPosts_1001_commentByComments';\nimport CommentTextArea from './mainPosts_1001_textArea';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST } from '../../reducers/mainPosts_1001';\nimport { Badge } from 'antd';\n\nvar Comments1001 = function Comments1001(_ref) {\n  _s();\n\n  var commentList = _ref.commentList;\n  console.log('댓글 commentList', commentList);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      clickCommentId = _useSelector.clickCommentId;\n\n  var ref = createRef();\n  var blank_pattern = /^\\s+|\\s+&/g;\n\n  var _useState = useState([]),\n      array = _useState[0],\n      setArray = _useState[1];\n\n  useEffect(function () {\n    setArray(_toConsumableArray(commentList));\n  }, [commentList]); //대댓글 입력 \n  //   const insertComment = useCallback((postFlag,postId,nickName ,comment)=>{\n  //     if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\n  //         alert('댓글을 입력해 주세요!'); \n  //         ref.current.focus();  \n  //         return; \n  //         }\n  //         dispatch({\n  //             type:MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST, \n  //             data:{\n  //                 postFlag,\n  //                 nickName,\n  //                 postId,\n  //                 commentId,\n  //                 who:userInfo,\n  //                 comment,   \n  //             }\n  //         })\n  //       },[mainPosts_1001CommentByComments]);\n\n  return __jsx(React.Fragment, null);\n};\n\n_s(Comments1001, \"l/8xSwQqPK6iFzOsg0SsH00JBBM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments1001;\nexport default _c2 = memo(Comments1001);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comments1001\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments copy.js"],"names":["React","useCallback","useEffect","useState","createRef","memo","useDispatch","useSelector","custumDateFormat","Comment1001ByComments","CommentTextArea","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST","Badge","Comments1001","commentList","console","log","dispatch","state","mainPosts_1001","clickCommentId","ref","blank_pattern","array","setArray"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,IAA5D,QAAwE,OAAxE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,gBAAP,MAA8B,sCAA9B;AAEA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,eAAP,MAAkC,2BAAlC;AACA,SAAQC,cAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,SAEQC,6CAFR,QAIK,+BAJL;AAKA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAiB;AAAA;;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAEdC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,WAA7B;AAEhB,MAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAJ8B,qBAKLC,WAAW,CAAC,UAACa,KAAD;AAAA,WAASA,KAAK,CAACC,cAAf;AAAA,GAAD,CALN;AAAA,MAKvBC,cALuB,gBAKvBA,cALuB;;AAM9B,MAAMC,GAAG,GAAGnB,SAAS,EAArB;AACA,MAAMoB,aAAa,GAAG,YAAtB;;AAP8B,kBASHrB,QAAQ,CAAC,EAAD,CATL;AAAA,MASvBsB,KATuB;AAAA,MASfC,QATe;;AAU9BxB,EAAAA,SAAS,CAAC,YAAI;AACVwB,IAAAA,QAAQ,oBAAKV,WAAL,EAAR;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT,CAV8B,CAclC;AACJ;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,SACI,2BADJ;AASH,CAlDD;;GAAMD,Y;UAImBT,W,EACQC,W;;;KAL3BQ,Y;AAoDN,qBAAeV,IAAI,CAACU,YAAD,CAAnB","sourcesContent":["import React, { useCallback,useEffect, useState, createRef, memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\n\r\nimport Comment1001ByComments from './mainPosts_1001_commentByComments'\r\nimport CommentTextArea       from './mainPosts_1001_textArea'\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n        MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\nimport { Badge } from 'antd';\r\n\r\nconst Comments1001 = ({commentList})=>{\r\n                \r\n                        console.log('댓글 commentList',commentList);\r\n                        \r\n        const dispatch = useDispatch();\r\n        const {clickCommentId} = useSelector((state)=>state.mainPosts_1001); \r\n        const ref = createRef(); \r\n        const blank_pattern = /^\\s+|\\s+&/g;  \r\n\r\n        const [array , setArray] = useState([]); \r\n        useEffect(()=>{\r\n            setArray([...commentList]); \r\n        },[commentList])\r\n        \r\n    //대댓글 입력 \r\n//   const insertComment = useCallback((postFlag,postId,nickName ,comment)=>{\r\n   \r\n//     if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n      \r\n         \r\n//         alert('댓글을 입력해 주세요!'); \r\n//         ref.current.focus();  \r\n//         return; \r\n//         }\r\n\r\n\r\n//         dispatch({\r\n//             type:MAINPOSTS_1001_COMMENTBYCOMMENTINSERT_REQUEST, \r\n//             data:{\r\n//                 postFlag,\r\n//                 nickName,\r\n//                 postId,\r\n//                 commentId,\r\n//                 who:userInfo,\r\n//                 comment,   \r\n//             }\r\n//         })\r\n//       },[mainPosts_1001CommentByComments]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n     \r\n        </>   \r\n\r\n\r\n                \r\n    )\r\n\r\n}\r\n\r\nexport default memo(Comments1001); "]},"metadata":{},"sourceType":"module"}