{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\CKEditor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input, Alert } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { EMP_INSERT_REQUEST, TEST_REQUEST } from '../reducers/emp';\n\nvar Editor = function Editor() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.emp;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  var _useState = useState(''),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTtile = _useState2[1];\n\n  var imageInput = useRef();\n\n  var testSummit = function testSummit() {\n    dispatch({\n      type: TEST_REQUEST\n    });\n  }; //게시글 제출 \n\n\n  var contentSummit = function contentSummit() {\n    dispatch({\n      type: EMP_INSERT_REQUEST,\n      data: {\n        content: content,\n        title: title,\n        userNickName: userInfo\n      }\n    });\n  }; //제목 입력\n\n\n  var onChangeTtitle = useCallback(function (e) {\n    setTtile(e.target.value);\n  }, [title]); //이미지 업로드 창 \n\n  var onChangeImages = useCallback(function (e) {\n    var imageFormData = new FormData();\n    Array.prototype.forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []); //이미지 업로드 클릭 \n\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(\"div\", {\n    className: \"demo-editor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC791\\uC131\\uD574 \\uBCF4\\uC138\\uC694!\"), __jsx(Input, {\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    onChange: onChangeTtitle,\n    style: {\n      marginBottom: '1%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(CKEditor, {\n    editor: ClassicEditor,\n    config: {\n      ckfinder: {\n        uploadUrl: 'http://localhost:3095/api/emp/ckeditor' //  headers:{\n        //     \"X-CSRF-TOKEN\": \"CSFR-Token\",\n        //     \"Access-Control-Allow-Origin\":\"*\", \n        // }\n\n      },\n      toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'imageUpload'],\n      placeholder: \"글을 입력해보세요!\"\n    } //data=\"<p>Hello from CKEditor 5!</p>\"\n    //최소 실행시 보여줄 문구 \n    ,\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setContent(data);\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    onClick: contentSummit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"\\uC791\\uC131\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: testSummit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"TEST\"));\n};\n\n_s(Editor, \"n0Bu4pc9QXhpvfuYXYv6qw304p8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/CKEditor.js"],"names":["useState","useCallback","useRef","useDispatch","useSelector","Button","Input","Alert","CKEditor","ClassicEditor","EMP_INSERT_REQUEST","TEST_REQUEST","Editor","dispatch","state","emp","imagePaths","auth","userInfo","content","setContent","title","setTtile","imageInput","testSummit","type","contentSummit","data","userNickName","onChangeTtitle","e","target","value","onChangeImages","imageFormData","FormData","Array","prototype","forEach","call","files","f","append","UPLOAD_IMAGES_REQUEST","onClickImageUpload","current","click","marginBottom","ckfinder","uploadUrl","toolbar","placeholder","editor","console","log","event","getData"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button, Input, Alert} from 'antd'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport \r\n    {\r\n        EMP_INSERT_REQUEST,\r\n        TEST_REQUEST\r\n    } \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Editor = ()=>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const {imagePaths} = useSelector((state)=>state.emp);\r\n    const {userInfo} = useSelector((state)=>state.auth); \r\n    const [content,setContent] = useState('');   \r\n    const [title,setTtile] = useState(''); \r\n    const imageInput = useRef(); \r\n\r\n    const testSummit = () =>{\r\n\r\n        dispatch({\r\n            type: TEST_REQUEST,\r\n\r\n\r\n       }); \r\n    }\r\n\r\n\r\n    //게시글 제출 \r\n    const contentSummit = ()=>{\r\n        \r\n            dispatch({\r\n                 type: EMP_INSERT_REQUEST,\r\n                 data: {content:content,\r\n                        title:title,\r\n                        userNickName:userInfo, \r\n                },\r\n\r\n            }); \r\n    }\r\n\r\n    //제목 입력\r\n    const onChangeTtitle  = useCallback((e)=>{\r\n        setTtile(e.target.value); \r\n    },[title])\r\n\r\n    //이미지 업로드 창 \r\n    const onChangeImages = useCallback((e)=>{\r\n    \r\n        const imageFormData = new FormData(); \r\n        Array.prototype.forEach.call(e.target.files ,(f)=>{\r\n            imageFormData.append('image',f); \r\n        });\r\n        \r\n        dispatch({\r\n                type:UPLOAD_IMAGES_REQUEST,\r\n                data:imageFormData,             \r\n        }); \r\n\r\n    },[]); \r\n\r\n\r\n    //이미지 업로드 클릭 \r\n    const onClickImageUpload = useCallback(() =>{\r\n        imageInput.current.click(); \r\n\r\n    },[imageInput.current]); \r\n\r\n\r\n    return(\r\n\r\n        \r\n        <div className=\"demo-editor\">\r\n        <h2>게시글을 작성해 보세요!</h2>\r\n        {/*\r\n        <input type=\"file\" multiple ref={imageInput} onChange={onChangeImages} hidden />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        */}\r\n        <Input placeholder='제목을 입력하세요' onChange={onChangeTtitle} style={{marginBottom:'1%'}}/>\r\n        <CKEditor\r\n            editor={ ClassicEditor }\r\n            config={{\r\n             \r\n                ckfinder:{\r\n                     uploadUrl:'http://localhost:3095/api/emp/ckeditor',\r\n        \r\n                    //  headers:{\r\n                    //     \"X-CSRF-TOKEN\": \"CSFR-Token\",\r\n                    //     \"Access-Control-Allow-Origin\":\"*\", \r\n                    // }\r\n                    \r\n                },\r\n                toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList','imageUpload'],\r\n                placeholder: \"글을 입력해보세요!\",\r\n            \r\n\r\n            }}\r\n\r\n\r\n            //data=\"<p>Hello from CKEditor 5!</p>\"\r\n            //최소 실행시 보여줄 문구 \r\n\r\n            onInit={ editor => {\r\n                // You can store the \"editor\" and use when it is needed.\r\n                console.log( 'Editor is ready to use!', editor );\r\n            } }\r\n            onChange={ ( event, editor ) => {\r\n                const data = editor.getData();\r\n                setContent(data); \r\n                console.log( { event, editor, data } );\r\n            } }\r\n            onBlur={ ( event, editor ) => {\r\n                console.log( 'Blur.', editor );\r\n            } }\r\n            onFocus={ ( event, editor ) => {\r\n                console.log( 'Focus.', editor );\r\n            } }\r\n        />\r\n        <Button type=\"primary\" onClick={contentSummit} >작성</Button>\r\n        <Button type=\"primary\" onClick={testSummit} >TEST</Button>\r\n        </div>\r\n       \r\n\r\n    )\r\n\r\n} \r\n\r\n\r\nexport default Editor; "]},"metadata":{},"sourceType":"module"}