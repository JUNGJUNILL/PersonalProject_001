{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLogin: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginWithKakao\", function () {\n      try {\n        return new Promise(function (resolve, reject) {\n          if (!Kakao) {\n            reject('Kakao 인스턴스가 존재하지 않습니다.');\n          }\n\n          Kakao.Auth.login({\n            success: function success(auth) {\n              console.log('정상적으로 로그인 되었습니다.', auth);\n\n              _this.setState({\n                isLogin: true\n              });\n            },\n            fail: function fail(err) {\n              console.error(err);\n            }\n          });\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"logoutWithKakao\", function () {\n      if (Kakao.Auth.getAccessToken()) {\n        console.log('카카오 인증 액세스 토큰이 존재합니다.', Kakao.Auth.getAccessToken());\n        Kakao.Auth.logout(function () {\n          console.log('로그아웃 되었습니다', Kakao.Auth.getAccessToken());\n\n          _this.setState({\n            isLogin: false\n          });\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Kakao.init('6905840ea6abb16362e7bf0ba2cf16f5');\n\n      if (Kakao.Auth.getAccessToken()) {\n        console.log('액세스 토큰이 존재합니다. 세션을 유지합니다.');\n        this.setState({\n          isLogin: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLogin = this.state.isLogin;\n\n      var loginView = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, \"\\uB85C\\uADF8\\uC778\\uD654\\uBA74\"), __jsx(\"button\", {\n        onClick: this.loginWithKakao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"));\n\n      var mainView = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, \"\\uBA54\\uC778 \\uD654\\uBA74\"), __jsx(\"button\", {\n        onClick: this.logoutWithKakao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC544\\uC6C3\"));\n\n      return __jsx(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, isLogin ? mainView : loginView);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/login.js"],"names":["React","Component","Login","isLogin","Promise","resolve","reject","Kakao","Auth","login","success","auth","console","log","setState","fail","err","error","getAccessToken","logout","init","state","loginView","loginWithKakao","mainView","logoutWithKakao"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,K;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE;AADH,K;;qEAGS,YAAM;AACrB,UAAI;AACF,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,cAAI,CAACC,KAAL,EAAY;AACVD,YAAAA,MAAM,CAAC,wBAAD,CAAN;AACD;;AACDC,UAAAA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB;AACfC,YAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;;AACA,oBAAKG,QAAL,CAAc;AACZX,gBAAAA,OAAO,EAAE;AADG,eAAd;AAGD,aANc;AAOfY,YAAAA,IAAI,EAAE,cAACC,GAAD,EAAS;AACbJ,cAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACD;AATc,WAAjB;AAWD,SAfM,CAAP;AAgBD,OAjBD,CAiBE,OAAOA,GAAP,EAAY;AACZJ,QAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACD;AACF,K;;sEACiB,YAAM;AACtB,UAAIT,KAAK,CAACC,IAAN,CAAWU,cAAX,EAAJ,EAAiC;AAC/BN,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,KAAK,CAACC,IAAN,CAAWU,cAAX,EAArC;AACAX,QAAAA,KAAK,CAACC,IAAN,CAAWW,MAAX,CAAkB,YAAM;AACtBP,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,KAAK,CAACC,IAAN,CAAWU,cAAX,EAA1B;;AACA,gBAAKJ,QAAL,CAAc;AACZX,YAAAA,OAAO,EAAE;AADG,WAAd;AAGD,SALD;AAMD;AACF,K;;;;;;;wCACmB;AAClBI,MAAAA,KAAK,CAACa,IAAN,CAAW,kCAAX;;AACA,UAAIb,KAAK,CAACC,IAAN,CAAWU,cAAX,EAAJ,EAAiC;AAC/BN,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,aAAKC,QAAL,CAAc;AACZX,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF;;;6BACQ;AAAA,UACCA,OADD,GACa,KAAKkB,KADlB,CACClB,OADD;;AAGP,UAAMmB,SAAS,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADiB,EAEjB;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFiB,CAAnB;;AAKA,UAAMC,QAAQ,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADgB,EAEhB;AAAQ,QAAA,OAAO,EAAE,KAAKC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFgB,CAAlB;;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGtB,OAAO,GAAGqB,QAAH,GAAcF,SADxB,CADF;AAKD;;;;EA/DiBrB,S;;AAkEpB,eAAeC,KAAf","sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isLogin: false,\r\n  }\r\n  loginWithKakao = () => {\r\n    try {\r\n      return new Promise((resolve, reject) => {\r\n        if (!Kakao) {\r\n          reject('Kakao 인스턴스가 존재하지 않습니다.')\r\n        }\r\n        Kakao.Auth.login({\r\n          success: (auth) => {\r\n            console.log('정상적으로 로그인 되었습니다.', auth)\r\n            this.setState({\r\n              isLogin: true\r\n            })\r\n          },\r\n          fail: (err) => {\r\n            console.error(err)\r\n          }\r\n        })\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n  logoutWithKakao = () => {\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      console.log('카카오 인증 액세스 토큰이 존재합니다.', Kakao.Auth.getAccessToken())\r\n      Kakao.Auth.logout(() => {\r\n        console.log('로그아웃 되었습니다', Kakao.Auth.getAccessToken());\r\n        this.setState({\r\n          isLogin: false\r\n        })        \r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    Kakao.init('6905840ea6abb16362e7bf0ba2cf16f5');\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      console.log('액세스 토큰이 존재합니다. 세션을 유지합니다.')\r\n      this.setState({\r\n        isLogin: true\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { isLogin } = this.state;\r\n\r\n    const loginView = (<div>\r\n      <p>로그인화면</p>\r\n      <button onClick={this.loginWithKakao}>카카오 로그인</button>\r\n    </div>)\r\n\r\n    const mainView = (<div>\r\n      <p>메인 화면</p>\r\n      <button onClick={this.logoutWithKakao}>카카오 로그아웃</button>\r\n    </div>)\r\n    return (\r\n      <div className=\"App\">\r\n        {isLogin ? mainView : loginView}     \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}