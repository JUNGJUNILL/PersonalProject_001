{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Item from '../components/testComponent/Item';\nimport CreateUser from '../components/testComponent/CreateUser';\nimport UserList from '../components/testComponent/UserList';\n\nvar Test = function Test() {\n  _s();\n\n  var _useState = useState([1, 2, 3]),\n      numbers = _useState[0],\n      setNumbers = _useState[1];\n\n  var _useState2 = useState([]),\n      array = _useState2[0],\n      setArray = _useState2[1];\n\n  var addNumber = function addNumber() {\n    setArray(_toConsumableArray(numbers)); //배열 추가 시 \n    //setNumbers(prev => [...prev, prev.length + 1]);\n\n    console.log('numbers=>', numbers, 'array=>', array);\n  };\n\n  useEffect(function () {\n    setArray(_toConsumableArray(numbers));\n  }, []); // const updateArray = () =>{\n  //   setArray([...numbers]); \n  //   numbers.map((v,i)=>{\n  //     if(v===1){\n  //       array[i] = numbers[i]+1;  \n  //     }\n  //     if(v===2){\n  //       array[i] = numbers[i]+1;  \n  //     }\n  //     console.log('vv=>',v); \n  //   })\n  //   setArray(prev => [...array]);\n  // }\n\n  var _useState3 = useState({\n    username: '',\n    email: ''\n  }),\n      inputs = _useState3[0],\n      setInputs = _useState3[1];\n\n  var username = inputs.username,\n      email = inputs.email;\n\n  var onChange = function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  };\n\n  console.log('hello world');\n\n  var _useState4 = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com'\n  }]),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var nextId = useRef(4);\n\n  var onCreate = function onCreate() {\n    var user = {\n      id: nextId.current,\n      username: username,\n      email: email\n    }; //추가된 데이터를 위로 올리기 \n\n    setUsers([user].concat(_toConsumableArray(users))); //추가된 데이터를 아래로 올리기 \n    //setUsers([...users,user]);\n\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), __jsx(UserList, {\n    users: users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }));\n};\n\n_s(Test, \"EbApm4etqZ3MIKoyeb3x/wdl5k0=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useState","useEffect","useRef","Item","CreateUser","UserList","Test","numbers","setNumbers","array","setArray","addNumber","console","log","username","email","inputs","setInputs","onChange","e","target","name","value","id","users","setUsers","nextId","onCreate","user","current"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef } from \"react\";\r\nimport Item from '../components/testComponent/Item'\r\nimport CreateUser from '../components/testComponent/CreateUser'\r\nimport UserList from '../components/testComponent/UserList'\r\n\r\nconst Test = () =>{\r\n\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n\r\n\r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        //setNumbers(prev => [...prev, prev.length + 1]);\r\n        \r\n        console.log('numbers=>' , numbers, 'array=>' , array); \r\n\r\n      };\r\n\r\n      useEffect(()=>{\r\n\r\n        setArray([...numbers]); \r\n      },[]); \r\n\r\n    // const updateArray = () =>{\r\n\r\n    //   setArray([...numbers]); \r\n\r\n    //   numbers.map((v,i)=>{\r\n    //     if(v===1){\r\n    //       array[i] = numbers[i]+1;  \r\n    //     }\r\n    //     if(v===2){\r\n    //       array[i] = numbers[i]+1;  \r\n    //     }\r\n    //     console.log('vv=>',v); \r\n    //   })\r\n\r\n    //   setArray(prev => [...array]);\r\n\r\n    // }\r\n\r\n\r\n    const [inputs, setInputs] =useState({username:'', email:'', }); \r\n\r\n    \r\n    const { username, email } = inputs;\r\n\r\n    const onChange = e =>{\r\n      const {name, value} = e.target; \r\n\r\n      \r\n      setInputs({\r\n        ...inputs,[name]:value\r\n      }); \r\n    }\r\n    console.log('hello world'); \r\n\r\n    const [users, setUsers] = useState([\r\n      {\r\n        id: 1,\r\n        username: 'velopert',\r\n        email: 'public.velopert@gmail.com'\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'tester',\r\n        email: 'tester@example.com'\r\n      },\r\n      {\r\n        id: 3,\r\n        username: 'liz',\r\n        email: 'liz@example.com'\r\n      }\r\n    ]);\r\n  \r\n    const nextId = useRef(4);\r\n    const onCreate = () => {\r\n      \r\n      const user = {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      };\r\n      \r\n      //추가된 데이터를 위로 올리기 \r\n      setUsers([user,...users]);\r\n\r\n      //추가된 데이터를 아래로 올리기 \r\n      //setUsers([...users,user]);\r\n\r\n\r\n      setInputs({\r\n        username: '',\r\n        email: ''\r\n      });\r\n  \r\n      nextId.current += 1;\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>\r\n          <CreateUser \r\n            username={username}\r\n            email={email}\r\n            onChange={onChange}\r\n            onCreate={onCreate}\r\n          />\r\n          <UserList users={users} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test; "]},"metadata":{},"sourceType":"module"}