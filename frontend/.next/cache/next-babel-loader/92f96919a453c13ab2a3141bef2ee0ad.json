{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\detailPage copy.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home from '../components/mainPosts_1001/mainPosts_1001';\nimport Comments1001 from '../components/mainPosts_1001/mainPosts_1001_comments copy';\nimport CommentTextArea from '../components/mainPosts_1001/mainPosts_1001_textArea';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST, MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST } from '../reducers/mainPosts_1001';\nimport { DislikeTwoTone, LikeTwoTone, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nvar detailPage = function detailPage(_ref) {\n  _s();\n\n  var nickName = _ref.nickName,\n      postFlag = _ref.postFlag,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      mainPosts_1001Info = _useSelector.mainPosts_1001Info,\n      mainPosts_1001Comments = _useSelector.mainPosts_1001Comments,\n      mainPosts_1001CommentByComments = _useSelector.mainPosts_1001CommentByComments;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  var ref = createRef();\n  var blank_pattern = /^\\s+|\\s+&/g;\n\n  var _useState = useState(''),\n      insertClick = _useState[0],\n      setInsertClick = _useState[1];\n\n  var _useState2 = useState(''),\n      unfoldList = _useState2[0],\n      setUnfoldList = _useState2[1];\n\n  console.log('디테일 mainPosts_1001Comments', mainPosts_1001Comments); // useEffect(()=>{\n  //   console.log('디테일 useEffect'); \n  //   //댓글 리스트 \n  //   // dispatch({\n  //   //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \n  //   //   data:{\n  //   //     postId,\n  //   //     nickName,\n  //   //     postFlag,\n  //   //     who:userInfo, \n  //   //   }\n  //   // }); \n  //   //상세 정보 \n  //   // dispatch({\n  //   //       type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \n  //   //       data:{\n  //   //         postId,\n  //   //         nickName,\n  //   //         postFlag,\n  //   //       }\n  //   // });\n  // },[]);\n  //좋아요, 싫어요 버튼 \n\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    }\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      //댓글 좋아요!\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName,\n          mainPosts_1001Comments: _toConsumableArray(mainPosts_1001Comments)\n        }\n      });\n    }\n\n    alert(\"\".concat(likeDislike));\n  }, [mainPosts_1001Comments]); //댓글 입력 \n\n  var insertComment = useCallback(function (postFlag, postId, nickName, comment) {\n    if (comment.length === 0 || comment.replace(blank_pattern, '') === \"\") {\n      alert('댓글을 입력해 주세요!');\n      ref.current.focus();\n      return;\n    }\n\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    } //댓글 입력\n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTINSERT_REQUEST,\n      data: {\n        postId: postId,\n        postFlag: postFlag,\n        nickName: nickName,\n        who: userInfo,\n        comment: comment\n      }\n    }); //clear the input \n\n    setInsertClick('clicked');\n  }, [mainPosts_1001Comments]); //대댓글 리스트 \n\n  var commentByCommentList = useCallback(function (postFlag, nickName, postId, commentId, byCommentCount) {\n    if (byCommentCount > 0) {\n      setUnfoldList('unfold');\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST,\n        data: {\n          postFlag: postFlag,\n          nickName: nickName,\n          postId: postId,\n          commentId: commentId\n        }\n      });\n    } else {//setUnfoldList('333'); \n    }\n  }, [mainPosts_1001CommentByComments, unfoldList]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCellTh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, mainPosts_1001Info[0].title, \" [\", mainPosts_1001Comments.length, \"]\")), __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, __jsx(UserOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }), \"  \", mainPosts_1001Info[0].userNickName, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 73\n    }\n  }), __jsx(FieldTimeOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }), \"  \", custumDateFormat(mainPosts_1001Info[0].createdDate), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 95\n    }\n  }), __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }), \" : \", mainPosts_1001Info[0].good, \" \", __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 88\n    }\n  }), \" : \", mainPosts_1001Info[0].bad))), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: mainPosts_1001Info[0].content\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      border: \"1px solid\",\n      borderColor: \"#8cc49c\",\n      marginTop: \"1%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, \"\\uAD11\\uACE0\\uC785\\uB2C8\\uB2E4.\"), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRowTh\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, __jsx(LikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  })), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 90\n    }\n  }, __jsx(DislikeTwoTone, {\n    twoToneColor: \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 98\n    }\n  })))), __jsx(CommentTextArea, {\n    postFlag: postFlag,\n    nickName: nickName,\n    postId: postId,\n    userInfo: userInfo,\n    insertComment: insertComment,\n    insertClick: insertClick,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: \"divTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, __jsx(Comments1001, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(detailPage, \"grDsInt+Zk0jcefRquV4g6cvZWQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\ndetailPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var postId, nickName, postFlag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postId = context.query.postId;\n            nickName = context.query.nickName;\n            postFlag = context.query.postFlag;\n            return _context.abrupt(\"return\", {\n              nickName: nickName,\n              postFlag: postFlag,\n              postId: postId\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default detailPage;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/detailPage copy.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Home","Comments1001","CommentTextArea","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST","DislikeTwoTone","LikeTwoTone","UserOutlined","FieldTimeOutlined","Button","custumDateFormat","detailPage","nickName","postFlag","postId","dispatch","state","mainPosts_1001","mainPosts_1001Info","mainPosts_1001Comments","mainPosts_1001CommentByComments","auth","userInfo","ref","blank_pattern","insertClick","setInsertClick","unfoldList","setUnfoldList","console","log","likeBtn","commentid","flag","likeDislike","alert","type","data","who","insertComment","comment","length","replace","current","focus","commentByCommentList","commentId","byCommentCount","marginTop","title","userNickName","createdDate","good","bad","width","height","border","borderColor","display","justifyContent","alignItems","__html","content","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/mainPosts_1001/mainPosts_1001'\r\nimport Comments1001 from '../components/mainPosts_1001/mainPosts_1001_comments copy'\r\nimport CommentTextArea from '../components/mainPosts_1001/mainPosts_1001_textArea'\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n     MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\nimport {DislikeTwoTone,LikeTwoTone , UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport {Button} from 'antd'\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\nconst detailPage  = ({nickName,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const {mainPosts_1001Info , \r\n         mainPosts_1001Comments,\r\n         mainPosts_1001CommentByComments\r\n        } = useSelector((state)=>state.mainPosts_1001); \r\n\r\n  const {userInfo}      = useSelector((state)=>state.auth);\r\n  const ref = createRef(); \r\n  const blank_pattern = /^\\s+|\\s+&/g;  \r\n  const [insertClick, setInsertClick] = useState('');\r\n  const [unfoldList,setUnfoldList] = useState('');  \r\n\r\n  console.log('디테일 mainPosts_1001Comments' ,mainPosts_1001Comments); \r\n  // useEffect(()=>{\r\n  //   console.log('디테일 useEffect'); \r\n  //   //댓글 리스트 \r\n  //   // dispatch({\r\n  //   //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n  //   //   data:{\r\n  //   //     postId,\r\n  //   //     nickName,\r\n  //   //     postFlag,\r\n  //   //     who:userInfo, \r\n  //   //   }\r\n  //   // }); \r\n\r\n  //   //상세 정보 \r\n  //   // dispatch({\r\n  //   //       type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \r\n  //   //       data:{\r\n  //   //         postId,\r\n  //   //         nickName,\r\n  //   //         postFlag,\r\n  //   //       }\r\n  //   // });\r\n\r\n  // },[]);\r\n\r\n\r\n  //좋아요, 싫어요 버튼 \r\n  const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n      if(!userInfo){\r\n        alert('로그인이 필요한 서비스 입니다.'); \r\n        return;\r\n      }\r\n\r\n      if(flag===\"Y\"){\r\n        \r\n        alert('이미 좋아요! 싫어요! 했습니다.'); \r\n        return; \r\n  \r\n      }else{\r\n\r\n        //댓글 좋아요!\r\n        dispatch({\r\n          type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n          data:{\r\n            commentid,\r\n            postFlag,\r\n            postId,\r\n            flag: likeDislike ,\r\n            who: userInfo,\r\n            nickName,\r\n            mainPosts_1001Comments:[...mainPosts_1001Comments],\r\n          }\r\n      }); \r\n\r\n    }\r\n\r\n     alert(`${likeDislike}`); \r\n    \r\n    },[mainPosts_1001Comments]); \r\n\r\n\r\n  //댓글 입력 \r\n  const insertComment = useCallback((postFlag,postId,nickName ,comment)=>{\r\n    if(comment.length === 0 || comment.replace(blank_pattern,'')===\"\"){\r\n      \r\n         \r\n        alert('댓글을 입력해 주세요!'); \r\n        ref.current.focus();  \r\n        return; \r\n        }\r\n    \r\n        if(comment.length === 300){\r\n          alert('300자 이상 입력 할 수 없습니다.'); \r\n          return; \r\n        }\r\n\r\n          //댓글 입력\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTINSERT_REQUEST, \r\n            data:{\r\n              postId,\r\n              postFlag,\r\n              nickName ,\r\n              who:userInfo, \r\n              comment,\r\n            }\r\n        });\r\n\r\n        //clear the input \r\n        setInsertClick('clicked')        \r\n\r\n      },[mainPosts_1001Comments]);\r\n\r\n\r\n\r\n      //대댓글 리스트 \r\n      const commentByCommentList =useCallback((postFlag,nickName,postId,commentId,byCommentCount)=>{\r\n\r\n\r\n               if(byCommentCount > 0 ){\r\n      \r\n                \r\n                setUnfoldList('unfold'); \r\n                dispatch({\r\n                    type:MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST,\r\n                    data:{\r\n                        postFlag,\r\n                        nickName,\r\n                        postId,\r\n                        commentId,\r\n                    }\r\n                });      \r\n\r\n                }else{\r\n                    //setUnfoldList('333'); \r\n                }\r\n      },[mainPosts_1001CommentByComments,unfoldList]); \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n    <div >\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n      <div className='divTable' style={{marginTop:'3%'}}>\r\n            <div className='divTableRowTh'>\r\n                <div className='divTableCellTh'>{mainPosts_1001Info[0].title} [{mainPosts_1001Comments.length}]</div>\r\n           </div>\r\n           <div className='divTableRow'>\r\n                <div className='divTableCell'>\r\n                  <UserOutlined />  {mainPosts_1001Info[0].userNickName}<br />\r\n                  <FieldTimeOutlined />  {custumDateFormat(mainPosts_1001Info[0].createdDate)}<br />\r\n                  <LikeTwoTone twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].good} <DislikeTwoTone  twoToneColor=\"#1ba640\"/> : {mainPosts_1001Info[0].bad} \r\n                </div>\r\n           </div>\r\n      </div>\r\n    {/*상세 페이지 타이틀--------------------------------------------------------------------------------*/}\r\n\r\n      <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n         광고입니다.\r\n      </div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",marginTop:\"1%\"}}>\r\n        <div dangerouslySetInnerHTML={{__html:mainPosts_1001Info[0].content}}/>\r\n     </div> \r\n    {/*상세 페이지 컨텐츠--------------------------------------------------------------------------------*/}   \r\n    \r\n\r\n\r\n\r\n\r\n    <div style={{width:\"100%\",height:\"auto\", border:\"1px solid\", borderColor:\"#8cc49c\",marginTop:\"1%\"}}>\r\n      광고입니다.\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n    <div className='divTable'>\r\n      <div className='divTableRowTh' style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n          <Button><LikeTwoTone  twoToneColor=\"#1ba640\"/></Button>&nbsp;&nbsp;&nbsp;&nbsp;<Button><DislikeTwoTone twoToneColor=\"#1ba640\"/></Button>\r\n      </div>\r\n    </div>\r\n    {/*좋아요 싫어요 버튼--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n   <CommentTextArea   \r\n            postFlag={postFlag} \r\n            nickName={nickName} \r\n            postId={postId} \r\n            userInfo={userInfo}\r\n            insertComment={insertComment}\r\n            insertClick={insertClick}\r\n            ref={ref}\r\n   />\r\n    {/*댓글 입력--------------------------------------------------------------------------------*/}\r\n\r\n\r\n\r\n\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n    <div className=\"divTable\">  \r\n      <Comments1001 />\r\n    </div>\r\n\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n\r\n    </div>\r\n        )\r\n}\r\n\r\n\r\ndetailPage.getInitialProps = async (context) =>{\r\n\r\n  const postId   = context.query.postId; \r\n  const nickName = context.query.nickName; \r\n  const postFlag = context.query.postFlag; \r\n\r\n\r\n\r\n  return {nickName,postFlag,postId}; \r\n}\r\nexport default detailPage; "]},"metadata":{},"sourceType":"module"}