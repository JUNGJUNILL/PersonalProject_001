{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nconst Comments1001 = ({\n  createdDate,\n  comment,\n  commentId,\n  flag,\n  good,\n  bad,\n  nickName,\n  who,\n  postFlag,\n  postId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: goodCount,\n    1: setGoodCount\n  } = useState(good);\n  let badCount = parseInt(bad);\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  const {\n    0: disLike,\n    1: setDisLike\n  } = useState(false);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  const likeBtn = useCallback((commentid, flag, likeDislike) => {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      if (likeDislike === \"good\") {\n        setLike(true);\n        setDisLike(false);\n      } else {\n        setLike(false);\n        setDisLike(true);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid,\n          postFlag,\n          postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName\n        }\n      });\n    } //  setGoodCount(parseInt(good)+1); \n    //댓글 리스트 \n    //   dispatch({\n    //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \n    //     data:{\n    //       postId,\n    //       nickName,\n    //       postFlag,\n    //       who:userInfo, \n    //     }\n    // }); \n\n\n    alert(`${likeDislike}`);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 87\n    }\n  }), comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'good'),\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }), goodCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'bad'),\n    twoToneColor: disLike ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 167\n    }\n  }), badCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 310\n    }\n  }))));\n};\n\nexport default Comments1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","createdDate","comment","commentId","flag","good","bad","nickName","who","postFlag","postId","dispatch","goodCount","setGoodCount","badCount","parseInt","like","setLike","disLike","setDisLike","userInfo","state","auth","likeBtn","commentid","likeDislike","alert","type","data","marginTop","display","float"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({createdDate,comment,commentId,flag,good,bad,nickName,who,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch();\r\n    const [goodCount,setGoodCount] = useState(good);  \r\n    \r\n    let badCount  =parseInt(bad); \r\n    const [like , setLike]  = useState(false); \r\n    const [disLike , setDisLike]  = useState(false); \r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            if(likeDislike ===\"good\"){\r\n                setLike(true); \r\n                setDisLike(false); \r\n            }else{\r\n                setLike(false); \r\n                setDisLike(true); \r\n            }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n\r\n    \r\n        }\r\n      //  setGoodCount(parseInt(good)+1); \r\n        //댓글 리스트 \r\n      //   dispatch({\r\n      //     type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n      //     data:{\r\n      //       postId,\r\n      //       nickName,\r\n      //       postFlag,\r\n      //       who:userInfo, \r\n      //     }\r\n         \r\n      // }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div  className='divTableRow' >\r\n                    <div  className=\"divTableCell\">\r\n                    <b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"}/>{goodCount}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={disLike ? \"#ff0000\" : \"#1ba640\"} />{badCount}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}