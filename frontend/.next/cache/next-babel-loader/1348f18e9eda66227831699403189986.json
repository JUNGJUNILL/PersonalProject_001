{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_textArea.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar CommentTextArea = function CommentTextArea(_ref) {\n  _s();\n\n  var postFlag = _ref.postFlag,\n      nickName = _ref.nickName,\n      postId = _ref.postId,\n      userInfo = _ref.userInfo,\n      insertComment = _ref.insertComment,\n      insertClick = _ref.insertClick;\n  var dispatch = useDispatch();\n  var ref = createRef();\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  useEffect(function () {\n    setComment('');\n  }, [insertClick.length > 0]); //댓글 입력 textArea \n\n  var onChageComment = useCallback(function (e) {\n    if (comment.length === 300) {\n      alert('300자 이상 입력 할 수 없습니다.');\n      return;\n    }\n\n    setComment(e.target.value);\n  }, [comment]);\n  return __jsx(React.Fragment, null, __jsx(\"textarea\", {\n    value: comment,\n    style: {\n      width: \"100%\",\n      height: \"80px\",\n      marginTop: \"3%\"\n    },\n    onChange: onChageComment,\n    placeholder: userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\",\n    readOnly: userInfo ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, comment ? comment.length : 0, \" / 300\"), userInfo && __jsx(\"div\", {\n    style: {\n      margin: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return insertComment(postFlag, postId, nickName, comment);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\uB313\\uAE00\\uB2EC\\uAE30\")));\n};\n\n_s(CommentTextArea, \"U/6rqIpvydc2OOLDIEEpSJaAy78=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentTextArea;\nexport default CommentTextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentTextArea\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_textArea.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Button","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","CommentTextArea","postFlag","nickName","postId","userInfo","insertComment","insertClick","dispatch","ref","comment","setComment","length","onChageComment","e","alert","target","value","width","height","marginTop","margin","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,SAEKC,oCAFL,EAGKC,+BAHL,QAKK,+BALL;;AAOA,IAAOC,eAAe,GAAE,SAAjBA,eAAiB,OAAkE;AAAA;;AAAA,MAAhEC,QAAgE,QAAhEA,QAAgE;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA9CC,MAA8C,QAA9CA,MAA8C;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAhBC,WAAgB,QAAhBA,WAAgB;AAEtF,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,GAAG,GAAGd,SAAS,EAArB;;AAHsF,kBAIxDD,QAAQ,CAAC,EAAD,CAJgD;AAAA,MAI/EgB,OAJ+E;AAAA,MAItEC,UAJsE;;AAOtFlB,EAAAA,SAAS,CAAC,YAAI;AAEZkB,IAAAA,UAAU,CAAC,EAAD,CAAV;AAED,GAJQ,EAIP,CAACJ,WAAW,CAACK,MAAZ,GAAqB,CAAtB,CAJO,CAAT,CAPsF,CAaxF;;AACA,MAAMC,cAAc,GAAErB,WAAW,CAAC,UAACsB,CAAD,EAAK;AAErC,QAAGJ,OAAO,CAACE,MAAR,KAAmB,GAAtB,EAA0B;AACxBG,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AACDJ,IAAAA,UAAU,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AAED,GARgC,EAQ/B,CAACP,OAAD,CAR+B,CAAjC;AAgBF,SACI,4BACA;AAAW,IAAA,KAAK,EAAEA,OAAlB;AAA4B,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC,MAArB;AAA4BC,MAAAA,SAAS,EAAC;AAAtC,KAAnC;AAAgF,IAAA,QAAQ,EAAEP,cAA1F;AAA0G,IAAA,WAAW,EAAGR,QAAQ,GAAG,cAAH,GAAoB,mBAApJ;AAAyK,IAAA,QAAQ,EAAEA,QAAQ,GAAG,KAAH,GAAW,IAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,KAAK,EAAE;AAACgB,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6B,eAAM;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,OAAO,GAAGA,OAAO,CAACE,MAAX,GAAqB,CAD/B,WAHA,EAOCP,QAAQ,IACL;AAAK,IAAA,KAAK,EAAE;AAACgB,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,OAAO,EAAC,OAArB;AAA6B,eAAM;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAIhB,aAAa,CAACJ,QAAD,EAAUE,MAAV,EAAiBD,QAAjB,EAA0BO,OAA1B,CAAjB;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CARJ,CADJ;AAiBC,CA/CD;;GAAOT,e;UAEcL,W;;;KAFdK,e;AAiDP,eAAeA,eAAf","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Button} from 'antd'\r\n\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst  CommentTextArea= ({postFlag,nickName,postId,userInfo,insertComment,insertClick}) =>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const ref = createRef(); \r\n    const [comment, setComment] = useState(''); \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n      setComment(''); \r\n\r\n    },[insertClick.length > 0 ])\r\n  \r\n  //댓글 입력 textArea \r\n  const onChageComment =useCallback((e)=>{\r\n\r\n    if(comment.length === 300){\r\n      alert('300자 이상 입력 할 수 없습니다.'); \r\n      return; \r\n    }\r\n    setComment(e.target.value); \r\n\r\n  },[comment]); \r\n  \r\n\r\n\r\n    \r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <textarea  value={comment}  style={{width:\"100%\",height:\"80px\",marginTop:\"3%\"}} onChange={onChageComment} placeholder={ userInfo ? \"댓글을 작성해 보세요!\" : \"로그인이 필요한 서비스 입니다.\"} readOnly={userInfo ? false : true}/>\r\n   \r\n    <div style={{margin:\"1%\",display:\"block\",float:\"left\"}}>\r\n      {comment ? comment.length  : 0 } &#47; 300\r\n    </div>\r\n\r\n    {userInfo && \r\n        <div style={{margin:\"1%\",display:\"block\",float:\"right\"}}>\r\n            <Button type=\"primary\" onClick={()=>insertComment(postFlag,postId,nickName,comment)}>댓글달기</Button>\r\n        </div>\r\n    }\r\n\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default CommentTextArea; "]},"metadata":{},"sourceType":"module"}