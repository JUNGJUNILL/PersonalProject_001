{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\detailPage copy.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home from '../components/mainPosts_1001/mainPosts_1001';\nimport Comments1001 from '../components/mainPosts_1001/mainPosts_1001_comments copy';\nimport CommentTextArea from '../components/mainPosts_1001/mainPosts_1001_textArea';\nimport { MAINPOSTS_1001_DETAIL_INFO_REQUEST, MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTINSERT_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST, MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST } from '../reducers/mainPosts_1001';\nimport { DislikeTwoTone, LikeTwoTone, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport custumDateFormat from '../utilComponent/custumDateFormat';\n\nvar detailPage = function detailPage(_ref) {\n  _s();\n\n  var nickName = _ref.nickName,\n      postFlag = _ref.postFlag,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      mainPosts_1001Info = _useSelector.mainPosts_1001Info,\n      mainPosts_1001CommentByComments = _useSelector.mainPosts_1001CommentByComments;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  var ref = createRef();\n  var blank_pattern = /^\\s+|\\s+&/g;\n\n  var _useState = useState(''),\n      insertClick = _useState[0],\n      setInsertClick = _useState[1];\n\n  var _useState2 = useState(''),\n      unfoldList = _useState2[0],\n      setUnfoldList = _useState2[1];\n\n  var _useState3 = useState(''),\n      test = _useState3[0],\n      setTest = _useState3[1]; // useEffect(()=>{\n  //   setTest('hello Woorld'); \n  // },[])\n\n\n  console.log('디테일'); // useEffect(()=>{\n  //   console.log('디테일 useEffect'); \n  //   //댓글 리스트 \n  //   // dispatch({\n  //   //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \n  //   //   data:{\n  //   //     postId,\n  //   //     nickName,\n  //   //     postFlag,\n  //   //     who:userInfo, \n  //   //   }\n  //   // }); \n  //   //상세 정보 \n  //   // dispatch({\n  //   //       type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \n  //   //       data:{\n  //   //         postId,\n  //   //         nickName,\n  //   //         postFlag,\n  //   //       }\n  //   // });\n  // },[]);\n  //좋아요, 싫어요 버튼 \n  // const likeBtn =useCallback((commentid,flag,likeDislike)=>{\n  //     if(!userInfo){\n  //       alert('로그인이 필요한 서비스 입니다.'); \n  //       return;\n  //     }\n  //     if(flag===\"Y\"){\n  //       alert('이미 좋아요! 싫어요! 했습니다.'); \n  //       return; \n  //     }else{\n  //       //댓글 좋아요!\n  //       dispatch({\n  //         type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \n  //         data:{\n  //           commentid,\n  //           postFlag,\n  //           postId,\n  //           flag: likeDislike ,\n  //           who: userInfo,\n  //           nickName,\n  //           mainPosts_1001Comments:[...mainPosts_1001Comments],\n  //         }\n  //     }); \n  //   }\n  //    alert(`${likeDislike}`); \n  //   },[mainPosts_1001Comments]); \n  //댓글 입력 \n  //대댓글 리스트 \n  // const commentByCommentList =useCallback((postFlag,nickName,postId,commentId,byCommentCount)=>{\n  //          if(byCommentCount > 0 ){\n  //           setUnfoldList('unfold'); \n  //           dispatch({\n  //               type:MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST,\n  //               data:{\n  //                   postFlag,\n  //                   nickName,\n  //                   postId,\n  //                   commentId,\n  //               }\n  //           });      \n  //           }else{\n  //               //setUnfoldList('333'); \n  //           }\n  // },[mainPosts_1001CommentByComments,unfoldList]); \n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, __jsx(Comments1001, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(detailPage, \"jT+d7YRuCweZD2A5PUlQB563zcY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\ndetailPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var postId, nickName, postFlag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postId = context.query.postId;\n            nickName = context.query.nickName;\n            postFlag = context.query.postFlag;\n            return _context.abrupt(\"return\", {\n              nickName: nickName,\n              postFlag: postFlag,\n              postId: postId\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default detailPage;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/detailPage copy.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","Home","Comments1001","CommentTextArea","MAINPOSTS_1001_DETAIL_INFO_REQUEST","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTINSERT_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST","DislikeTwoTone","LikeTwoTone","UserOutlined","FieldTimeOutlined","Button","custumDateFormat","detailPage","nickName","postFlag","postId","dispatch","state","mainPosts_1001","mainPosts_1001Info","mainPosts_1001CommentByComments","auth","userInfo","ref","blank_pattern","insertClick","setInsertClick","unfoldList","setUnfoldList","test","setTest","console","log","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/mainPosts_1001/mainPosts_1001'\r\nimport Comments1001 from '../components/mainPosts_1001/mainPosts_1001_comments copy'\r\nimport CommentTextArea from '../components/mainPosts_1001/mainPosts_1001_textArea'\r\nimport \r\n    {MAINPOSTS_1001_DETAIL_INFO_REQUEST,\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTINSERT_REQUEST,\r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n     MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST\r\n    } \r\nfrom '../reducers/mainPosts_1001'; \r\n\r\nimport {DislikeTwoTone,LikeTwoTone , UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\nimport {Button} from 'antd'\r\nimport custumDateFormat from  '../utilComponent/custumDateFormat';\r\n\r\n\r\n\r\nconst detailPage  = ({nickName,postFlag,postId}) =>{\r\n\r\n  const dispatch = useDispatch(); \r\n  const {mainPosts_1001Info , \r\n         \r\n         mainPosts_1001CommentByComments\r\n        } = useSelector((state)=>state.mainPosts_1001); \r\n\r\n  const {userInfo}      = useSelector((state)=>state.auth);\r\n  const ref = createRef(); \r\n  const blank_pattern = /^\\s+|\\s+&/g;  \r\n  const [insertClick, setInsertClick] = useState('');\r\n  const [unfoldList,setUnfoldList] = useState('');  \r\n  const [test,setTest] = useState(''); \r\n\r\n  // useEffect(()=>{\r\n  //   setTest('hello Woorld'); \r\n  // },[])\r\n\r\n  console.log('디테일'); \r\n  // useEffect(()=>{\r\n  //   console.log('디테일 useEffect'); \r\n  //   //댓글 리스트 \r\n  //   // dispatch({\r\n  //   //   type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n  //   //   data:{\r\n  //   //     postId,\r\n  //   //     nickName,\r\n  //   //     postFlag,\r\n  //   //     who:userInfo, \r\n  //   //   }\r\n  //   // }); \r\n\r\n  //   //상세 정보 \r\n  //   // dispatch({\r\n  //   //       type:MAINPOSTS_1001_DETAIL_INFO_REQUEST, \r\n  //   //       data:{\r\n  //   //         postId,\r\n  //   //         nickName,\r\n  //   //         postFlag,\r\n  //   //       }\r\n  //   // });\r\n\r\n  // },[]);\r\n\r\n\r\n  //좋아요, 싫어요 버튼 \r\n  // const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n  //     if(!userInfo){\r\n  //       alert('로그인이 필요한 서비스 입니다.'); \r\n  //       return;\r\n  //     }\r\n\r\n  //     if(flag===\"Y\"){\r\n        \r\n  //       alert('이미 좋아요! 싫어요! 했습니다.'); \r\n  //       return; \r\n  \r\n  //     }else{\r\n\r\n  //       //댓글 좋아요!\r\n  //       dispatch({\r\n  //         type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n  //         data:{\r\n  //           commentid,\r\n  //           postFlag,\r\n  //           postId,\r\n  //           flag: likeDislike ,\r\n  //           who: userInfo,\r\n  //           nickName,\r\n  //           mainPosts_1001Comments:[...mainPosts_1001Comments],\r\n  //         }\r\n  //     }); \r\n\r\n  //   }\r\n\r\n  //    alert(`${likeDislike}`); \r\n    \r\n  //   },[mainPosts_1001Comments]); \r\n\r\n\r\n  //댓글 입력 \r\n\r\n\r\n\r\n\r\n      //대댓글 리스트 \r\n      // const commentByCommentList =useCallback((postFlag,nickName,postId,commentId,byCommentCount)=>{\r\n\r\n\r\n      //          if(byCommentCount > 0 ){\r\n      \r\n                \r\n      //           setUnfoldList('unfold'); \r\n      //           dispatch({\r\n      //               type:MAINPOSTS_1001_COMMENTBYCOMMENT_REQUEST,\r\n      //               data:{\r\n      //                   postFlag,\r\n      //                   nickName,\r\n      //                   postId,\r\n      //                   commentId,\r\n      //               }\r\n      //           });      \r\n\r\n      //           }else{\r\n      //               //setUnfoldList('333'); \r\n      //           }\r\n      // },[mainPosts_1001CommentByComments,unfoldList]); \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n    <div >\r\n   \r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n \r\n      <Comments1001 />\r\n   \r\n\r\n    {/*댓글 리스트--------------------------------------------------------------------------------*/}\r\n\r\n    </div>\r\n        )\r\n}\r\n\r\n\r\ndetailPage.getInitialProps = async (context) =>{\r\n\r\n  const postId   = context.query.postId; \r\n  const nickName = context.query.nickName; \r\n  const postFlag = context.query.postFlag; \r\n\r\n\r\n\r\n  return {nickName,postFlag,postId}; \r\n}\r\nexport default detailPage; "]},"metadata":{},"sourceType":"module"}