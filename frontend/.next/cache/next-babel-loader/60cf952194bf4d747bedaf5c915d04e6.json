{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nvar Comments1001 = function Comments1001(_ref) {\n  _s();\n\n  var key = _ref.key,\n      postFlag = _ref.postFlag,\n      nickName = _ref.nickName,\n      postId = _ref.postId,\n      userInfo = _ref.userInfo,\n      commentId = _ref.commentId,\n      comment = _ref.comment,\n      who = _ref.who,\n      flag = _ref.flag,\n      good = _ref.good,\n      bad = _ref.bad,\n      createdDate = _ref.createdDate,\n      isAddcomment = _ref.isAddcomment,\n      likeDisLikeFalg = _ref.likeDisLikeFalg,\n      hello = _ref.hello,\n      realFlag = _ref.realFlag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.mainPosts_1001;\n  }),\n      clickCommentId = _useSelector.clickCommentId,\n      likeIsClicked = _useSelector.likeIsClicked;\n\n  var _useState = useState(parseInt(good)),\n      goodCount = _useState[0],\n      setGoodCount = _useState[1];\n\n  var _useState2 = useState(parseInt(bad)),\n      badCount = _useState2[0],\n      setBadCount = _useState2[1];\n\n  var _useState3 = useState(false),\n      like = _useState3[0],\n      setLike = _useState3[1];\n\n  var _useState4 = useState(false),\n      disLike = _useState4[0],\n      setDisLike = _useState4[1];\n\n  console.log('realFlag=>', realFlag, 'good=>   ', good, 'bad=>  ', bad, '   clickCommentId=> ', hello, '  commentId=>  ', commentId, 'flag=>  ', flag, '  likeIsClicked=>', likeIsClicked, 'isAddcomment =>', isAddcomment, '   likeDisLikeFalg=> ', likeDisLikeFalg);\n  var likeBtn = useCallback(function (commentid, flag, likeDislike) {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\" || likeDisLikeFalg) {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      //alert('likeDisLikeFalg->' , likeDisLikeFalg); \n      if (likeDislike === \"good\") {\n        setGoodCount(parseInt(good) + 1);\n      } else {\n        setBadCount(parseInt(bad) + 1);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid: commentid,\n          postFlag: postFlag,\n          postId: postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName: nickName\n        }\n      });\n    }\n\n    alert(\"\".concat(likeDislike));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 87\n    }\n  }), comment, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9] \", commentId, __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'good');\n    },\n    twoToneColor: realFlag !== flag && likeDisLikeFalg === 'good' ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }), isAddcomment ? 0 : goodCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: function onClick() {\n      return likeBtn(commentId, flag, 'bad');\n    },\n    twoToneColor: realFlag !== flag && likeDisLikeFalg === 'bad' ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), badCount, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }))));\n};\n\n_s(Comments1001, \"NsVbnSMIVD2Jc+Z9/Rf4D5rnzkY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments1001;\nexport default Comments1001;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments1001\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","key","postFlag","nickName","postId","userInfo","commentId","comment","who","flag","good","bad","createdDate","isAddcomment","likeDisLikeFalg","hello","realFlag","dispatch","state","mainPosts_1001","clickCommentId","likeIsClicked","parseInt","goodCount","setGoodCount","badCount","setBadCount","like","setLike","disLike","setDisLike","console","log","likeBtn","commentid","likeDislike","alert","type","data","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({\r\n                      key,\r\n                      postFlag,\r\n                      nickName,\r\n                      postId,\r\n                      userInfo,\r\n\r\n                      commentId,\r\n                      comment,\r\n                      who,\r\n                      flag,\r\n                      good,\r\n                      bad,\r\n                      createdDate,\r\n                      isAddcomment,\r\n                      likeDisLikeFalg,\r\n                      hello, \r\n\r\n\r\n                      realFlag\r\n\r\n                    })=>{\r\n\r\n    const dispatch = useDispatch();       \r\n    const {clickCommentId,\r\n           likeIsClicked } =useSelector((state)=>state.mainPosts_1001); \r\n\r\n    const [goodCount,setGoodCount] = useState(parseInt(good));  \r\n    const [badCount,setBadCount]   = useState(parseInt(bad)); \r\n    const [like , setLike]        = useState(false); \r\n    const [disLike , setDisLike]  = useState(false); \r\n\r\n    console.log('realFlag=>' , realFlag,'good=>   ' , good,'bad=>  ',bad , '   clickCommentId=> ' , hello , '  commentId=>  ' , commentId, 'flag=>  ' , flag,'  likeIsClicked=>',likeIsClicked,'isAddcomment =>' , isAddcomment,'   likeDisLikeFalg=> ',likeDisLikeFalg); \r\n\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n          //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag===\"Y\" || likeDisLikeFalg){\r\n          \r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            //alert('likeDisLikeFalg->' , likeDisLikeFalg); \r\n            if(likeDislike === \"good\"){\r\n\r\n              setGoodCount(parseInt(good)+1); \r\n\r\n            }else{\r\n\r\n              setBadCount(parseInt(bad)+1);\r\n\r\n              }\r\n\r\n          //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n    \r\n        }\r\n\r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div  className='divTableRow' >\r\n                    <div  className=\"divTableCell\">\r\n                    <b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9] {commentId}\r\n               \r\n                        <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={realFlag !== flag && likeDisLikeFalg ==='good' ? \"#ff0000\" : \"#1ba640\"}/>{isAddcomment ? 0:goodCount}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'bad')} twoToneColor={realFlag !== flag  && likeDisLikeFalg ==='bad' ? \"#ff0000\" : \"#1ba640\"} />{badCount}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}