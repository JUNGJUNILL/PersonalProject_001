{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_comments.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone } from '@ant-design/icons';\nimport { MAINPOSTS_1001_COMMENTS_REQUEST, MAINPOSTS_1001_COMMENTLIKE_REQUEST } from '../../reducers/mainPosts_1001';\n\nconst Comments1001 = ({\n  createdDate,\n  comment,\n  userNickName,\n  commentId,\n  flag,\n  good,\n  bad,\n  nickName,\n  postFlag,\n  postId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  const {\n    0: disLike,\n    1: setDisLike\n  } = useState(false);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n\n  const test = (p1, p2, p3) => {//  likeBtn(p1,p2,p3); \n  };\n\n  const likeBtn = useCallback((commentid, flag, likeDislike) => {\n    if (!userInfo) {\n      alert('로그인이 필요한 서비스 입니다.');\n      return;\n    } //alert(`${commentid},${flag},${likeDislike}`)\n    //문자 리터럴로 해야 alert에 변수 들어가진다.\n\n\n    if (flag === \"Y\") {\n      alert('이미 좋아요! 싫어요! 했습니다.');\n      return;\n    } else {\n      if (likeDislike === \"good\") {\n        setLike(true);\n      } else {\n        setDisLike(true);\n      } //댓글 좋아요!\n\n\n      dispatch({\n        type: MAINPOSTS_1001_COMMENTLIKE_REQUEST,\n        data: {\n          commentid,\n          postFlag,\n          postId,\n          flag: likeDislike,\n          who: userInfo,\n          nickName\n        }\n      });\n    } //댓글 리스트 \n\n\n    dispatch({\n      type: MAINPOSTS_1001_COMMENTS_REQUEST,\n      data: {\n        postId,\n        nickName,\n        postFlag,\n        who: userInfo\n      }\n    });\n    alert(`${likeDislike}`);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, userNickName), \" \\xA0 \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 50\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 96\n    }\n  }), comment, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }\n  }), \"\\uB2F5\\uAE00 [9]\", __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'good'),\n    twoToneColor: like ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), good, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: () => likeBtn(commentId, flag, 'good'),\n    twoToneColor: disLike ? \"#ff0000\" : \"#1ba640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 162\n    }\n  }), bad, \"\\xA0\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 301\n    }\n  }))));\n};\n\nexport default Comments1001;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_comments.js"],"names":["React","useCallback","useEffect","useState","createRef","useDispatch","useSelector","custumDateFormat","DislikeTwoTone","LikeTwoTone","MAINPOSTS_1001_COMMENTS_REQUEST","MAINPOSTS_1001_COMMENTLIKE_REQUEST","Comments1001","createdDate","comment","userNickName","commentId","flag","good","bad","nickName","postFlag","postId","dispatch","like","setLike","disLike","setDisLike","userInfo","state","auth","test","p1","p2","p3","likeBtn","commentid","likeDislike","alert","type","data","who","marginTop","display","float"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState, createRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone} from '@ant-design/icons'\r\nimport \r\n    {\r\n     MAINPOSTS_1001_COMMENTS_REQUEST, \r\n     MAINPOSTS_1001_COMMENTLIKE_REQUEST,\r\n    } \r\nfrom '../../reducers/mainPosts_1001'; \r\n\r\nconst Comments1001 = ({createdDate,comment,userNickName,commentId,flag,good,bad,nickName,postFlag,postId}) =>{\r\n\r\n    const dispatch = useDispatch(); \r\n    const [like , setLike]  = useState(false); \r\n    const [disLike , setDisLike]  = useState(false); \r\n    const {userInfo}        = useSelector((state)=>state.auth);\r\n\r\n    const test = (p1,p2,p3)=>{\r\n\r\n      //  likeBtn(p1,p2,p3); \r\n    }\r\n    const likeBtn =useCallback((commentid,flag,likeDislike)=>{\r\n        if(!userInfo){\r\n          alert('로그인이 필요한 서비스 입니다.'); \r\n          return;\r\n        }\r\n      \r\n        //alert(`${commentid},${flag},${likeDislike}`)\r\n        //문자 리터럴로 해야 alert에 변수 들어가진다.\r\n    \r\n        if(flag === \"Y\"){\r\n          alert('이미 좋아요! 싫어요! 했습니다.'); \r\n          return; \r\n    \r\n        }else{\r\n            if(likeDislike ===\"good\"){\r\n                setLike(true); \r\n            }else{\r\n                setDisLike(true); \r\n            }\r\n\r\n        //댓글 좋아요!\r\n          dispatch({\r\n            type:MAINPOSTS_1001_COMMENTLIKE_REQUEST, \r\n            data:{\r\n              commentid,\r\n              postFlag,\r\n              postId,\r\n              flag: likeDislike ,\r\n              who: userInfo,\r\n              nickName,\r\n            }\r\n        }); \r\n    \r\n        }\r\n    \r\n        //댓글 리스트 \r\n        dispatch({\r\n          type:MAINPOSTS_1001_COMMENTS_REQUEST, \r\n          data:{\r\n            postId,\r\n            nickName,\r\n            postFlag,\r\n            who:userInfo, \r\n          }\r\n      }); \r\n       alert(`${likeDislike}`); \r\n      \r\n      },[]); \r\n\r\n    return (\r\n                <div className='divTableRow' >\r\n                    <div className=\"divTableCell\">\r\n                    <b>{userNickName}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br/>\r\n                    {comment}<br />\r\n                    답글 [9]\r\n               \r\n                        <div style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>{/*#1ba640*/}\r\n                            <LikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={like ? \"#ff0000\" : \"#1ba640\"}/>{good}&nbsp;&nbsp;&nbsp;&nbsp;<DislikeTwoTone onClick={()=>likeBtn(commentId,flag,'good')} twoToneColor={disLike ? \"#ff0000\" : \"#1ba640\"} />{bad}&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments1001; "]},"metadata":{},"sourceType":"module"}