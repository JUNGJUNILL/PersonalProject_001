{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\mainPosts_1001\\\\mainPosts_1001_commentByComments.js\";\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState, createRef, memo } from 'react';\nimport custumDateFormat from '../../utilComponent/custumDateFormat';\nimport { DislikeTwoTone, LikeTwoTone, UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\n\nvar Comment1001ByComments = function Comment1001ByComments(_ref) {\n  var key = _ref.key,\n      postFlag = _ref.postFlag,\n      nickName = _ref.nickName,\n      postId = _ref.postId,\n      userInfo = _ref.userInfo,\n      commentId = _ref.commentId,\n      byCommentId = _ref.byCommentId,\n      comment = _ref.comment,\n      who = _ref.who,\n      good = _ref.good,\n      bad = _ref.bad,\n      flag = _ref.flag,\n      createdDate = _ref.createdDate,\n      commentByCommentLikeBtn = _ref.commentByCommentLikeBtn,\n      clickedComponent = _ref.clickedComponent,\n      likeDislikeflag = _ref.likeDislikeflag;\n  return __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell02\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"\\u2514\\xA0\", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }\n  }, who), \" \\xA0 \", __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 48\n    }\n  }, custumDateFormat(createdDate)), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 94\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", comment, \" ==\", flag, __jsx(\"div\", {\n    style: {\n      marginTop: \"1%\",\n      display: \"block\",\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(LikeTwoTone, {\n    onClick: function onClick() {\n      return commentByCommentLikeBtn(byCommentId, flag, 'good');\n    },\n    twoToneColor: clickedComponent && likeDislikeflag === 'good' ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), clickedComponent && likeDislikeflag === 'good' ? parseInt(good) + 1 : good, \"\\xA0\\xA0\\xA0\", __jsx(DislikeTwoTone, {\n    onClick: function onClick() {\n      return commentByCommentLikeBtn(byCommentId, flag, 'bad');\n    },\n    twoToneColor: clickedComponent && likeDislikeflag === 'bad' ? \"#ff0000\" : \"#1ba640\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), clickedComponent && likeDislikeflag === 'bad' ? parseInt(bad) + 1 : bad, \"\\xA0\\xA0\\xA0\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_c = Comment1001ByComments;\nexport default _c2 = memo(Comment1001ByComments);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comment1001ByComments\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/mainPosts_1001/mainPosts_1001_commentByComments.js"],"names":["React","useCallback","useEffect","useState","createRef","memo","custumDateFormat","DislikeTwoTone","LikeTwoTone","UserOutlined","FieldTimeOutlined","Comment1001ByComments","key","postFlag","nickName","postId","userInfo","commentId","byCommentId","comment","who","good","bad","flag","createdDate","commentByCommentLikeBtn","clickedComponent","likeDislikeflag","marginTop","display","parseInt"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,IAA5D,QAAwE,OAAxE;AAEA,OAAOC,gBAAP,MAA8B,sCAA9B;AACA,SAAQC,cAAR,EAAuBC,WAAvB,EAAqCC,YAArC,EAAmDC,iBAAnD,QAA2E,mBAA3E;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAqBM;AAAA,MApBJC,GAoBI,QApBJA,GAoBI;AAAA,MAnBJC,QAmBI,QAnBJA,QAmBI;AAAA,MAlBJC,QAkBI,QAlBJA,QAkBI;AAAA,MAjBJC,MAiBI,QAjBJA,MAiBI;AAAA,MAhBJC,QAgBI,QAhBJA,QAgBI;AAAA,MAfJC,SAeI,QAfJA,SAeI;AAAA,MAbJC,WAaI,QAbJA,WAaI;AAAA,MAZJC,OAYI,QAZJA,OAYI;AAAA,MAXJC,GAWI,QAXJA,GAWI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,GAQI,QARJA,GAQI;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,uBAKI,QALJA,uBAKI;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAChC,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,GAAJ,CADf,YACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQd,gBAAgB,CAACkB,WAAD,CAAxB,CADnC,EACiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjF,sBAEiCL,OAFjC,SAE6CI,IAF7C,EAGI;AAAM,IAAA,KAAK,EAAE;AAACK,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,OAAO,EAAC,OAAxB;AAAgC,eAAM;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAA,aAAIJ,uBAAuB,CAACP,WAAD,EAAaK,IAAb,EAAkB,MAAlB,CAA3B;AAAA,KAAtB;AAA4E,IAAA,YAAY,EAAEG,gBAAgB,IAAIC,eAAe,KAAG,MAAtC,GAA+C,SAA/C,GAA2D,SAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACsKD,gBAAgB,IAAIC,eAAe,KAAG,MAAtC,GAA+CG,QAAQ,CAACT,IAAD,CAAR,GAAe,CAA9D,GAAgEA,IADtO,kBAGI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAE;AAAA,aAAII,uBAAuB,CAACP,WAAD,EAAaK,IAAb,EAAkB,KAAlB,CAA3B;AAAA,KAAzB;AAA8E,IAAA,YAAY,EAAEG,gBAAgB,IAAIC,eAAe,KAAG,KAAtC,GAA8C,SAA9C,GAA0D,SAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAGwKD,gBAAgB,IAAIC,eAAe,KAAG,KAAtC,GAA8CG,QAAQ,CAACR,GAAD,CAAR,GAAc,CAA5D,GAA8DA,GAHtO,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAHJ,CADJ,CADJ;AAeH,CArCD;;KAAMX,qB;AAuCN,qBAAeN,IAAI,CAACM,qBAAD,CAAnB","sourcesContent":["import React, { useCallback,useEffect, useState, createRef, memo } from 'react'\r\n\r\nimport custumDateFormat from  '../../utilComponent/custumDateFormat';\r\nimport {DislikeTwoTone,LikeTwoTone , UserOutlined, FieldTimeOutlined} from '@ant-design/icons'\r\n\r\nconst Comment1001ByComments = ({\r\n                                key,\r\n                                postFlag,\r\n                                nickName,\r\n                                postId,\r\n                                userInfo,\r\n                                commentId,\r\n\r\n                                byCommentId,\r\n                                comment,\r\n                                who,\r\n\r\n                                good,\r\n                                bad,\r\n                                flag,\r\n                                createdDate,\r\n                                commentByCommentLikeBtn,\r\n\r\n                                clickedComponent,\r\n                                likeDislikeflag\r\n\r\n                                })=>{\r\n    return (\r\n        <div className='divTableRow' >\r\n            <div className=\"divTableCell02\">\r\n                    â””&nbsp;<b>{who}</b> &nbsp; <small>{custumDateFormat(createdDate)}</small><br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;{comment} =={flag}\r\n                <div  style={{marginTop:\"1%\",display:\"block\",float:\"right\"}}>\r\n                    <LikeTwoTone onClick={()=>commentByCommentLikeBtn(byCommentId,flag,'good')} twoToneColor={clickedComponent && likeDislikeflag==='good' ? \"#ff0000\" : \"#1ba640\"}/>{clickedComponent && likeDislikeflag==='good' ? parseInt(good)+1:good}\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <DislikeTwoTone onClick={()=>commentByCommentLikeBtn(byCommentId,flag,'bad')} twoToneColor={clickedComponent && likeDislikeflag==='bad' ? \"#ff0000\" : \"#1ba640\"} />{clickedComponent && likeDislikeflag==='bad' ? parseInt(bad)+1:bad}\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <br />\r\n                </div> \r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default memo(Comment1001ByComments); "]},"metadata":{},"sourceType":"module"}