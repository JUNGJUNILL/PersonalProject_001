{"ast":null,"code":"var _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\components\\\\testComponent\\\\Nicola.js\";\nvar __jsx = React.createElement;\nimport React, { memo, useCallback, useEffect, useState, createRef } from 'react';\nconst Nicola = memo(({\n  name\n}) => {\n  //memo를 씌움으로써 \n  //name props가 바뀔 떄만 해당 컴포넌트가 렌더링되게 \n  //(필요없는 렌더링을 막을 때 '리엑트 메모'는 날 구원할 것이다.)\n  const {\n    0: childeCount,\n    1: setChildeCount\n  } = useState(0);\n  console.log('Childe');\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, name, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 20\n    }\n  }), childeCount, \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }), __jsx(\"button\", {\n    onClick: () => setChildeCount(childeCount + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"\\uC790\\uC2DD \\uD074\\uB9AD\"));\n});\nexport default Nicola;","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/components/testComponent/Nicola.js"],"names":["React","memo","useCallback","useEffect","useState","createRef","Nicola","name","childeCount","setChildeCount","console","log"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,IAAhB,EAAqBC,WAArB,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,SAAtD,QAAuE,OAAvE;AAIA,MAAMC,MAAM,GAAEL,IAAI,CAAC,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAU;AACzB;AACA;AACA;AAGF,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,CAAD,CAA9C;AACEM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAN,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,EACCC,WADD,OACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEA;AAAQ,IAAA,OAAO,EAAE,MAAIC,cAAc,CAACD,WAAW,GAAC,CAAb,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADJ;AAOH,CAhBiB,CAAlB;AAkBA,eAAeF,MAAf","sourcesContent":["\r\nimport React, { memo,useCallback,useEffect, useState, createRef } from 'react'\r\n\r\n\r\n\r\nconst Nicola= memo(({name})=>{\r\n    //memo를 씌움으로써 \r\n    //name props가 바뀔 떄만 해당 컴포넌트가 렌더링되게 \r\n    //(필요없는 렌더링을 막을 때 '리엑트 메모'는 날 구원할 것이다.)\r\n\r\n    \r\n  const [childeCount, setChildeCount] = useState(0); \r\n    console.log('Childe')\r\n\r\n    return(\r\n        <div>{name}<br />\r\n        {childeCount} <br />\r\n        <button onClick={()=>setChildeCount(childeCount+1)}>자식 클릭</button>\r\n        </div>\r\n    )\r\n\r\n}); \r\n\r\nexport default Nicola;"]},"metadata":{},"sourceType":"module"}