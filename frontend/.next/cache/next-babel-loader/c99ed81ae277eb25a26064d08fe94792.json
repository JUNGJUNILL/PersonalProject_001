{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\emp.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pagenation from '../utilComponent/Pagenation';\nimport { EMP_LIST_REQUEST } from '../reducers/emp';\n\nvar Emp = function Emp() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      userInfo = _useSelector.userInfo,\n      joined = _useSelector.joined;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.emp;\n  }),\n      emplist = _useSelector2.emplist; //store의 state를 불러오는 hook \n  //store의 state 중에서 count의 state를 불러온다.\n\n\n  var _useState = useState(0),\n      nowPage = _useState[0],\n      setNowPage = _useState[1]; //현재 페이지\n\n\n  var _useState2 = useState(5),\n      postsPerPage = _useState2[0]; //한 페이지당 list 수 \n\n\n  var _useState3 = useState(5),\n      groupPage = _useState3[0],\n      setGroupPage = _useState3[1]; //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\n\n\n  var _useState4 = useState([]),\n      nowGroupPageArray = _useState4[0],\n      setNowGroupPageArray = _useState4[1]; //현제 페이징 그룹 배열\n\n\n  var getEmplist = useCallback(function () {}, []);\n  useEffect(function () {\n    dispatch({\n      type: EMP_LIST_REQUEST,\n      data: {\n        name: '',\n        job: '',\n        currentPage: nowPage,\n        maxPage: postsPerPage\n      }\n    });\n  }, []); // const currentPosts = emplist.slice(indexOfFirstPost,indexOfLastPost); //0~5\n\n  /*\r\n  1 페이지 = 1*5 =5 \r\n            5-5 =0 \r\n            0~5 \r\n  2 페이지 = 2*5=10 \r\n            10-5=5 \r\n            5~10\r\n  3 페이지 = 3*5=15 \r\n  */\n\n  var pagenate = useCallback(function (pageNumber, groupPageArray) {\n    setNowPage(pageNumber);\n    nowGroupPageArray.length = 0;\n    setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\n    var indexOfLastPost = pageNumber * postsPerPage;\n    var indexOfFirstPost = indexOfLastPost - postsPerPage;\n    dispatch({\n      type: EMP_LIST_REQUEST,\n      data: {\n        name: '',\n        job: '',\n        currentPage: indexOfFirstPost,\n        maxPage: postsPerPage\n      }\n    });\n  }, [nowPage, nowGroupPageArray]);\n  return __jsx(React.Fragment, null, userInfo && 로그인됨, !userInfo && 로그인안됨, __jsx(\"div\", {\n    className: \"divTable\",\n    style: {\n      marginTop: '3%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableBody\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableRow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }\n  }, \"\\uC0AC\\uC6D0\\uBC88\\uD638\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }\n  }, \"\\uC0AC\\uC6D0\\uBA85\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 22\n    }\n  }, \"\\uC9C1\\uCC45\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }\n  }, \"\\uB9E4\\uB2C8\\uC838\\uBC88\\uD638\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }\n  }, \"\\uC785\\uC0AC\\uC77C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }\n  }, \"\\uAE09\\uC5EC\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }\n  }, \"\\uC778\\uC13C\"), __jsx(\"div\", {\n    className: \"divTableCell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }\n  }, \"\\uBD80\\uC11C\\uBC88\\uD638\")), emplist && emplist.map(function (v, i) {\n    return __jsx(\"div\", {\n      className: \"divTableRow\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }\n    }, v.EMPNO), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    }, v.ENAME), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }, v.JOB), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }\n    }, v.MGR), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }\n    }, v.HIREDATE), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }\n    }, v.SAL), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }\n    }, v.COMM), __jsx(\"div\", {\n      className: \"divTableCell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }\n    }, v.DEPTNO));\n  }))), __jsx(Pagenation, {\n    pagenate: pagenate,\n    dataLength: emplist.length,\n    postsPerPage: postsPerPage,\n    nowPage: nowPage,\n    groupPage: groupPage,\n    groupPageArray: nowGroupPageArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Emp, \"VZEZSgYxvX8hyjQQvsWRXwO+Mys=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Emp;\nexport default Emp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/pages/emp.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Pagenation","EMP_LIST_REQUEST","Emp","dispatch","state","auth","userInfo","joined","emp","emplist","nowPage","setNowPage","postsPerPage","groupPage","setGroupPage","nowGroupPageArray","setNowGroupPageArray","getEmplist","type","data","name","job","currentPage","maxPage","pagenate","pageNumber","groupPageArray","length","concat","indexOfLastPost","indexOfFirstPost","로그인됨","로그인안됨","marginTop","map","v","i","EMPNO","ENAME","JOB","MGR","HIREDATE","SAL","COMM","DEPTNO"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Pagenation from '../utilComponent/Pagenation'\r\nimport \r\n    {EMP_LIST_REQUEST,} \r\nfrom '../reducers/emp'; \r\n\r\n\r\nconst Emp = () =>{\r\n\r\n\r\n    const dispatch = useDispatch(); \r\n    const {userInfo, joined} = useSelector((state)=>state.auth);\r\n    const {emplist}    = useSelector(state => state.emp); \r\n                                 //store의 state를 불러오는 hook \r\n                                 //store의 state 중에서 count의 state를 불러온다.\r\n\r\n    const [nowPage,setNowPage] = useState(0);                       //현재 페이지\r\n    const [postsPerPage] = useState(5);                             //한 페이지당 list 수 \r\n    const [groupPage , setGroupPage] = useState(5);                 //페이징 그룹 당 수  1~5 , 6~10 , 11~15 ...\r\n    const [nowGroupPageArray,setNowGroupPageArray] =useState([]);  //현제 페이징 그룹 배열\r\n\r\n    const getEmplist = useCallback(()=>{\r\n          \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:EMP_LIST_REQUEST, \r\n            data:{name:'',\r\n                  job:'',\r\n                  currentPage:nowPage,\r\n                  maxPage:postsPerPage\r\n                 }, \r\n        })\r\n      },[]); \r\n\r\n\r\n     // const currentPosts = emplist.slice(indexOfFirstPost,indexOfLastPost); //0~5\r\n      /*\r\n      1 페이지 = 1*5 =5 \r\n                5-5 =0 \r\n                0~5 \r\n      2 페이지 = 2*5=10 \r\n                10-5=5 \r\n                5~10\r\n      3 페이지 = 3*5=15 \r\n      */\r\n    \r\n\r\n      const pagenate =useCallback((pageNumber, groupPageArray)=>{\r\n          setNowPage(pageNumber); \r\n          nowGroupPageArray.length=0; \r\n          setNowGroupPageArray(nowGroupPageArray.concat(groupPageArray));\r\n          const indexOfLastPost = pageNumber * postsPerPage;   \r\n          const indexOfFirstPost = indexOfLastPost - postsPerPage;  \r\n\r\n        dispatch({\r\n          type:EMP_LIST_REQUEST, \r\n          data:{name:'',\r\n                job:'',\r\n                currentPage:indexOfFirstPost,\r\n                maxPage:postsPerPage\r\n               }, \r\n      });\r\n\r\n\r\n      },[nowPage,nowGroupPageArray]); \r\n                                 \r\n                              \r\n    return (\r\n        <>\r\n        {userInfo && 로그인됨}\r\n        {!userInfo && 로그인안됨}\r\n\r\n        \r\n         <div className='divTable' style={{marginTop:'3%'}}>\r\n           <div className='divTableBody'>\r\n           <div className='divTableRow'>\r\n                     <div className='divTableCell'>사원번호</div>\r\n                     <div className='divTableCell'>사원명</div>\r\n                     <div className='divTableCell'>직책</div>\r\n                     <div className='divTableCell'>매니져번호</div>\r\n                     <div className='divTableCell'>입사일</div>\r\n                     <div className='divTableCell'>급여</div>\r\n                     <div className='divTableCell'>인센</div>\r\n                     <div className='divTableCell'>부서번호</div>\r\n           </div>\r\n            {emplist && emplist.map((v,i)=>(\r\n                <div className='divTableRow' key={i}>\r\n                     <div className='divTableCell'>{v.EMPNO}</div>\r\n                     <div className='divTableCell'>{v.ENAME}</div>\r\n                     <div className='divTableCell'>{v.JOB}</div>\r\n                     <div className='divTableCell'>{v.MGR}</div>\r\n                     <div className='divTableCell'>{v.HIREDATE}</div>\r\n                     <div className='divTableCell'>{v.SAL}</div>\r\n                     <div className='divTableCell'>{v.COMM}</div>\r\n                     <div className='divTableCell'>{v.DEPTNO}</div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n         </div>\r\n        <Pagenation pagenate={pagenate} dataLength={emplist.length} postsPerPage={postsPerPage} nowPage={nowPage} groupPage={groupPage} groupPageArray={nowGroupPageArray} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Emp;"]},"metadata":{},"sourceType":"module"}