{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaLoadUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sagaJoin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchJoin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(sagaLogin),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(authSag);\n\nimport axios from 'axios';\nimport jwtDeCoder from 'jwt-decode';\nimport { all, fork, takeLatest, takeEvery, put, delay, call } from 'redux-saga/effects';\nimport { JOIN_REQUEST, JOIN_SUCCESS, JOIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/auth'; //유저정보 유지 사이클 \n//------------------------------------------------------------------------\n\nfunction APILoadUser() {\n  return axios.get('/auth/', {\n    withCredentials: true\n  });\n}\n\n_c = APILoadUser;\n\nfunction sagaLoadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaLoadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(APILoadUser);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('LOAD_USER_FAILURE=>', _context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, sagaLoadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //------------------------------------------------------------------------\n//회원가입 사이클 \n//------------------------------------------------------------------------\n\n\nfunction APIJoin(data) {\n  console.log('data==>', data);\n  return axios.post('/auth/join', {\n    data: data\n  }, {\n    withCredentials: true\n  });\n}\n\n_c2 = APIJoin;\n\nfunction sagaJoin(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function sagaJoin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(action, action.data);\n          _context3.next = 4;\n          return call(APIJoin, action.data);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: JOIN_SUCCESS,\n            data: result\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: JOIN_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchJoin() {\n  return _regeneratorRuntime.wrap(function watchJoin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(JOIN_REQUEST, sagaJoin);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //------------------------------------------------------------------------\n//로그인 사이클\n//------------------------------------------------------------------------\n\n\nfunction APILogin(data) {\n  //jwt 로그인\n  return axios.post('/auth/login', {\n    data: data\n  }, {\n    withCredentials: true\n  }); //passport local 로그인\n  //return axios.post('/auth/login',{data},{withCredentials:true});\n}\n\n_c3 = APILogin;\n\nfunction sagaLogin(action) {\n  var result, decoded;\n  return _regeneratorRuntime.wrap(function sagaLogin$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(APILogin, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('result', result.data.token);\n          decoded = jwtDeCoder(result.data.token);\n          console.log('decode=>', decoded); // yield put({\n          //     type:LOGIN_SUCCESS,\n          //     data: result.data,\n          // }); \n\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          alert('로그인 에러');\n          _context5.next = 14;\n          return put({\n            type: LOGIN_FAILURE,\n            error: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOGIN_REQUEST, sagaLogin);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //------------------------------------------------------------------------\n\n\nexport default function authSag() {\n  return _regeneratorRuntime.wrap(function authSag$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchJoin), fork(watchLogin), fork(watchLoadUser)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"APILoadUser\");\n$RefreshReg$(_c2, \"APIJoin\");\n$RefreshReg$(_c3, \"APILogin\");","map":{"version":3,"sources":["C:/git Repository/PersonalProject_001/frontend/sagas/authSaga.js"],"names":["sagaLoadUser","watchLoadUser","sagaJoin","watchJoin","sagaLogin","watchLogin","authSag","axios","jwtDeCoder","all","fork","takeLatest","takeEvery","put","delay","call","JOIN_REQUEST","JOIN_SUCCESS","JOIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","APILoadUser","get","withCredentials","result","type","data","console","error","APIJoin","log","post","action","APILogin","token","decoded","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport jwtDeCoder from 'jwt-decode'\r\nimport {all,fork,takeLatest,takeEvery ,put, delay,call} from 'redux-saga/effects'; \r\nimport \r\n    {JOIN_REQUEST,\r\n     JOIN_SUCCESS,\r\n     JOIN_FAILURE,\r\n     LOGIN_REQUEST,\r\n     LOGIN_SUCCESS,\r\n     LOGIN_FAILURE, \r\n     LOAD_USER_REQUEST,\r\n     LOAD_USER_SUCCESS,\r\n     LOAD_USER_FAILURE,\r\n    } \r\nfrom '../reducers/auth'; \r\n\r\n\r\n//유저정보 유지 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APILoadUser(){\r\n\r\n    return axios.get('/auth/' , {withCredentials:true}); \r\n}\r\n\r\nfunction* sagaLoadUser(){\r\n\r\n    try{\r\n        const result = yield call(APILoadUser);\r\n    \r\n        yield put({\r\n                type:LOAD_USER_SUCCESS, \r\n                data: result.data,           \r\n        }); \r\n\r\n    }catch(e){\r\n        console.error('LOAD_USER_FAILURE=>' , e); \r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e, \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST,sagaLoadUser);\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//회원가입 사이클 \r\n//------------------------------------------------------------------------\r\nfunction APIJoin(data){\r\n    console.log('data==>' , data); \r\n    return axios.post('/auth/join',{data},{withCredentials:true}); \r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction* sagaJoin(action){\r\n    \r\n    try{\r\n       console.log(action, action.data);\r\n        const result = yield call(APIJoin,action.data); \r\n        yield put({\r\n            type:JOIN_SUCCESS,\r\n            data: result,\r\n        }); \r\n\r\n    }catch(e){\r\n\r\n      console.error(e); \r\n\r\n        yield put({\r\n            type:JOIN_FAILURE,\r\n            error:e, \r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction* watchJoin(){\r\n    yield takeLatest(JOIN_REQUEST,sagaJoin)\r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\n\r\n//로그인 사이클\r\n//------------------------------------------------------------------------\r\nfunction APILogin(data){\r\n\r\n    //jwt 로그인\r\n    return axios.post('/auth/login',{data},{withCredentials:true});\r\n\r\n    //passport local 로그인\r\n    //return axios.post('/auth/login',{data},{withCredentials:true});\r\n}\r\n\r\nfunction* sagaLogin(action){\r\n\r\n\r\n    try{\r\n        const result = yield call(APILogin,action.data); \r\n        \r\n        console.log('result' , result.data.token); \r\n        const decoded = jwtDeCoder(result.data.token); \r\n        console.log('decode=>' , decoded); \r\n        // yield put({\r\n        //     type:LOGIN_SUCCESS,\r\n        //     data: result.data,\r\n        // }); \r\n\r\n\r\n    }catch(e){\r\n        alert('로그인 에러'); \r\n        yield put({\r\n            type:LOGIN_FAILURE, \r\n            error:e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOGIN_REQUEST,sagaLogin); \r\n}\r\n//------------------------------------------------------------------------\r\n\r\n\r\nexport default function* authSag(){\r\n\r\n\r\n    yield all([\r\n        fork(watchJoin), \r\n        fork(watchLogin), \r\n        fork(watchLoadUser), \r\n        \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}