{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\git Repository\\\\PersonalProject_001\\\\frontend\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Item from '../components/testComponent/Item';\n\nvar Test = function Test() {\n  _s();\n\n  var _useState = useState([1, 2, 3]),\n      numbers = _useState[0],\n      setNumbers = _useState[1];\n\n  var _useState2 = useState([]),\n      array = _useState2[0],\n      setArray = _useState2[1];\n\n  var addNumber = function addNumber() {\n    setArray(_toConsumableArray(numbers)); //배열 추가 시 \n\n    setNumbers(function (prev) {\n      return [].concat(_toConsumableArray(prev), [prev.length + 1]);\n    });\n  };\n\n  useEffect(function () {\n    setArray(_toConsumableArray(numbers));\n  }, []);\n\n  var updateArray = function updateArray() {\n    setArray(_toConsumableArray(numbers));\n    numbers.map(function (v, i) {\n      if (v === 1) {\n        array[i] = numbers[i] + 1;\n      }\n    });\n    setArray(function (prev) {\n      return [].concat(_toConsumableArray(array), [prev]);\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, array.map(function (num) {\n    return __jsx(Item, {\n      key: num,\n      num: num,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    });\n  }), __jsx(\"div\", {\n    onClick: addNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Click\"), __jsx(\"div\", {\n    onClick: updateArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"UPDATE\"), __jsx(\"input\", {\n    type: \"text\",\n    value: array.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Test, \"Rtaer78abgkprNPGHONlCIUeGY0=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/git Repository/PersonalProject_001/frontend/pages/test.js"],"names":["React","useState","useEffect","Item","Test","numbers","setNumbers","array","setArray","addNumber","prev","length","updateArray","map","v","i","num"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,kCAAjB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAK;AAAA;;AAAA,kBAEgBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAFxB;AAAA,MAEPI,OAFO;AAAA,MAEEC,UAFF;;AAAA,mBAGYL,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGPM,KAHO;AAAA,MAGAC,QAHA;;AAMd,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,QAAQ,oBAAKH,OAAL,EAAR,CADsB,CAEpB;;AACAC,IAAAA,UAAU,CAAC,UAAAI,IAAI;AAAA,0CAAQA,IAAR,IAAcA,IAAI,CAACC,MAAL,GAAc,CAA5B;AAAA,KAAL,CAAV;AAED,GALH;;AAOET,EAAAA,SAAS,CAAC,YAAI;AAEZM,IAAAA,QAAQ,oBAAKH,OAAL,EAAR;AACD,GAHQ,EAGP,EAHO,CAAT;;AAKF,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAK;AAEvBJ,IAAAA,QAAQ,oBAAKH,OAAL,EAAR;AAEAA,IAAAA,OAAO,CAACQ,GAAR,CAAY,UAACC,CAAD,EAAGC,CAAH,EAAO;AACjB,UAAGD,CAAC,KAAG,CAAP,EAAS;AACPP,QAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWV,OAAO,CAACU,CAAD,CAAP,GAAW,CAAtB;AACD;AACF,KAJD;AAMAP,IAAAA,QAAQ,CAAC,UAAAE,IAAI;AAAA,0CAAQH,KAAR,IAAcG,IAAd;AAAA,KAAL,CAAR;AAED,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACM,GAAN,CAAU,UAAAG,GAAG;AAAA,WACZ,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,GAAG,EAAEA,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CADH,EAIE;AAAK,IAAA,OAAO,EAAEP,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAK,IAAA,OAAO,EAAEG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,KAAK,CAACI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAWH,CA3CD;;GAAMP,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Item from '../components/testComponent/Item'\r\n\r\n\r\nconst Test = () =>{\r\n\r\n    const [numbers, setNumbers] = useState([1, 2, 3]);\r\n    const [array, setArray] = useState([]); \r\n\r\n\r\n    const addNumber = () => {\r\n      setArray([...numbers]); \r\n        //배열 추가 시 \r\n        setNumbers(prev => [...prev, prev.length + 1]);\r\n\r\n      };\r\n\r\n      useEffect(()=>{\r\n\r\n        setArray([...numbers]); \r\n      },[]); \r\n\r\n    const updateArray = () =>{\r\n\r\n      setArray([...numbers]); \r\n\r\n      numbers.map((v,i)=>{\r\n        if(v===1){\r\n          array[i] = numbers[i]+1;  \r\n        }\r\n      })\r\n\r\n      setArray(prev => [...array,prev]);\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {array.map(num => (\r\n          <Item key={num} num={num}></Item>\r\n        ))}\r\n        <div onClick={addNumber}>Click</div>\r\n        <div onClick={updateArray}>UPDATE</div>\r\n        <input type=\"text\" value={array.length} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test; "]},"metadata":{},"sourceType":"module"}